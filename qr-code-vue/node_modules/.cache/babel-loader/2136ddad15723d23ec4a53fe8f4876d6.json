{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\designer\\ProcessDesigner.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\designer\\ProcessDesigner.vue","mtime":1704630437686},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\babel.config.js","mtime":1704630437199},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_Modeler","_interopRequireDefault","require","_defaultEmpty","_customTranslate","_zh","_bpmnJsTokenSimulation","_camundaDescriptor","_activitiDescriptor","_flowableDescriptor","_camunda","_activiti","_flowable","_xmlJs","_highlight","hljs","registerLanguage","_default2","exports","default","name","componentName","props","value","String","valueWatch","processId","processName","formId","Number","translations","Object","additionalModel","Array","moddleExtension","onlyCustomizeAddi","type","Boolean","onlyCustomizeModdle","simulation","keyboard","prefix","events","_default","headerButtonSize","validator","indexOf","headerButtonType","data","defaultZoom","previewModelVisible","simulationStatus","previewResult","previewType","recoverable","revocable","computed","additionalModules","Modules","prototype","toString","call","push","apply","_toConsumableArray2","TranslateModule","translate","customTranslate","translationsCN","tokenSimulation","camundaModdleExtension","flowableModdleExtension","activitiModdleExtension","moddleExtensions","Extensions","key","activiti","activitiModdleDescriptor","flowable","flowableModdleDescriptor","camunda","camundaModdleDescriptor","mounted","_this2","initBpmnModeler","createNewDiagram","$once","bpmnModeler","destroy","$emit","methods","BpmnModeler","container","$refs","bindTo","document","initModelListeners","_this3","EventBus","get","that","forEach","event","on","eventObj","eventName","replace","element","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","_yield$_this3$bpmnMod","xml","wrap","_callee$","_context","prev","next","canRedo","canUndo","saveXML","format","sent","t0","console","error","concat","message","stop","_x","arguments","_ref2","viewbox","scale","Math","floor","_this4","_callee2","newId","newName","xmlString","_yield$_this4$bpmnMod","warnings","_callee2$","_context2","Date","getTime","DefaultEmptyXML","importXML","length","warn","downloadProcess","_this5","_callee3","_this","_yield$_this5$bpmnMod","err","_this$setEncoded","href","filename","_yield$_this5$bpmnMod2","_err","svg","_this$setEncoded2","_href","_filename","downloadFunc","_callee3$","_context3","_downloadFunc","a","createElement","download","click","URL","revokeObjectURL","setEncoded","toUpperCase","saveSVG","abrupt","undefined","encodedData","encodeURIComponent","importLocalFile","file","refFile","files","reader","FileReader","readAsText","onload","xmlStr","result","downloadProcessAsXml","downloadProcessAsBpmn","downloadProcessAsSvg","processSimulation","toggleMode","processRedo","redo","processUndo","undo","processZoomIn","zoomStep","newZoom","Error","zoom","processZoomOut","processZoomTo","processReZoom","processRestart","elementsAlign","align","Align","Selection","SelectedElements","$message","warning","$confirm","confirmButtonText","cancelButtonText","then","trigger","previewProcessXML","_this6","_ref3","previewProcessJson","_this7","_ref4","convert","xml2json","spaces","processSave","_this8","_callee4","_yield$_this8$bpmnMod","_callee4$","_context4","$modal","msgError","highlightedCode","highlight"],"sources":["src/components/bpmnProcessDesigner/package/designer/ProcessDesigner.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-process-designer\">\r\n    <div class=\"my-process-designer__header\">\r\n      <slot name=\"control-header\"></slot>\r\n      <template v-if=\"!$slots['control-header']\">\r\n        <el-button-group key=\"file-control\">\r\n          <el-button :size=\"headerButtonSize\" icon=\"el-icon-folder-opened\" @click=\"$refs.refFile.click()\">打开文件</el-button>\r\n          <el-tooltip effect=\"light\">\r\n            <div slot=\"content\">\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"downloadProcessAsXml()\">下载为XML文件</el-button>\r\n              <br />\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"downloadProcessAsSvg()\">下载为SVG文件</el-button>\r\n              <br />\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"downloadProcessAsBpmn()\">下载为BPMN文件</el-button>\r\n            </div>\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-download\">下载文件</el-button>\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\">\r\n            <div slot=\"content\">\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"previewProcessXML\">预览XML</el-button>\r\n              <br />\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"previewProcessJson\">预览JSON</el-button>\r\n            </div>\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-view\">预览</el-button>\r\n          </el-tooltip>\r\n          <el-tooltip v-if=\"simulation\" effect=\"light\" :content=\"this.simulationStatus ? '退出模拟' : '开启模拟'\">\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-cpu\" @click=\"processSimulation\">\r\n              模拟\r\n            </el-button>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n        <el-button-group key=\"align-control\">\r\n          <el-tooltip effect=\"light\" content=\"向左对齐\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-left\" icon=\"el-icon-s-data\" @click=\"elementsAlign('left')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"向右对齐\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-right\" icon=\"el-icon-s-data\" @click=\"elementsAlign('right')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"向上对齐\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-top\" icon=\"el-icon-s-data\" @click=\"elementsAlign('top')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"向下对齐\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-bottom\" icon=\"el-icon-s-data\" @click=\"elementsAlign('bottom')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"水平居中\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-center\" icon=\"el-icon-s-data\" @click=\"elementsAlign('center')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"垂直居中\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-middle\" icon=\"el-icon-s-data\" @click=\"elementsAlign('middle')\" />\r\n          </el-tooltip>\r\n        </el-button-group>\r\n        <el-button-group key=\"scale-control\">\r\n          <el-tooltip effect=\"light\" content=\"缩小视图\">\r\n            <el-button :size=\"headerButtonSize\" :disabled=\"defaultZoom < 0.2\" icon=\"el-icon-zoom-out\" @click=\"processZoomOut()\" />\r\n          </el-tooltip>\r\n          <el-button :size=\"headerButtonSize\">{{ Math.floor(this.defaultZoom * 10 * 10) + \"%\" }}</el-button>\r\n          <el-tooltip effect=\"light\" content=\"放大视图\">\r\n            <el-button :size=\"headerButtonSize\" :disabled=\"defaultZoom > 4\" icon=\"el-icon-zoom-in\" @click=\"processZoomIn()\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"重置视图并居中\">\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-c-scale-to-original\" @click=\"processReZoom()\" />\r\n          </el-tooltip>\r\n        </el-button-group>\r\n        <el-button-group key=\"stack-control\">\r\n          <el-tooltip effect=\"light\" content=\"撤销\">\r\n            <el-button :size=\"headerButtonSize\" :disabled=\"!revocable\" icon=\"el-icon-refresh-left\" @click=\"processUndo()\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"恢复\">\r\n            <el-button :size=\"headerButtonSize\" :disabled=\"!recoverable\" icon=\"el-icon-refresh-right\" @click=\"processRedo()\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"重新绘制\">\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-refresh\" @click=\"processRestart\" />\r\n          </el-tooltip>\r\n        </el-button-group>\r\n        <el-button :size=\"headerButtonSize\" :type=\"headerButtonType\" icon=\"el-icon-plus\" @click=\"processSave\" :disabled = \"simulationStatus\">保存模型</el-button>\r\n      </template>\r\n      <!-- 用于打开本地文件-->\r\n      <input type=\"file\" id=\"files\" ref=\"refFile\" style=\"display: none\" accept=\".xml, .bpmn\" @change=\"importLocalFile\" />\r\n    </div>\r\n    <div class=\"my-process-designer__container\">\r\n      <div class=\"my-process-designer__canvas\" ref=\"bpmn-canvas\"></div>\r\n    </div>\r\n    <el-dialog title=\"预览\" width=\"80%\" :visible.sync=\"previewModelVisible\" append-to-body destroy-on-close>\r\n      <pre><code class=\"hljs\" v-html=\"highlightedCode(previewType, previewResult)\"></code></pre>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BpmnModeler from \"bpmn-js/lib/Modeler\";\r\nimport DefaultEmptyXML from \"./plugins/defaultEmpty\";\r\n// 翻译方法\r\nimport customTranslate from \"./plugins/translate/customTranslate\";\r\nimport translationsCN from \"./plugins/translate/zh\";\r\n// 模拟流转流程\r\nimport tokenSimulation from \"bpmn-js-token-simulation\";\r\n// 标签解析构建器\r\n// import bpmnPropertiesProvider from \"bpmn-js-properties-panel/lib/provider/bpmn\";\r\n// 标签解析 Moddle\r\nimport camundaModdleDescriptor from \"./plugins/descriptor/camundaDescriptor.json\";\r\nimport activitiModdleDescriptor from \"./plugins/descriptor/activitiDescriptor.json\";\r\nimport flowableModdleDescriptor from \"./plugins/descriptor/flowableDescriptor.json\";\r\n// 标签解析 Extension\r\nimport camundaModdleExtension from \"./plugins/extension-moddle/camunda\";\r\nimport activitiModdleExtension from \"./plugins/extension-moddle/activiti\";\r\nimport flowableModdleExtension from \"./plugins/extension-moddle/flowable\";\r\n// 引入json转换与高亮\r\nimport convert from \"xml-js\";\r\n\r\n// 代码高亮插件\r\nimport hljs from \"highlight.js/lib/highlight\";\r\nimport \"highlight.js/styles/github-gist.css\";\r\nhljs.registerLanguage(\"xml\", require(\"highlight.js/lib/languages/xml\"));\r\nhljs.registerLanguage(\"json\", require(\"highlight.js/lib/languages/json\"));\r\n\r\nexport default {\r\n  name: \"MyProcessDesigner\",\r\n  componentName: \"MyProcessDesigner\",\r\n  props: {\r\n    value: String, // xml 字符串\r\n    valueWatch: true, // xml 字符串的 watch 状态\r\n    processId: String, // 流程 key 标识\r\n    processName: String, // 流程 name 名字\r\n    formId: Number, // 流程 form 表单编号\r\n    translations: Object, // 自定义的翻译文件\r\n    additionalModel: [Object, Array], // 自定义model\r\n    moddleExtension: Object, // 自定义moddle\r\n    onlyCustomizeAddi: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    onlyCustomizeModdle: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    simulation: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    keyboard: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    prefix: {\r\n      type: String,\r\n      default: \"camunda\"\r\n    },\r\n    events: {\r\n      type: Array,\r\n      default: () => [\"element.click\"]\r\n    },\r\n    headerButtonSize: {\r\n      type: String,\r\n      default: \"small\",\r\n      validator: value => [\"default\", \"medium\", \"small\", \"mini\"].indexOf(value) !== -1\r\n    },\r\n    headerButtonType: {\r\n      type: String,\r\n      default: \"primary\",\r\n      validator: value => [\"default\", \"primary\", \"success\", \"warning\", \"danger\", \"info\"].indexOf(value) !== -1\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultZoom: 1,\r\n      previewModelVisible: false,\r\n      simulationStatus: false,\r\n      previewResult: \"\",\r\n      previewType: \"xml\",\r\n      recoverable: false,\r\n      revocable: false\r\n    };\r\n  },\r\n  computed: {\r\n    additionalModules() {\r\n      const Modules = [];\r\n      // 仅保留用户自定义扩展模块\r\n      if (this.onlyCustomizeAddi) {\r\n        if (Object.prototype.toString.call(this.additionalModel) === \"[object Array]\") {\r\n          return this.additionalModel || [];\r\n        }\r\n        return [this.additionalModel];\r\n      }\r\n\r\n      // 插入用户自定义扩展模块\r\n      if (Object.prototype.toString.call(this.additionalModel) === \"[object Array]\") {\r\n        Modules.push(...this.additionalModel);\r\n      } else {\r\n        this.additionalModel && Modules.push(this.additionalModel);\r\n      }\r\n\r\n      // 翻译模块\r\n      const TranslateModule = {\r\n        translate: [\"value\", customTranslate(this.translations || translationsCN)]\r\n      };\r\n      Modules.push(TranslateModule);\r\n\r\n      // 模拟流转模块\r\n      if (this.simulation) {\r\n        Modules.push(tokenSimulation);\r\n      }\r\n\r\n      // 根据需要的流程类型设置扩展元素构建模块\r\n      // if (this.prefix === \"bpmn\") {\r\n      //   Modules.push(bpmnModdleExtension);\r\n      // }\r\n      if (this.prefix === \"camunda\") {\r\n        Modules.push(camundaModdleExtension);\r\n      }\r\n      if (this.prefix === \"flowable\") {\r\n        Modules.push(flowableModdleExtension);\r\n      }\r\n      if (this.prefix === \"activiti\") {\r\n        Modules.push(activitiModdleExtension);\r\n      }\r\n\r\n      return Modules;\r\n    },\r\n    moddleExtensions() {\r\n      const Extensions = {};\r\n      // 仅使用用户自定义模块\r\n      if (this.onlyCustomizeModdle) {\r\n        return this.moddleExtension || null;\r\n      }\r\n\r\n      // 插入用户自定义模块\r\n      if (this.moddleExtension) {\r\n        for (let key in this.moddleExtension) {\r\n          Extensions[key] = this.moddleExtension[key];\r\n        }\r\n      }\r\n\r\n      // 根据需要的 \"流程类型\" 设置 对应的解析文件\r\n      if (this.prefix === \"activiti\") {\r\n        Extensions.activiti = activitiModdleDescriptor;\r\n      }\r\n      if (this.prefix === \"flowable\") {\r\n        Extensions.flowable = flowableModdleDescriptor;\r\n      }\r\n      if (this.prefix === \"camunda\") {\r\n        Extensions.camunda = camundaModdleDescriptor;\r\n      }\r\n\r\n      return Extensions;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initBpmnModeler();\r\n    this.createNewDiagram(this.value);\r\n    this.$once(\"hook:beforeDestroy\", () => {\r\n      if (this.bpmnModeler) this.bpmnModeler.destroy();\r\n      this.$emit(\"destroy\", this.bpmnModeler);\r\n      this.bpmnModeler = null;\r\n    });\r\n  },\r\n  methods: {\r\n    initBpmnModeler() {\r\n      if (this.bpmnModeler) return;\r\n      this.bpmnModeler = new BpmnModeler({\r\n        container: this.$refs[\"bpmn-canvas\"],\r\n        keyboard: this.keyboard ? { bindTo: document } : null,\r\n        additionalModules: this.additionalModules,\r\n        moddleExtensions: this.moddleExtensions\r\n      });\r\n      this.$emit(\"init-finished\", this.bpmnModeler);\r\n      this.initModelListeners();\r\n    },\r\n    initModelListeners() {\r\n      const EventBus = this.bpmnModeler.get(\"eventBus\");\r\n      const that = this;\r\n      // 注册需要的监听事件, 将. 替换为 - , 避免解析异常\r\n      this.events.forEach(event => {\r\n        EventBus.on(event, function(eventObj) {\r\n          let eventName = event.replace(/\\./g, \"-\");\r\n          let element = eventObj ? eventObj.element : null;\r\n          that.$emit(eventName, element, eventObj);\r\n        });\r\n      });\r\n      // 监听图形改变返回xml\r\n      EventBus.on(\"commandStack.changed\", async event => {\r\n        try {\r\n          this.recoverable = this.bpmnModeler.get(\"commandStack\").canRedo();\r\n          this.revocable = this.bpmnModeler.get(\"commandStack\").canUndo();\r\n          let { xml } = await this.bpmnModeler.saveXML({ format: true });\r\n          this.$emit(\"commandStack-changed\", event);\r\n          this.$emit(\"input\", xml);\r\n          this.$emit(\"change\", xml);\r\n        } catch (e) {\r\n          console.error(`[Process Designer Warn]: ${e.message || e}`);\r\n        }\r\n      });\r\n      // 监听视图缩放变化\r\n      this.bpmnModeler.on(\"canvas.viewbox.changed\", ({ viewbox }) => {\r\n        this.$emit(\"canvas-viewbox-changed\", { viewbox });\r\n        const { scale } = viewbox;\r\n        this.defaultZoom = Math.floor(scale * 100) / 100;\r\n      });\r\n    },\r\n    /* 创建新的流程图 */\r\n    async createNewDiagram(xml) {\r\n      // 将字符串转换成图显示出来\r\n      let newId = this.processId || `Process_${new Date().getTime()}`;\r\n      let newName = this.processName || `业务流程_${new Date().getTime()}`;\r\n      let xmlString = xml || DefaultEmptyXML(newId, newName, this.prefix);\r\n      try {\r\n        // console.log(this.bpmnModeler.importXML);\r\n        let { warnings } = await this.bpmnModeler.importXML(xmlString);\r\n        if (warnings && warnings.length) {\r\n          warnings.forEach(warn => console.warn(warn));\r\n        }\r\n      } catch (e) {\r\n        console.error(`[Process Designer Warn]: ${e?.message || e}`);\r\n      }\r\n    },\r\n\r\n    // 下载流程图到本地\r\n    async downloadProcess(type, name) {\r\n      try {\r\n        const _this = this;\r\n        // 按需要类型创建文件并下载\r\n        if (type === \"xml\" || type === \"bpmn\") {\r\n          const { err, xml } = await this.bpmnModeler.saveXML();\r\n          // 读取异常时抛出异常\r\n          if (err) {\r\n            console.error(`[Process Designer Warn ]: ${err.message || err}`);\r\n          }\r\n          let { href, filename } = _this.setEncoded(type.toUpperCase(), name, xml);\r\n          downloadFunc(href, filename);\r\n        } else {\r\n          const { err, svg } = await this.bpmnModeler.saveSVG();\r\n          // 读取异常时抛出异常\r\n          if (err) {\r\n            return console.error(err);\r\n          }\r\n          let { href, filename } = _this.setEncoded(\"SVG\", name, svg);\r\n          downloadFunc(href, filename);\r\n        }\r\n      } catch (e) {\r\n        console.error(`[Process Designer Warn ]: ${e.message || e}`);\r\n      }\r\n      // 文件下载方法\r\n      function downloadFunc(href, filename) {\r\n        if (href && filename) {\r\n          let a = document.createElement(\"a\");\r\n          a.download = filename; //指定下载的文件名\r\n          a.href = href; //  URL对象\r\n          a.click(); // 模拟点击\r\n          URL.revokeObjectURL(a.href); // 释放URL 对象\r\n        }\r\n      }\r\n    },\r\n\r\n    // 根据所需类型进行转码并返回下载地址\r\n    setEncoded(type, filename = \"diagram\", data) {\r\n      const encodedData = encodeURIComponent(data);\r\n      return {\r\n        filename: `${filename}.${type}`,\r\n        href: `data:application/${type === \"svg\" ? \"text/xml\" : \"bpmn20-xml\"};charset=UTF-8,${encodedData}`,\r\n        data: data\r\n      };\r\n    },\r\n\r\n    // 加载本地文件\r\n    importLocalFile() {\r\n      const that = this;\r\n      const file = this.$refs.refFile.files[0];\r\n      const reader = new FileReader();\r\n      reader.readAsText(file);\r\n      reader.onload = function() {\r\n        let xmlStr = this.result;\r\n        that.createNewDiagram(xmlStr);\r\n      };\r\n    },\r\n    /* ------------------------------------------------ refs methods ------------------------------------------------------ */\r\n    downloadProcessAsXml() {\r\n      this.downloadProcess(\"xml\");\r\n    },\r\n    downloadProcessAsBpmn() {\r\n      this.downloadProcess(\"bpmn\");\r\n    },\r\n    downloadProcessAsSvg() {\r\n      this.downloadProcess(\"svg\");\r\n    },\r\n    processSimulation() {\r\n      this.simulationStatus = !this.simulationStatus;\r\n      this.simulation && this.bpmnModeler.get(\"toggleMode\").toggleMode();\r\n    },\r\n    processRedo() {\r\n      this.bpmnModeler.get(\"commandStack\").redo();\r\n    },\r\n    processUndo() {\r\n      this.bpmnModeler.get(\"commandStack\").undo();\r\n    },\r\n    processZoomIn(zoomStep = 0.1) {\r\n      let newZoom = Math.floor(this.defaultZoom * 100 + zoomStep * 100) / 100;\r\n      if (newZoom > 4) {\r\n        throw new Error(\"[Process Designer Warn ]: The zoom ratio cannot be greater than 4\");\r\n      }\r\n      this.defaultZoom = newZoom;\r\n      this.bpmnModeler.get(\"canvas\").zoom(this.defaultZoom);\r\n    },\r\n    processZoomOut(zoomStep = 0.1) {\r\n      let newZoom = Math.floor(this.defaultZoom * 100 - zoomStep * 100) / 100;\r\n      if (newZoom < 0.2) {\r\n        throw new Error(\"[Process Designer Warn ]: The zoom ratio cannot be less than 0.2\");\r\n      }\r\n      this.defaultZoom = newZoom;\r\n      this.bpmnModeler.get(\"canvas\").zoom(this.defaultZoom);\r\n    },\r\n    processZoomTo(newZoom = 1) {\r\n      if (newZoom < 0.2) {\r\n        throw new Error(\"[Process Designer Warn ]: The zoom ratio cannot be less than 0.2\");\r\n      }\r\n      if (newZoom > 4) {\r\n        throw new Error(\"[Process Designer Warn ]: The zoom ratio cannot be greater than 4\");\r\n      }\r\n      this.defaultZoom = newZoom;\r\n      this.bpmnModeler.get(\"canvas\").zoom(newZoom);\r\n    },\r\n    processReZoom() {\r\n      this.defaultZoom = 1;\r\n      this.bpmnModeler.get(\"canvas\").zoom(\"fit-viewport\", \"auto\");\r\n    },\r\n    processRestart() {\r\n      this.recoverable = false;\r\n      this.revocable = false;\r\n      this.createNewDiagram(null);\r\n    },\r\n    elementsAlign(align) {\r\n      const Align = this.bpmnModeler.get(\"alignElements\");\r\n      const Selection = this.bpmnModeler.get(\"selection\");\r\n      const SelectedElements = Selection.get();\r\n      if (!SelectedElements || SelectedElements.length <= 1) {\r\n        this.$message.warning(\"请按住 Ctrl 键选择多个元素对齐\");\r\n        return;\r\n      }\r\n      this.$confirm(\"自动对齐可能造成图形变形，是否继续？\", \"警告\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      }).then(() => Align.trigger(SelectedElements, align));\r\n    },\r\n    /*-----------------------------    方法结束     ---------------------------------*/\r\n    previewProcessXML() {\r\n      this.bpmnModeler.saveXML({ format: true }).then(({ xml }) => {\r\n        this.previewResult = xml;\r\n        this.previewType = \"xml\";\r\n        this.previewModelVisible = true;\r\n      });\r\n    },\r\n    previewProcessJson() {\r\n      this.bpmnModeler.saveXML({ format: true }).then(({ xml }) => {\r\n        this.previewResult = convert.xml2json(xml, { spaces: 2 });\r\n        this.previewType = \"json\";\r\n        this.previewModelVisible = true;\r\n      });\r\n    },\r\n    /* ------------------------------------------------ 芋道源码 methods ------------------------------------------------------ */\r\n    async processSave() {\r\n      const { err, xml } = await this.bpmnModeler.saveXML();\r\n      // 读取异常时抛出异常\r\n      if (err) {\r\n        this.$modal.msgError('保存模型失败，请重试！')\r\n        return\r\n      }\r\n      // 触发 save 事件\r\n      this.$emit('save', xml)\r\n    },\r\n    /** 高亮显示 */\r\n    highlightedCode(previewType, previewResult) {\r\n      const result = hljs.highlight(previewType, previewResult || \"\", true);\r\n      return result.value || '&nbsp;';\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"}]}