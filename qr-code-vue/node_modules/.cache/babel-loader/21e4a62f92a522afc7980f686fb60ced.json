{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\processInstance\\create.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\processInstance\\create.vue","mtime":1704630437845},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\babel.config.js","mtime":1704630437199},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJDOi9Vc2Vycy84OTQyNS9JZGVhUHJvamVjdHMvcXItY29kZS12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzIikuZGVmYXVsdDsKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyIpOwp2YXIgX29iamVjdFNwcmVhZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkM6L1VzZXJzLzg5NDI1L0lkZWFQcm9qZWN0cy9xci1jb2RlLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RTcHJlYWQyLmpzIikpOwp2YXIgX2RlZmluaXRpb24gPSByZXF1aXJlKCJAL2FwaS9icG0vZGVmaW5pdGlvbiIpOwp2YXIgX2RpY3QgPSByZXF1aXJlKCJAL3V0aWxzL2RpY3QiKTsKdmFyIF9mb3JtR2VuZXJhdG9yID0gcmVxdWlyZSgiQC91dGlscy9mb3JtR2VuZXJhdG9yIik7CnZhciBfUGFyc2VyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAL2NvbXBvbmVudHMvcGFyc2VyL1BhcnNlciIpKTsKdmFyIF9wcm9jZXNzSW5zdGFuY2UgPSByZXF1aXJlKCJAL2FwaS9icG0vcHJvY2Vzc0luc3RhbmNlIik7Ci8vIOa1geeoi+WunuS+i+eahOWPkei1twp2YXIgX2RlZmF1bHQgPSBleHBvcnRzLmRlZmF1bHQgPSB7CiAgbmFtZTogIlByb2Nlc3NJbnN0YW5jZUNyZWF0ZSIsCiAgY29tcG9uZW50czogewogICAgUGFyc2VyOiBfUGFyc2VyLmRlZmF1bHQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDpga7nvanlsYIKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgLy8g6KGo5qC85pWw5o2uCiAgICAgIGxpc3Q6IFtdLAogICAgICAvLyDmtYHnqIvooajljZXor6bmg4UKICAgICAgZGV0YWlsRm9ybTogewogICAgICAgIGZpZWxkczogW10KICAgICAgfSwKICAgICAgLy8gQlBNTiDmlbDmja4KICAgICAgYnBtblhNTDogbnVsbCwKICAgICAgYnBtbkNvbnRyb2xGb3JtOiB7CiAgICAgICAgcHJlZml4OiAiZmxvd2FibGUiCiAgICAgIH0sCiAgICAgIC8vIOa1geeoi+ihqOWNlQogICAgICBzZWxlY3RQcm9jZXNzSW5zdGFuY2U6IHVuZGVmaW5lZCwKICAgICAgLy8g6YCJ5oup55qE5rWB56iL5a6e5L6LCgogICAgICAvLyDmlbDmja7lrZflhbgKICAgICAgY2F0ZWdvcnlEaWN0RGF0YXM6ICgwLCBfZGljdC5nZXREaWN0RGF0YXMpKF9kaWN0LkRJQ1RfVFlQRS5CUE1fTU9ERUxfQ0FURUdPUlkpCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0TGlzdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgLyoqIOafpeivoua1geeoi+WumuS5ieWIl+ihqCAqL2dldExpc3Q6IGZ1bmN0aW9uIGdldExpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICgwLCBfZGVmaW5pdGlvbi5nZXRQcm9jZXNzRGVmaW5pdGlvbkxpc3QpKHsKICAgICAgICBzdXNwZW5zaW9uU3RhdGU6IDEKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIC8qKiDlpITnkIbpgInmi6nmtYHnqIvnmoTmjInpkq7mk43kvZwgKiovaGFuZGxlU2VsZWN0OiBmdW5jdGlvbiBoYW5kbGVTZWxlY3Qocm93KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICAvLyDorr7nva7pgInmi6nnmoTmtYHnqIsKICAgICAgdGhpcy5zZWxlY3RQcm9jZXNzSW5zdGFuY2UgPSByb3c7CgogICAgICAvLyDmtYHnqIvooajljZUKICAgICAgaWYgKHJvdy5mb3JtSWQpIHsKICAgICAgICAvLyDorr7nva7lr7nlupTnmoTooajljZUKICAgICAgICB0aGlzLmRldGFpbEZvcm0gPSAoMCwgX29iamVjdFNwcmVhZDIuZGVmYXVsdCkoKDAsIF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKHt9LCBKU09OLnBhcnNlKHJvdy5mb3JtQ29uZikpLCB7fSwgewogICAgICAgICAgZmllbGRzOiAoMCwgX2Zvcm1HZW5lcmF0b3IuZGVjb2RlRmllbGRzKShyb3cuZm9ybUZpZWxkcykKICAgICAgICB9KTsKCiAgICAgICAgLy8g5Yqg6L295rWB56iL5Zu+CiAgICAgICAgKDAsIF9kZWZpbml0aW9uLmdldFByb2Nlc3NEZWZpbml0aW9uQnBtblhNTCkocm93LmlkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgX3RoaXMyLmJwbW5YTUwgPSByZXNwb25zZS5kYXRhOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHJvdy5mb3JtQ3VzdG9tQ3JlYXRlUGF0aCkgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgIHBhdGg6IHJvdy5mb3JtQ3VzdG9tQ3JlYXRlUGF0aAogICAgICAgIH0pOwogICAgICAgIC8vIOi/memHjOaaguaXtuaXoOmcgOWKoOi9vea1geeoi+Wbvu+8jOWboOS4uui3s+WHuuWIsOWPpuWkluS4qiBUYWLvvJsKICAgICAgfQogICAgfSwKICAgIC8qKiDmj5DkuqTmjInpkq4gKi9zdWJtaXRGb3JtOiBmdW5jdGlvbiBzdWJtaXRGb3JtKHBhcmFtcykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgaWYgKCFwYXJhbXMpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgLy8g6K6+572u6KGo5Y2V56aB55SoCiAgICAgIHZhciBjb25mID0gcGFyYW1zLmNvbmY7CiAgICAgIGNvbmYuZGlzYWJsZWQgPSB0cnVlOyAvLyDooajljZXnpoHnlKgKICAgICAgY29uZi5mb3JtQnRucyA9IGZhbHNlOyAvLyDmjInpkq7pmpDol48KCiAgICAgIC8vIOaPkOS6pOihqOWNle+8jOWIm+W7uua1geeoiwogICAgICB2YXIgdmFyaWFibGVzID0gcGFyYW1zLnZhbHVlczsKICAgICAgKDAsIF9wcm9jZXNzSW5zdGFuY2UuY3JlYXRlUHJvY2Vzc0luc3RhbmNlKSh7CiAgICAgICAgcHJvY2Vzc0RlZmluaXRpb25JZDogdGhpcy5zZWxlY3RQcm9jZXNzSW5zdGFuY2UuaWQsCiAgICAgICAgdmFyaWFibGVzOiB2YXJpYWJsZXMKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczMuJG1vZGFsLm1zZ1N1Y2Nlc3MoIuWPkei1t+a1geeoi+aIkOWKnyIpOwogICAgICAgIC8vIOWFs+mXreW9k+WJjeeql+WPowogICAgICAgIF90aGlzMy4kdGFiLmNsb3NlT3BlblBhZ2UoKTsKICAgICAgICBfdGhpczMuJHJvdXRlci5nbygtMSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25mLmRpc2FibGVkID0gZmFsc2U7IC8vIOihqOWNleW8gOWQrwogICAgICAgIGNvbmYuZm9ybUJ0bnMgPSB0cnVlOyAvLyDmjInpkq7lsZXnpLoKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["_definition","require","_dict","_formGenerator","_Parser","_interopRequireDefault","_processInstance","_default","exports","default","name","components","Parser","data","loading","list","detailForm","fields","bpmnXML","bpmnControlForm","prefix","selectProcessInstance","undefined","categoryDictDatas","getDictDatas","DICT_TYPE","BPM_MODEL_CATEGORY","created","getList","methods","_this","getProcessDefinitionList","suspensionState","then","response","handleSelect","row","_this2","formId","_objectSpread2","JSON","parse","formConf","decodeFields","formFields","getProcessDefinitionBpmnXML","id","formCustomCreatePath","$router","push","path","submitForm","params","_this3","conf","disabled","formBtns","variables","values","createProcessInstance","processDefinitionId","$modal","msgSuccess","$tab","closeOpenPage","go","catch"],"sources":["src/views/bpm/processInstance/create.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- 第一步，通过流程定义的列表，选择对应的流程 -->\r\n    <div v-if=\"!selectProcessInstance\">\r\n      <el-table v-loading=\"loading\" :data=\"list\">\r\n        <el-table-column label=\"流程名称\" align=\"center\" prop=\"name\" width=\"200\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"text\" @click=\"handleBpmnDetail(scope.row)\">\r\n              <span>{{ scope.row.name }}</span>\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"流程分类\" align=\"center\" prop=\"category\" width=\"100\">\r\n          <template v-slot=\"scope\">\r\n            <dict-tag :type=\"DICT_TYPE.BPM_MODEL_CATEGORY\" :value=\"scope.row.category\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"流程版本\" align=\"center\" prop=\"processDefinition.version\" width=\"80\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag size=\"medium\" v-if=\"scope.row\">v{{ scope.row.version }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"流程描述\" align=\"center\" prop=\"description\" width=\"300\" show-overflow-tooltip />\r\n        <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"text\" size=\"small\" icon=\"el-icon-plus\" @click=\"handleSelect(scope.row)\">选择</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <!-- 第二步，填写表单，进行流程的提交 -->\r\n    <div v-else>\r\n      <el-card class=\"box-card\" >\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span class=\"el-icon-document\">申请信息【{{ selectProcessInstance.name }}】</span>\r\n          <el-button style=\"float: right;\" type=\"primary\" @click=\"selectProcessInstance = undefined\">选择其它流程</el-button>\r\n        </div>\r\n        <el-col :span=\"16\" :offset=\"6\">\r\n          <div>\r\n            <parser :key=\"new Date().getTime()\" :form-conf=\"detailForm\" @submit=\"submitForm\" />\r\n          </div>\r\n        </el-col>\r\n      </el-card>\r\n      <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span class=\"el-icon-picture-outline\">流程图</span>\r\n        </div>\r\n        <my-process-viewer key=\"designer\" v-model=\"bpmnXML\" v-bind=\"bpmnControlForm\" />\r\n      </el-card>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {getProcessDefinitionBpmnXML, getProcessDefinitionList} from \"@/api/bpm/definition\";\r\nimport {DICT_TYPE, getDictDatas} from \"@/utils/dict\";\r\nimport {decodeFields} from \"@/utils/formGenerator\";\r\nimport Parser from '@/components/parser/Parser'\r\nimport {createProcessInstance} from \"@/api/bpm/processInstance\";\r\n\r\n// 流程实例的发起\r\nexport default {\r\n  name: \"ProcessInstanceCreate\",\r\n  components: {\r\n    Parser\r\n  },\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 表格数据\r\n      list: [],\r\n\r\n      // 流程表单详情\r\n      detailForm: {\r\n        fields: []\r\n      },\r\n\r\n      // BPMN 数据\r\n      bpmnXML: null,\r\n      bpmnControlForm: {\r\n        prefix: \"flowable\"\r\n      },\r\n\r\n      // 流程表单\r\n      selectProcessInstance: undefined, // 选择的流程实例\r\n\r\n      // 数据字典\r\n      categoryDictDatas: getDictDatas(DICT_TYPE.BPM_MODEL_CATEGORY),\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    /** 查询流程定义列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      getProcessDefinitionList({\r\n        suspensionState: 1\r\n      }).then(response => {\r\n          this.list = response.data\r\n          this.loading = false\r\n        }\r\n      );\r\n    },\r\n    /** 处理选择流程的按钮操作 **/\r\n    handleSelect(row) {\r\n      // 设置选择的流程\r\n      this.selectProcessInstance = row;\r\n\r\n      // 流程表单\r\n      if (row.formId) {\r\n        // 设置对应的表单\r\n        this.detailForm = {\r\n          ...JSON.parse(row.formConf),\r\n          fields: decodeFields(row.formFields)\r\n        }\r\n\r\n        // 加载流程图\r\n        getProcessDefinitionBpmnXML(row.id).then(response => {\r\n          this.bpmnXML = response.data\r\n        })\r\n      } else if (row.formCustomCreatePath) {\r\n        this.$router.push({ path: row.formCustomCreatePath});\r\n        // 这里暂时无需加载流程图，因为跳出到另外个 Tab；\r\n      }\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm(params) {\r\n      if (!params) {\r\n        return;\r\n      }\r\n      // 设置表单禁用\r\n      const conf = params.conf;\r\n      conf.disabled = true; // 表单禁用\r\n      conf.formBtns = false; // 按钮隐藏\r\n\r\n      // 提交表单，创建流程\r\n      const variables = params.values;\r\n      createProcessInstance({\r\n        processDefinitionId: this.selectProcessInstance.id,\r\n        variables: variables\r\n      }).then(response => {\r\n        this.$modal.msgSuccess(\"发起流程成功\");\r\n        // 关闭当前窗口\r\n        this.$tab.closeOpenPage();\r\n        this.$router.go(-1);\r\n      }).catch(() => {\r\n        conf.disabled = false; // 表单开启\r\n        conf.formBtns = true; // 按钮展示\r\n      })\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.my-process-designer {\r\n  height: calc(100vh - 200px);\r\n}\r\n\r\n.box-card {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;AAuDA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,gBAAA,GAAAL,OAAA;AAEA;AAAA,IAAAM,QAAA,GAAAC,OAAA,CAAAC,OAAA,GACA;EACAC,IAAA;EACAC,UAAA;IACAC,MAAA,EAAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACA;MACAC,OAAA;MACA;MACAC,IAAA;MAEA;MACAC,UAAA;QACAC,MAAA;MACA;MAEA;MACAC,OAAA;MACAC,eAAA;QACAC,MAAA;MACA;MAEA;MACAC,qBAAA,EAAAC,SAAA;MAAA;;MAEA;MACAC,iBAAA,MAAAC,kBAAA,EAAAC,eAAA,CAAAC,kBAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACA,eACAD,OAAA,WAAAA,QAAA;MAAA,IAAAE,KAAA;MACA,KAAAhB,OAAA;MACA,IAAAiB,oCAAA;QACAC,eAAA;MACA,GAAAC,IAAA,WAAAC,QAAA;QACAJ,KAAA,CAAAf,IAAA,GAAAmB,QAAA,CAAArB,IAAA;QACAiB,KAAA,CAAAhB,OAAA;MACA,CACA;IACA;IACA,mBACAqB,YAAA,WAAAA,aAAAC,GAAA;MAAA,IAAAC,MAAA;MACA;MACA,KAAAhB,qBAAA,GAAAe,GAAA;;MAEA;MACA,IAAAA,GAAA,CAAAE,MAAA;QACA;QACA,KAAAtB,UAAA,OAAAuB,cAAA,CAAA9B,OAAA,MAAA8B,cAAA,CAAA9B,OAAA,MACA+B,IAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAM,QAAA;UACAzB,MAAA,MAAA0B,2BAAA,EAAAP,GAAA,CAAAQ,UAAA;QAAA,EACA;;QAEA;QACA,IAAAC,uCAAA,EAAAT,GAAA,CAAAU,EAAA,EAAAb,IAAA,WAAAC,QAAA;UACAG,MAAA,CAAAnB,OAAA,GAAAgB,QAAA,CAAArB,IAAA;QACA;MACA,WAAAuB,GAAA,CAAAW,oBAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAAC,IAAA,EAAAd,GAAA,CAAAW;QAAA;QACA;MACA;IACA;IACA,WACAI,UAAA,WAAAA,WAAAC,MAAA;MAAA,IAAAC,MAAA;MACA,KAAAD,MAAA;QACA;MACA;MACA;MACA,IAAAE,IAAA,GAAAF,MAAA,CAAAE,IAAA;MACAA,IAAA,CAAAC,QAAA;MACAD,IAAA,CAAAE,QAAA;;MAEA;MACA,IAAAC,SAAA,GAAAL,MAAA,CAAAM,MAAA;MACA,IAAAC,sCAAA;QACAC,mBAAA,OAAAvC,qBAAA,CAAAyB,EAAA;QACAW,SAAA,EAAAA;MACA,GAAAxB,IAAA,WAAAC,QAAA;QACAmB,MAAA,CAAAQ,MAAA,CAAAC,UAAA;QACA;QACAT,MAAA,CAAAU,IAAA,CAAAC,aAAA;QACAX,MAAA,CAAAL,OAAA,CAAAiB,EAAA;MACA,GAAAC,KAAA;QACAZ,IAAA,CAAAC,QAAA;QACAD,IAAA,CAAAE,QAAA;MACA;IACA;EACA;AACA"}]}