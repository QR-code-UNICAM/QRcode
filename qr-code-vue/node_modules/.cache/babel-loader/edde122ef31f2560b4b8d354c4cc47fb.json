{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\taskAssignRule\\taskAssignRuleDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\taskAssignRule\\taskAssignRuleDialog.vue","mtime":1704630437851},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\babel.config.js","mtime":1704630437199},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_dict","require","_taskAssignRule","_role","_dept","_vueTreeselect","_interopRequireDefault","_post","_user","_userGroup","_default","exports","default","name","components","Treeselect","data","modelId","undefined","processDefinitionId","visible","row","list","loading","open","form","rules","type","required","message","trigger","roleIds","deptIds","postIds","userIds","userGroupIds","scripts","roleOptions","deptOptions","deptTreeOptions","postOptions","userOptions","userGroupOptions","modelFormTypeDictDatas","getDictDatas","DICT_TYPE","BPM_MODEL_FORM_TYPE","taskAssignRuleTypeDictDatas","BPM_TASK_ASSIGN_RULE_TYPE","taskAssignScriptDictDatas","BPM_TASK_ASSIGN_SCRIPT","methods","initModel","init0","initProcessDefinition","_this","getList","listSimpleRoles","then","response","_this$roleOptions","push","apply","_toConsumableArray2","listSimpleDepts","_this$deptOptions","_this$deptTreeOptions","handleTree","listSimplePosts","_this$postOptions","listSimpleUsers","_this$userOptions","listSimpleUserGroups","_this$userGroupOption","_this2","getTaskAssignRuleList","handleUpdateTaskAssignRule","resetAssignRuleForm","_objectSpread2","options","_this$form$roleIds","_this$form$deptIds","_this$form$postIds","_this$form$userIds","_this$form$userGroupI","_this$form$scripts","submitAssignRuleForm","_this3","$refs","validate","valid","taskDefinitionName","id","createTaskAssignRule","$modal","msgSuccess","taskDefinitionKey","updateTaskAssignRule","cancelAssignRuleForm","resetForm","getAssignRuleOptionName","option","_iterator","_createForOfIteratorHelper2","_step","s","n","done","roleOption","value","err","e","f","_iterator2","_step2","deptOption","_iterator3","_step3","postOption","_iterator4","_step4","userOption","nickname","_iterator5","_step5","userGroupOption","_iterator6","_step6","dictData","label","normalizer","node","children"],"sources":["src/views/bpm/taskAssignRule/taskAssignRuleDialog.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 列表弹窗 -->\r\n    <el-dialog title=\"任务分配规则\" :visible.sync=\"visible\" width=\"800px\" append-to-body>\r\n      <el-table v-loading=\"loading\" :data=\"list\">\r\n        <el-table-column label=\"任务名\" align=\"center\" prop=\"taskDefinitionName\" width=\"120\" fixed />\r\n        <el-table-column label=\"任务标识\" align=\"center\" prop=\"taskDefinitionKey\" width=\"120\" show-tooltip-when-overflow />\r\n        <el-table-column label=\"规则类型\" align=\"center\" prop=\"type\" width=\"120\">\r\n          <template v-slot=\"scope\">\r\n            <dict-tag :type=\"DICT_TYPE.BPM_TASK_ASSIGN_RULE_TYPE\" :value=\"scope.row.type\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"规则范围\" align=\"center\" prop=\"options\" width=\"440px\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag size=\"medium\" v-if=\"scope.row.options\" :key=\"option\" v-for=\"option in scope.row.options\">\r\n              {{ getAssignRuleOptionName(scope.row.type, option) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column v-if=\"modelId\" label=\"操作\" align=\"center\" width=\"80\" fixed=\"right\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdateTaskAssignRule(scope.row)\"\r\n                       v-hasPermi=\"['bpm:task-assign-rule:update']\">修改</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-dialog>\r\n    <!-- 添加/修改弹窗 -->\r\n    <el-dialog title=\"修改任务规则\" :visible.sync=\"open\" width=\"500px\" append-to-body>\r\n      <el-form ref=\"taskAssignRuleForm\" :model=\"form\" :rules=\"rules\" label-width=\"110px\">\r\n        <el-form-item label=\"任务名称\" prop=\"taskDefinitionName\">\r\n          <el-input v-model=\"form.taskDefinitionName\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"任务标识\" prop=\"taskDefinitionKey\">\r\n          <el-input v-model=\"form.taskDefinitionKey\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"规则类型\" prop=\"type\">\r\n          <el-select v-model=\"form.type\" clearable style=\"width: 100%\">\r\n            <el-option v-for=\"dict in taskAssignRuleTypeDictDatas\" :key=\"parseInt(dict.value)\" :label=\"dict.label\" :value=\"parseInt(dict.value)\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 10\" label=\"指定角色\" prop=\"roleIds\">\r\n          <el-select v-model=\"form.roleIds\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"item in roleOptions\" :key=\"parseInt(item.id)\" :label=\"item.name\" :value=\"parseInt(item.id)\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 20 || form.type === 21\" label=\"指定部门\" prop=\"deptIds\">\r\n          <treeselect v-model=\"form.deptIds\" :options=\"deptTreeOptions\" multiple flat :defaultExpandLevel=\"3\"\r\n                      placeholder=\"请选择指定部门\" :normalizer=\"normalizer\"/>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 22\" label=\"指定岗位\" prop=\"postIds\">\r\n          <el-select v-model=\"form.postIds\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"item in postOptions\" :key=\"parseInt(item.id)\" :label=\"item.name\" :value=\"parseInt(item.id)\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 30 || form.type === 31 || form.type === 32\" label=\"指定用户\" prop=\"userIds\">\r\n          <el-select v-model=\"form.userIds\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"item in userOptions\" :key=\"parseInt(item.id)\" :label=\"item.nickname\" :value=\"parseInt(item.id)\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 40\" label=\"指定用户组\" prop=\"userGroupIds\">\r\n          <el-select v-model=\"form.userGroupIds\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"item in userGroupOptions\" :key=\"parseInt(item.id)\" :label=\"item.name\" :value=\"parseInt(item.id)\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 50\" label=\"指定脚本\" prop=\"scripts\">\r\n          <el-select v-model=\"form.scripts\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"dict in taskAssignScriptDictDatas\" :key=\"parseInt(dict.value)\"\r\n                       :label=\"dict.label\" :value=\"parseInt(dict.value)\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitAssignRuleForm\">确 定</el-button>\r\n        <el-button @click=\"cancelAssignRuleForm\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {DICT_TYPE, getDictDatas} from \"@/utils/dict\";\r\nimport {createTaskAssignRule, getTaskAssignRuleList, updateTaskAssignRule} from \"@/api/bpm/taskAssignRule\";\r\nimport {listSimpleRoles} from \"@/api/system/role\";\r\nimport {listSimpleDepts} from \"@/api/system/dept\";\r\n\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\nimport {listSimplePosts} from \"@/api/system/post\";\r\nimport {listSimpleUsers} from \"@/api/system/user\";\r\nimport {listSimpleUserGroups} from \"@/api/bpm/userGroup\";\r\n\r\nexport default {\r\n  name: \"BpmTaskAssignRule\",\r\n  components: {\r\n    Treeselect\r\n  },\r\n  data() {\r\n    return {\r\n      // 如下参数，可传递\r\n      modelId: undefined, // 流程模型的编号。如果 modelId 非空，则用于流程模型的查看与配置\r\n      processDefinitionId: undefined, // 流程定义的编号。如果 processDefinitionId 非空，则用于流程定义的查看，不支持配置\r\n      visible: false,\r\n\r\n      // 任务分配规则表单\r\n      row: undefined, // 选中的流程模型\r\n      list: [], // 选中流程模型的任务分配规则们\r\n      loading: false, // 加载中\r\n      open: false, // 是否打开\r\n      form: {}, // 表单\r\n      rules: { // 表单校验规则\r\n        type: [{ required: true, message: \"规则类型不能为空\", trigger: \"change\" }],\r\n        roleIds: [{required: true, message: \"指定角色不能为空\", trigger: \"change\" }],\r\n        deptIds: [{required: true, message: \"指定部门不能为空\", trigger: \"change\" }],\r\n        postIds: [{required: true, message: \"指定岗位不能为空\", trigger: \"change\"}],\r\n        userIds: [{required: true, message: \"指定用户不能为空\", trigger: \"change\"}],\r\n        userGroupIds: [{required: true, message: \"指定用户组不能为空\", trigger: \"change\"}],\r\n        scripts: [{required: true, message: \"指定脚本不能为空\", trigger: \"change\"}],\r\n      },\r\n\r\n      // 各种下拉框\r\n      roleOptions: [],\r\n      deptOptions: [],\r\n      deptTreeOptions: [],\r\n      postOptions: [],\r\n      userOptions: [],\r\n      userGroupOptions: [],\r\n\r\n      // 数据字典\r\n      modelFormTypeDictDatas: getDictDatas(DICT_TYPE.BPM_MODEL_FORM_TYPE),\r\n      taskAssignRuleTypeDictDatas: getDictDatas(DICT_TYPE.BPM_TASK_ASSIGN_RULE_TYPE),\r\n      taskAssignScriptDictDatas: getDictDatas(DICT_TYPE.BPM_TASK_ASSIGN_SCRIPT),\r\n    };\r\n  },\r\n  methods: {\r\n    initModel(modelId) {\r\n      this.modelId = modelId;\r\n      this.processDefinitionId = undefined;\r\n\r\n      // 初始化所有下拉框\r\n      this.init0();\r\n    },\r\n    initProcessDefinition(processDefinitionId) {\r\n      this.modelId = undefined;\r\n      this.processDefinitionId = processDefinitionId;\r\n\r\n      // 初始化所有下拉框\r\n      this.init0();\r\n    },\r\n    /** 初始化 */\r\n    init0() {\r\n      // 设置可见\r\n      this.visible = true;\r\n      // 获得列表\r\n      this.getList();\r\n\r\n      // 获得角色列表\r\n      this.roleOptions = [];\r\n      listSimpleRoles().then(response => {\r\n        this.roleOptions.push(...response.data);\r\n      });\r\n      // 获得部门列表\r\n      this.deptOptions = [];\r\n      this.deptTreeOptions = [];\r\n      listSimpleDepts().then(response => {\r\n        this.deptOptions.push(...response.data);\r\n        this.deptTreeOptions.push(...this.handleTree(response.data, \"id\"));\r\n      });\r\n      // 获得岗位列表\r\n      this.postOptions = [];\r\n      listSimplePosts().then(response => {\r\n        this.postOptions.push(...response.data);\r\n      });\r\n      // 获得用户列表\r\n      this.userOptions = [];\r\n      listSimpleUsers().then(response => {\r\n        this.userOptions.push(...response.data);\r\n      });\r\n      // 获得用户组列表\r\n      this.userGroupOptions = [];\r\n      listSimpleUserGroups().then(response => {\r\n        this.userGroupOptions.push(...response.data);\r\n      });\r\n    },\r\n    /** 获得任务分配规则列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      getTaskAssignRuleList({\r\n        modelId: this.modelId,\r\n        processDefinitionId: this.processDefinitionId,\r\n      }).then(response => {\r\n        this.loading = false;\r\n        this.list = response.data;\r\n      })\r\n    },\r\n    /** 处理修改任务分配规则的按钮操作 */\r\n    handleUpdateTaskAssignRule(row) {\r\n      // 先重置标识\r\n      this.resetAssignRuleForm();\r\n      // 设置表单\r\n      this.form = {\r\n        ...row,\r\n        options: [],\r\n        roleIds: [],\r\n        deptIds: [],\r\n        postIds: [],\r\n        userIds: [],\r\n        userGroupIds: [],\r\n        scripts: [],\r\n      };\r\n      // 将 options 赋值到对应的 roleIds 等选项\r\n      if (row.type === 10) {\r\n        this.form.roleIds.push(...row.options);\r\n      } else if (row.type === 20 || row.type === 21) {\r\n        this.form.deptIds.push(...row.options);\r\n      } else if (row.type === 22) {\r\n        this.form.postIds.push(...row.options);\r\n      } else if (row.type === 30 || row.type === 31 || row.type === 32) {\r\n        this.form.userIds.push(...row.options);\r\n      } else if (row.type === 40) {\r\n        this.form.userGroupIds.push(...row.options);\r\n      } else if (row.type === 50) {\r\n        this.form.scripts.push(...row.options);\r\n      }\r\n      this.open = true;\r\n    },\r\n    /** 提交任务分配规则的表单 */\r\n    submitAssignRuleForm() {\r\n      this.$refs[\"taskAssignRuleForm\"].validate(valid => {\r\n        if (valid) {\r\n          // 构建表单\r\n          let form = {\r\n            ...this.form,\r\n            taskDefinitionName: undefined,\r\n          };\r\n          // 将 roleIds 等选项赋值到 options 中\r\n          if (form.type === 10) {\r\n            form.options = form.roleIds;\r\n          } else if (form.type === 20 || form.type === 21) {\r\n            form.options = form.deptIds;\r\n          } else if (form.type === 22) {\r\n            form.options = form.postIds;\r\n          } else if (form.type === 30 || form.type === 31 || form.type === 32) {\r\n            form.options = form.userIds;\r\n          } else if (form.type === 40) {\r\n            form.options = form.userGroupIds;\r\n          } else if (form.type === 50) {\r\n            form.options = form.scripts;\r\n          }\r\n          form.roleIds = undefined;\r\n          form.deptIds = undefined;\r\n          form.postIds = undefined;\r\n          form.userIds = undefined;\r\n          form.userGroupIds = undefined;\r\n          form.scripts = undefined;\r\n          // 新增\r\n          if (!form.id) {\r\n            form.modelId = this.modelId; // 模型编号\r\n            createTaskAssignRule(form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n            // 修改\r\n          } else {\r\n            form.taskDefinitionKey = undefined; // 无法修改\r\n            updateTaskAssignRule(form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 取消任务分配规则的表单 */\r\n    cancelAssignRuleForm() {\r\n      this.open = false;\r\n      this.resetAssignRuleForm();\r\n    },\r\n    /** 表单重置 */\r\n    resetAssignRuleForm() {\r\n      this.form = {};\r\n      this.resetForm(\"taskAssignRuleForm\");\r\n    },\r\n    getAssignRuleOptionName(type, option) {\r\n      if (type === 10) {\r\n        for (const roleOption of this.roleOptions) {\r\n          if (roleOption.id === option) {\r\n            return roleOption.name;\r\n          }\r\n        }\r\n      } else if (type === 20 || type === 21) {\r\n        for (const deptOption of this.deptOptions) {\r\n          if (deptOption.id === option) {\r\n            return deptOption.name;\r\n          }\r\n        }\r\n      } else if (type === 22) {\r\n        for (const postOption of this.postOptions) {\r\n          if (postOption.id === option) {\r\n            return postOption.name;\r\n          }\r\n        }\r\n      } else if (type === 30 || type === 31 || type === 32) {\r\n        for (const userOption of this.userOptions) {\r\n          if (userOption.id === option) {\r\n            return userOption.nickname;\r\n          }\r\n        }\r\n      } else if (type === 40) {\r\n        for (const userGroupOption of this.userGroupOptions) {\r\n          if (userGroupOption.id === option) {\r\n            return userGroupOption.name;\r\n          }\r\n        }\r\n      } else if (type === 50) {\r\n        option = option + ''; // 转换成 string\r\n        for (const dictData of this.taskAssignScriptDictDatas) {\r\n          if (dictData.value === option) {\r\n            return dictData.label;\r\n          }\r\n        }\r\n      }\r\n      return '未知(' + option + ')';\r\n    },\r\n    // 格式化部门的下拉框\r\n    normalizer(node) {\r\n      return {\r\n        id: node.id,\r\n        label: node.name,\r\n        children: node.children\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"}]}