{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\model\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\model\\index.vue","mtime":1704630437840},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\babel.config.js","mtime":1704630437199},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_model","require","_dict","_form","_formGenerator","_Parser","_interopRequireDefault","_request","_taskAssignRuleDialog","_vueTreeselect","_default","exports","default","name","components","Parser","Treeselect","taskAssignRuleDialog","data","loading","showSearch","total","list","queryParams","pageNo","pageSize","showBpmnOpen","bpmnXML","bpmnControlForm","prefix","detailOpen","detailForm","fields","title","open","form","rules","key","required","message","trigger","formType","formId","category","formCustomCreatePath","formCustomViewPath","upload","isUploading","headers","getBaseHeader","url","process","env","VUE_APP_BASE_API","forms","categoryDictDatas","getDictDatas","DICT_TYPE","BPM_MODEL_CATEGORY","modelFormTypeDictDatas","BPM_MODEL_FORM_TYPE","taskAssignRuleDictDatas","BPM_TASK_ASSIGN_RULE_TYPE","created","_this","getList","getSimpleForms","then","response","methods","_this2","getModelPage","cancel","reset","id","undefined","description","resetForm","handleQuery","resetQuery","dateRange","handleAdd","handleUpdate","row","_objectSpread2","handleDesign","$router","push","query","modelId","submitForm","_this3","$refs","validate","valid","updateModel","$modal","msgSuccess","createModel","$alert","dangerouslyUseHTMLString","type","handleDelete","that","confirm","deleteModel","catch","handleDeploy","deployModel","handleFormDetail","_this4","getForm","JSON","parse","conf","decodeFields","path","handleBpmnDetail","_this5","getModel","bpmnXml","handleDefinitionList","handleChangeState","_this6","state","processDefinition","suspensionState","statusState","updateModelState","handleImport","handleFileUploadProgress","event","file","fileList","handleFileSuccess","code","msgError","msg","uploadClose","clearFiles","submitFileForm","_this7","submit","handleAssignRule","initModel"],"sources":["src/views/bpm/model/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <doc-alert title=\"工作流\" url=\"https://doc.iocoder.cn/bpm\" />\r\n\r\n    <!-- 搜索工作栏 -->\r\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\r\n      <el-form-item label=\"流程标识\" prop=\"key\">\r\n        <el-input v-model=\"queryParams.key\" placeholder=\"请输入流程标识\" clearable style=\"width: 240px;\"\r\n                  @keyup.enter.native=\"handleQuery\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"流程名称\" prop=\"name\">\r\n        <el-input v-model=\"queryParams.name\" placeholder=\"请输入流程名称\" clearable style=\"width: 240px;\"\r\n                  @keyup.enter.native=\"handleQuery\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"流程分类\" prop=\"category\">\r\n        <el-select v-model=\"queryParams.category\" placeholder=\"流程分类\" clearable style=\"width: 240px\">\r\n          <el-option v-for=\"dict in categoryDictDatas\" :key=\"parseInt(dict.value)\" :label=\"dict.label\" :value=\"parseInt(dict.value)\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleQuery\">搜索</el-button>\r\n        <el-button icon=\"el-icon-refresh\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 操作工具栏 -->\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button type=\"primary\" plain icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd\"\r\n                   v-hasPermi=\"['bpm:model:create']\">新建流程</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button type=\"info\" icon=\"el-icon-upload2\" size=\"mini\" @click=\"handleImport\"\r\n                   v-hasPermi=\"['bpm:model:import']\">导入流程</el-button>\r\n      </el-col>\r\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\r\n    </el-row>\r\n\r\n    <!-- 列表 -->\r\n    <el-table v-loading=\"loading\" :data=\"list\">\r\n      <el-table-column label=\"流程标识\" align=\"center\" prop=\"key\" />\r\n      <el-table-column label=\"流程名称\" align=\"center\" prop=\"name\" width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"text\" @click=\"handleBpmnDetail(scope.row)\">\r\n            <span>{{ scope.row.name }}</span>\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"流程分类\" align=\"center\" prop=\"category\" width=\"100\">\r\n        <template v-slot=\"scope\">\r\n          <dict-tag :type=\"DICT_TYPE.BPM_MODEL_CATEGORY\" :value=\"scope.row.category\" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"表单信息\" align=\"center\" prop=\"formType\" width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <el-button v-if=\"scope.row.formId\" type=\"text\" @click=\"handleFormDetail(scope.row)\">\r\n            <span>{{ scope.row.formName }}</span>\r\n          </el-button>\r\n          <el-button v-else-if=\"scope.row.formCustomCreatePath\" type=\"text\" @click=\"handleFormDetail(scope.row)\">\r\n            <span>{{ scope.row.formCustomCreatePath }}</span>\r\n          </el-button>\r\n          <label v-else>暂无表单</label>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"180\">\r\n        <template v-slot=\"scope\">\r\n          <span>{{ parseTime(scope.row.createTime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"最新部署的流程定义\" align=\"center\">\r\n        <el-table-column label=\"流程版本\" align=\"center\" prop=\"processDefinition.version\" width=\"80\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag size=\"medium\" v-if=\"scope.row.processDefinition\">v{{ scope.row.processDefinition.version }}</el-tag>\r\n            <el-tag size=\"medium\" type=\"warning\" v-else>未部署</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"激活状态\" align=\"center\" prop=\"processDefinition.version\" width=\"80\">\r\n          <template v-slot=\"scope\">\r\n            <el-switch v-if=\"scope.row.processDefinition\" v-model=\"scope.row.processDefinition.suspensionState\"\r\n                       :active-value=\"1\" :inactive-value=\"2\" @change=\"handleChangeState(scope.row)\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"部署时间\" align=\"center\" prop=\"deploymentTime\" width=\"180\">\r\n          <template v-slot=\"scope\">\r\n            <span v-if=\"scope.row.processDefinition\">{{ parseTime(scope.row.processDefinition.deploymentTime) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" align=\"center\" width=\"450\" fixed=\"right\">\r\n        <template v-slot=\"scope\">\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\"\r\n                     v-hasPermi=\"['bpm:model:update']\">修改流程</el-button>\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-setting\" @click=\"handleDesign(scope.row)\"\r\n                     v-hasPermi=\"['bpm:model:update']\">设计流程</el-button>\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-s-custom\" @click=\"handleAssignRule(scope.row)\"\r\n                     v-hasPermi=\"['bpm:task-assign-rule:query']\">分配规则</el-button>\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-thumb\" @click=\"handleDeploy(scope.row)\"\r\n                     v-hasPermi=\"['bpm:model:deploy']\">发布流程</el-button>\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-ice-cream-round\" @click=\"handleDefinitionList(scope.row)\"\r\n                     v-hasPermi=\"['bpm:process-definition:query']\">流程定义</el-button>\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\"\r\n                     v-hasPermi=\"['bpm:model:delete']\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- 分页组件 -->\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"queryParams.pageNo\" :limit.sync=\"queryParams.pageSize\"\r\n                @pagination=\"getList\"/>\r\n\r\n    <!-- 流程表单配置详情 -->\r\n    <el-dialog title=\"表单详情\" :visible.sync=\"detailOpen\" width=\"50%\" append-to-body>\r\n      <parser :key=\"new Date().getTime()\" :form-conf=\"detailForm\" />\r\n    </el-dialog>\r\n\r\n    <!-- 流程模型图的预览 -->\r\n    <el-dialog title=\"流程图\" :visible.sync=\"showBpmnOpen\" width=\"80%\" append-to-body>\r\n      <my-process-viewer key=\"designer\" v-model=\"bpmnXML\" v-bind=\"bpmnControlForm\" />\r\n    </el-dialog>\r\n\r\n    <!-- 对话框(添加 / 修改) -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"110px\">\r\n        <el-form-item label=\"流程标识\" prop=\"key\">\r\n          <el-input v-model=\"form.key\" placeholder=\"请输入流标标识\" style=\"width: 330px;\" :disabled=\"!!form.id\" />\r\n          <el-tooltip v-if=\"!form.id\" class=\"item\" effect=\"light\" content=\"新建后，流程标识不可修改！\" placement=\"top\">\r\n            <i style=\"padding-left: 5px;\" class=\"el-icon-question\" />\r\n          </el-tooltip>\r\n          <el-tooltip v-else class=\"item\" effect=\"light\" content=\"流程标识不可修改！\" placement=\"top\">\r\n            <i style=\"padding-left: 5px;\" class=\"el-icon-question\" />\r\n          </el-tooltip>\r\n        </el-form-item>\r\n        <el-form-item label=\"流程名称\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"请输入流程名称\" :disabled=\"!!form.id\" clearable />\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.id\" label=\"流程分类\" prop=\"category\">\r\n          <el-select v-model=\"form.category\" placeholder=\"请选择流程分类\" clearable style=\"width: 100%\">\r\n            <el-option v-for=\"dict in categoryDictDatas\" :key=\"dict.value\" :label=\"dict.label\" :value=\"dict.value\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"流程描述\" prop=\"description\">\r\n          <el-input type=\"textarea\" v-model=\"form.description\" clearable />\r\n        </el-form-item>\r\n        <div v-if=\"form.id\">\r\n          <el-form-item label=\"表单类型\" prop=\"formType\">\r\n            <el-radio-group v-model=\"form.formType\">\r\n              <el-radio v-for=\"dict in modelFormTypeDictDatas\" :key=\"parseInt(dict.value)\" :label=\"parseInt(dict.value)\">\r\n                {{dict.label}}\r\n              </el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n          <el-form-item v-if=\"form.formType === 10\" label=\"流程表单\" prop=\"formId\">\r\n            <el-select v-model=\"form.formId\" clearable style=\"width: 100%\">\r\n              <el-option v-for=\"form in forms\" :key=\"form.id\" :label=\"form.name\" :value=\"form.id\"/>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item v-if=\"form.formType === 20\" label=\"表单提交路由\" prop=\"formCustomCreatePath\" >\r\n            <el-input v-model=\"form.formCustomCreatePath\" placeholder=\"请输入表单提交路由\" style=\"width: 330px;\" />\r\n            <el-tooltip class=\"item\" effect=\"light\" content=\"自定义表单的提交路径，使用 Vue 的路由地址，例如说：bpm/oa/leave/create\" placement=\"top\">\r\n              <i style=\"padding-left: 5px;\" class=\"el-icon-question\" />\r\n            </el-tooltip>\r\n          </el-form-item>\r\n          <el-form-item v-if=\"form.formType === 20\" label=\"表单查看路由\" prop=\"formCustomViewPath\">\r\n            <el-input v-model=\"form.formCustomViewPath\" placeholder=\"请输入表单查看路由\" style=\"width: 330px;\" />\r\n            <el-tooltip class=\"item\" effect=\"light\" content=\"自定义表单的查看路径，使用 Vue 的路由地址，例如说：bpm/oa/leave/view\" placement=\"top\">\r\n              <i style=\"padding-left: 5px;\" class=\"el-icon-question\" />\r\n            </el-tooltip>\r\n          </el-form-item>\r\n        </div>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 用户导入对话框 -->\r\n    <el-dialog title=\"导入流程\" :visible.sync=\"upload.open\" width=\"400px\" append-to-body>\r\n      <el-upload ref=\"upload\" :limit=\"1\" accept=\".bpmn, .xml\" :headers=\"upload.headers\" :action=\"upload.url\"\r\n        :disabled=\"upload.isUploading\" :on-progress=\"handleFileUploadProgress\" :on-success=\"handleFileSuccess\"\r\n        :auto-upload=\"false\" name=\"bpmnFile\" :data=\"upload.form\" drag>\r\n        <i class=\"el-icon-upload\"></i>\r\n        <div class=\"el-upload__text\">\r\n          将文件拖到此处，或\r\n          <em>点击上传</em>\r\n        </div>\r\n        <div class=\"el-upload__tip\" style=\"color:red\" slot=\"tip\">提示：仅允许导入“bpm”或“xml”格式文件！</div>\r\n        <div class=\"el-upload__tip\" slot=\"tip\">\r\n          <el-form ref=\"uploadForm\" size=\"mini\" label-width=\"90px\" :model=\"upload.form\" :rules=\"upload.rules\" @submit.native.prevent>\r\n            <el-form-item label=\"流程标识\" prop=\"key\">\r\n              <el-input v-model=\"upload.form.key\" placeholder=\"请输入流标标识\" style=\"width: 250px;\" />\r\n              <el-tooltip class=\"item\" effect=\"light\" content=\"新建后，流程标识不可修改！\" placement=\"top\">\r\n                <i style=\"padding-left: 5px;\" class=\"el-icon-question\" />\r\n              </el-tooltip>\r\n            </el-form-item>\r\n            <el-form-item label=\"流程名称\" prop=\"name\">\r\n              <el-input v-model=\"upload.form.name\" placeholder=\"请输入流程名称\" clearable />\r\n            </el-form-item>\r\n            <el-form-item label=\"流程描述\" prop=\"description\">\r\n              <el-input type=\"textarea\" v-model=\"upload.form.description\" clearable />\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </el-upload>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitFileForm\">确 定</el-button>\r\n        <el-button @click=\"uploadClose\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- ========== 流程任务分配规则 ========== -->\r\n    <taskAssignRuleDialog ref=\"taskAssignRuleDialog\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  deleteModel,\r\n  deployModel,\r\n  getModelPage,\r\n  getModel,\r\n  updateModelState,\r\n  createModel,\r\n  updateModel\r\n} from \"@/api/bpm/model\";\r\nimport {DICT_TYPE, getDictDatas} from \"@/utils/dict\";\r\nimport {getForm, getSimpleForms} from \"@/api/bpm/form\";\r\nimport {decodeFields} from \"@/utils/formGenerator\";\r\nimport Parser from '@/components/parser/Parser'\r\nimport {getBaseHeader} from \"@/utils/request\";\r\nimport taskAssignRuleDialog from \"../taskAssignRule/taskAssignRuleDialog\";\r\n\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\n\r\nexport default {\r\n  name: \"BpmModel\",\r\n  components: {\r\n    Parser,\r\n    Treeselect,\r\n    taskAssignRuleDialog\r\n  },\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 表格数据\r\n      list: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNo: 1,\r\n        pageSize: 10\r\n      },\r\n\r\n      // BPMN 数据\r\n      showBpmnOpen: false,\r\n      bpmnXML: null,\r\n      bpmnControlForm: {\r\n        prefix: \"flowable\"\r\n      },\r\n\r\n      // 流程表单详情\r\n      detailOpen: false,\r\n      detailForm: {\r\n        fields: []\r\n      },\r\n\r\n      // 流程表单\r\n      title: \"\",\r\n      open: false,\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        key: [{ required: true, message: \"流程标识不能为空\", trigger: \"blur\" }],\r\n        name: [{ required: true, message: \"流程名称不能为空\", trigger: \"blur\" }],\r\n        formType: [{ required: true, message: \"流程名称不能为空\", trigger: \"blur\" }],\r\n        formId: [{ required: true, message: \"业务表单不能为空\", trigger: \"blur\" }],\r\n        category: [{ required: true, message: \"流程分类不能为空\", trigger: \"blur\" }],\r\n        formCustomCreatePath: [{ required: true, message: \"表单提交路由不能为空\", trigger: \"blur\" }],\r\n        formCustomViewPath: [{ required: true, message: \"表单查看路由不能为空\", trigger: \"blur\" }],\r\n      },\r\n\r\n      // 流程导入参数\r\n      upload: {\r\n        // 是否显示弹出层（用户导入）\r\n        open: false,\r\n        // 是否禁用上传\r\n        isUploading: false,\r\n        // 设置上传的请求头部\r\n        headers: getBaseHeader(),\r\n        // 上传的地址\r\n        url: process.env.VUE_APP_BASE_API + '/admin-api' + \"/bpm/model/import\",\r\n        // 表单\r\n        form: {},\r\n        // 校验规则\r\n        rules: {\r\n          key: [{ required: true, message: \"流程标识不能为空\", trigger: \"blur\" }],\r\n          name: [{ required: true, message: \"流程名称不能为空\", trigger: \"blur\" }],\r\n        },\r\n      },\r\n      // 流程表单的下拉框的数据\r\n      forms: [],\r\n\r\n      // 数据字典\r\n      categoryDictDatas: getDictDatas(DICT_TYPE.BPM_MODEL_CATEGORY),\r\n      modelFormTypeDictDatas: getDictDatas(DICT_TYPE.BPM_MODEL_FORM_TYPE),\r\n      taskAssignRuleDictDatas: getDictDatas(DICT_TYPE.BPM_TASK_ASSIGN_RULE_TYPE),\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n    // 获得流程表单的下拉框的数据\r\n    getSimpleForms().then(response => {\r\n      this.forms = response.data\r\n    })\r\n  },\r\n  methods: {\r\n    /** 查询流程模型列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      getModelPage(this.queryParams).then(response => {\r\n          this.list = response.data.list;\r\n          this.total = response.data.total;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    },\r\n    /** 取消按钮 */\r\n    cancel() {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      this.form = {\r\n        id: undefined,\r\n        key: undefined,\r\n        name: undefined,\r\n        description: undefined,\r\n        category: undefined,\r\n        formType: undefined,\r\n        formId: undefined,\r\n        formCustomCreatePath: undefined,\r\n        formCustomViewPath: undefined\r\n      };\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNo = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.dateRange = [];\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd() {\r\n      this.reset();\r\n      this.title = \"新建模型\";\r\n      this.open = true;\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset();\r\n      this.title = \"修改模型\";\r\n      this.open = true;\r\n      // 设置 form\r\n      this.form = {\r\n        ...row\r\n      };\r\n      // 触发一次校验\r\n      // this.$refs[\"form\"].validate();\r\n    },\r\n    /** 设计按钮操作 */\r\n    handleDesign(row) {\r\n      this.$router.push({\r\n        name: \"BpmModelEditor\",\r\n        query:{\r\n          modelId: row.id\r\n        }\r\n      });\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (!valid) {\r\n          return;\r\n        }\r\n        // 更新\r\n        if (this.form.id) {\r\n          updateModel({\r\n            ...this.form,\r\n            formId: this.form.formType === 10 ? this.form.formId : undefined,\r\n            formCustomCreatePath: this.form.formType === 20 ? this.form.formCustomCreatePath : undefined,\r\n            formCustomViewPath: this.form.formType === 20 ? this.form.formCustomViewPath : undefined,\r\n          }).then(response => {\r\n            this.$modal.msgSuccess(\"修改模型成功\");\r\n            this.open = false;\r\n            this.getList();\r\n          });\r\n          return;\r\n        }\r\n        // 创建\r\n        createModel(this.form).then(response => {\r\n          this.open = false;\r\n          this.getList();\r\n          this.$alert('<strong>新建模型成功！</strong>后续需要执行如下 4 个步骤：' +\r\n            '<div>1. 点击【修改流程】按钮，配置流程的分类、表单信息</div>' +\r\n            '<div>2. 点击【设计流程】按钮，绘制流程图</div>' +\r\n            '<div>3. 点击【分配规则】按钮，设置每个用户任务的审批人</div>' +\r\n            '<div>4. 点击【发布流程】按钮，完成流程的最终发布</div>' +\r\n            '另外，每次流程修改后，都需要点击【发布流程】按钮，才能正式生效！！！',\r\n            '重要提示', {\r\n              dangerouslyUseHTMLString: true,\r\n              type: 'success'\r\n            });\r\n        });\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const that = this;\r\n      this.$modal.confirm('是否删除该流程！！').then(function() {\r\n        deleteModel(row.id).then(response => {\r\n          that.getList();\r\n          that.$modal.msgSuccess(\"删除成功\");\r\n        })\r\n      }).catch(() => {});\r\n    },\r\n    /** 部署按钮操作 */\r\n    handleDeploy(row) {\r\n      const that = this;\r\n      this.$modal.confirm('是否部署该流程！！').then(function() {\r\n        deployModel(row.id).then(response => {\r\n          that.getList();\r\n          that.$modal.msgSuccess(\"部署成功\");\r\n        })\r\n      }).catch(() => {});\r\n    },\r\n    /** 流程表单的详情按钮操作 */\r\n    handleFormDetail(row) {\r\n      // 流程表单\r\n      if (row.formId) {\r\n        getForm(row.formId).then(response => {\r\n          // 设置值\r\n          const data = response.data\r\n          this.detailForm = {\r\n            ...JSON.parse(data.conf),\r\n            fields: decodeFields(data.fields)\r\n          }\r\n          // 弹窗打开\r\n          this.detailOpen = true\r\n        })\r\n        // 业务表单\r\n      } else if (row.formCustomCreatePath) {\r\n        this.$router.push({ path: row.formCustomCreatePath});\r\n      }\r\n    },\r\n    /** 流程图的详情按钮操作 */\r\n    handleBpmnDetail(row) {\r\n      getModel(row.id).then(response => {\r\n        this.bpmnXML = response.data.bpmnXml\r\n        // 弹窗打开\r\n        this.showBpmnOpen = true\r\n      })\r\n    },\r\n    /** 跳转流程定义的列表 */\r\n    handleDefinitionList(row) {\r\n      this.$router.push({\r\n        name: \"BpmProcessDefinition\",\r\n        query:{\r\n          key: row.key\r\n        }\r\n      });\r\n    },\r\n    /** 更新状态操作 */\r\n    handleChangeState(row) {\r\n      const id = row.id;\r\n      let state = row.processDefinition.suspensionState;\r\n      let statusState = state === 1 ? '激活' : '挂起';\r\n      this.$modal.confirm('是否确认' + statusState + '流程名字为\"' + row.name + '\"的数据项?').then(function() {\r\n        return updateModelState(id, state);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.$modal.msgSuccess(statusState + \"成功\");\r\n      }).catch(() => {\r\n        // 取消后，进行恢复按钮\r\n        row.processDefinition.suspensionState = (state === 1 ? 2 : 1);\r\n      });\r\n    },\r\n    /** 导入按钮操作 */\r\n    handleImport() {\r\n      this.upload.open = true;\r\n    },\r\n    // 文件上传中处理\r\n    handleFileUploadProgress(event, file, fileList) {\r\n      this.upload.isUploading = true;\r\n    },\r\n    // 文件上传成功处理\r\n    handleFileSuccess(response, file, fileList) {\r\n      if (response.code !== 0) {\r\n        this.$modal.msgError(response.msg)\r\n        return;\r\n      }\r\n      // 重置表单\r\n      this.uploadClose();\r\n      // 提示，并刷新\r\n      this.$modal.msgSuccess(\"导入流程成功！请点击【设计流程】按钮，进行编辑保存后，才可以进行【发布流程】\");\r\n      this.getList();\r\n    },\r\n    uploadClose() {\r\n      // 关闭弹窗\r\n      this.upload.open = false;\r\n      // 重置上传状态和文件\r\n      this.upload.isUploading = false;\r\n      this.$refs.upload.clearFiles();\r\n      // 重置表单\r\n      this.upload.form = {};\r\n      this.resetForm(\"uploadForm\");\r\n    },\r\n    /** 提交上传文件 */\r\n    submitFileForm() {\r\n      this.$refs[\"uploadForm\"].validate(valid => {\r\n        if (!valid) {\r\n          return;\r\n        }\r\n        this.$refs.upload.submit();\r\n      })\r\n    },\r\n    /** 处理任务分配规则列表的按钮操作 */\r\n    handleAssignRule(row) {\r\n      this.$refs['taskAssignRuleDialog'].initModel(row.id);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.my-process-designer {\r\n  height: calc(100vh - 200px);\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;AAuNA,IAAAA,MAAA,GAAAC,OAAA;AASA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAC,sBAAA,CAAAL,OAAA;AACA,IAAAM,QAAA,GAAAN,OAAA;AACA,IAAAO,qBAAA,GAAAF,sBAAA,CAAAL,OAAA;AAEA,IAAAQ,cAAA,GAAAH,sBAAA,CAAAL,OAAA;AACAA,OAAA;AAAA,IAAAS,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEA;EACAC,IAAA;EACAC,UAAA;IACAC,MAAA,EAAAA,eAAA;IACAC,UAAA,EAAAA,sBAAA;IACAC,oBAAA,EAAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACA;MACAC,OAAA;MACA;MACAC,UAAA;MACA;MACAC,KAAA;MACA;MACAC,IAAA;MACA;MACAC,WAAA;QACAC,MAAA;QACAC,QAAA;MACA;MAEA;MACAC,YAAA;MACAC,OAAA;MACAC,eAAA;QACAC,MAAA;MACA;MAEA;MACAC,UAAA;MACAC,UAAA;QACAC,MAAA;MACA;MAEA;MACAC,KAAA;MACAC,IAAA;MACAC,IAAA;MACA;MACAC,KAAA;QACAC,GAAA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACA3B,IAAA;UAAAyB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,QAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAE,MAAA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAG,QAAA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAI,oBAAA;UAAAN,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAK,kBAAA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;MAEA;MACAM,MAAA;QACA;QACAZ,IAAA;QACA;QACAa,WAAA;QACA;QACAC,OAAA,MAAAC,sBAAA;QACA;QACAC,GAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,gBAAA;QACA;QACAlB,IAAA;QACA;QACAC,KAAA;UACAC,GAAA;YAAAC,QAAA;YAAAC,OAAA;YAAAC,OAAA;UAAA;UACA3B,IAAA;YAAAyB,QAAA;YAAAC,OAAA;YAAAC,OAAA;UAAA;QACA;MACA;MACA;MACAc,KAAA;MAEA;MACAC,iBAAA,MAAAC,kBAAA,EAAAC,eAAA,CAAAC,kBAAA;MACAC,sBAAA,MAAAH,kBAAA,EAAAC,eAAA,CAAAG,mBAAA;MACAC,uBAAA,MAAAL,kBAAA,EAAAC,eAAA,CAAAK,yBAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,KAAAC,OAAA;IACA;IACA,IAAAC,oBAAA,IAAAC,IAAA,WAAAC,QAAA;MACAJ,KAAA,CAAAV,KAAA,GAAAc,QAAA,CAAAlD,IAAA;IACA;EACA;EACAmD,OAAA;IACA,eACAJ,OAAA,WAAAA,QAAA;MAAA,IAAAK,MAAA;MACA,KAAAnD,OAAA;MACA,IAAAoD,mBAAA,OAAAhD,WAAA,EAAA4C,IAAA,WAAAC,QAAA;QACAE,MAAA,CAAAhD,IAAA,GAAA8C,QAAA,CAAAlD,IAAA,CAAAI,IAAA;QACAgD,MAAA,CAAAjD,KAAA,GAAA+C,QAAA,CAAAlD,IAAA,CAAAG,KAAA;QACAiD,MAAA,CAAAnD,OAAA;MACA,CACA;IACA;IACA,WACAqD,MAAA,WAAAA,OAAA;MACA,KAAAtC,IAAA;MACA,KAAAuC,KAAA;IACA;IACA;IACAA,KAAA,WAAAA,MAAA;MACA,KAAAtC,IAAA;QACAuC,EAAA,EAAAC,SAAA;QACAtC,GAAA,EAAAsC,SAAA;QACA9D,IAAA,EAAA8D,SAAA;QACAC,WAAA,EAAAD,SAAA;QACAhC,QAAA,EAAAgC,SAAA;QACAlC,QAAA,EAAAkC,SAAA;QACAjC,MAAA,EAAAiC,SAAA;QACA/B,oBAAA,EAAA+B,SAAA;QACA9B,kBAAA,EAAA8B;MACA;MACA,KAAAE,SAAA;IACA;IACA,aACAC,WAAA,WAAAA,YAAA;MACA,KAAAvD,WAAA,CAAAC,MAAA;MACA,KAAAyC,OAAA;IACA;IACA,aACAc,UAAA,WAAAA,WAAA;MACA,KAAAC,SAAA;MACA,KAAAH,SAAA;MACA,KAAAC,WAAA;IACA;IACA,aACAG,SAAA,WAAAA,UAAA;MACA,KAAAR,KAAA;MACA,KAAAxC,KAAA;MACA,KAAAC,IAAA;IACA;IACA,aACAgD,YAAA,WAAAA,aAAAC,GAAA;MACA,KAAAV,KAAA;MACA,KAAAxC,KAAA;MACA,KAAAC,IAAA;MACA;MACA,KAAAC,IAAA,OAAAiD,cAAA,CAAAxE,OAAA,MACAuE,GAAA,CACA;MACA;MACA;IACA;IACA,aACAE,YAAA,WAAAA,aAAAF,GAAA;MACA,KAAAG,OAAA,CAAAC,IAAA;QACA1E,IAAA;QACA2E,KAAA;UACAC,OAAA,EAAAN,GAAA,CAAAT;QACA;MACA;IACA;IACA,WACAgB,UAAA,WAAAA,WAAA;MAAA,IAAAC,MAAA;MACA,KAAAC,KAAA,SAAAC,QAAA,WAAAC,KAAA;QACA,KAAAA,KAAA;UACA;QACA;QACA;QACA,IAAAH,MAAA,CAAAxD,IAAA,CAAAuC,EAAA;UACA,IAAAqB,kBAAA,MAAAX,cAAA,CAAAxE,OAAA,MAAAwE,cAAA,CAAAxE,OAAA,MACA+E,MAAA,CAAAxD,IAAA;YACAO,MAAA,EAAAiD,MAAA,CAAAxD,IAAA,CAAAM,QAAA,UAAAkD,MAAA,CAAAxD,IAAA,CAAAO,MAAA,GAAAiC,SAAA;YACA/B,oBAAA,EAAA+C,MAAA,CAAAxD,IAAA,CAAAM,QAAA,UAAAkD,MAAA,CAAAxD,IAAA,CAAAS,oBAAA,GAAA+B,SAAA;YACA9B,kBAAA,EAAA8C,MAAA,CAAAxD,IAAA,CAAAM,QAAA,UAAAkD,MAAA,CAAAxD,IAAA,CAAAU,kBAAA,GAAA8B;UAAA,EACA,EAAAR,IAAA,WAAAC,QAAA;YACAuB,MAAA,CAAAK,MAAA,CAAAC,UAAA;YACAN,MAAA,CAAAzD,IAAA;YACAyD,MAAA,CAAA1B,OAAA;UACA;UACA;QACA;QACA;QACA,IAAAiC,kBAAA,EAAAP,MAAA,CAAAxD,IAAA,EAAAgC,IAAA,WAAAC,QAAA;UACAuB,MAAA,CAAAzD,IAAA;UACAyD,MAAA,CAAA1B,OAAA;UACA0B,MAAA,CAAAQ,MAAA,6CACA,0CACA,mCACA,0CACA,uCACA,sCACA;YACAC,wBAAA;YACAC,IAAA;UACA;QACA;MACA;IACA;IACA,aACAC,YAAA,WAAAA,aAAAnB,GAAA;MACA,IAAAoB,IAAA;MACA,KAAAP,MAAA,CAAAQ,OAAA,cAAArC,IAAA;QACA,IAAAsC,kBAAA,EAAAtB,GAAA,CAAAT,EAAA,EAAAP,IAAA,WAAAC,QAAA;UACAmC,IAAA,CAAAtC,OAAA;UACAsC,IAAA,CAAAP,MAAA,CAAAC,UAAA;QACA;MACA,GAAAS,KAAA;IACA;IACA,aACAC,YAAA,WAAAA,aAAAxB,GAAA;MACA,IAAAoB,IAAA;MACA,KAAAP,MAAA,CAAAQ,OAAA,cAAArC,IAAA;QACA,IAAAyC,kBAAA,EAAAzB,GAAA,CAAAT,EAAA,EAAAP,IAAA,WAAAC,QAAA;UACAmC,IAAA,CAAAtC,OAAA;UACAsC,IAAA,CAAAP,MAAA,CAAAC,UAAA;QACA;MACA,GAAAS,KAAA;IACA;IACA,kBACAG,gBAAA,WAAAA,iBAAA1B,GAAA;MAAA,IAAA2B,MAAA;MACA;MACA,IAAA3B,GAAA,CAAAzC,MAAA;QACA,IAAAqE,aAAA,EAAA5B,GAAA,CAAAzC,MAAA,EAAAyB,IAAA,WAAAC,QAAA;UACA;UACA,IAAAlD,IAAA,GAAAkD,QAAA,CAAAlD,IAAA;UACA4F,MAAA,CAAA/E,UAAA,OAAAqD,cAAA,CAAAxE,OAAA,MAAAwE,cAAA,CAAAxE,OAAA,MACAoG,IAAA,CAAAC,KAAA,CAAA/F,IAAA,CAAAgG,IAAA;YACAlF,MAAA,MAAAmF,2BAAA,EAAAjG,IAAA,CAAAc,MAAA;UAAA,EACA;UACA;UACA8E,MAAA,CAAAhF,UAAA;QACA;QACA;MACA,WAAAqD,GAAA,CAAAvC,oBAAA;QACA,KAAA0C,OAAA,CAAAC,IAAA;UAAA6B,IAAA,EAAAjC,GAAA,CAAAvC;QAAA;MACA;IACA;IACA,iBACAyE,gBAAA,WAAAA,iBAAAlC,GAAA;MAAA,IAAAmC,MAAA;MACA,IAAAC,eAAA,EAAApC,GAAA,CAAAT,EAAA,EAAAP,IAAA,WAAAC,QAAA;QACAkD,MAAA,CAAA3F,OAAA,GAAAyC,QAAA,CAAAlD,IAAA,CAAAsG,OAAA;QACA;QACAF,MAAA,CAAA5F,YAAA;MACA;IACA;IACA,gBACA+F,oBAAA,WAAAA,qBAAAtC,GAAA;MACA,KAAAG,OAAA,CAAAC,IAAA;QACA1E,IAAA;QACA2E,KAAA;UACAnD,GAAA,EAAA8C,GAAA,CAAA9C;QACA;MACA;IACA;IACA,aACAqF,iBAAA,WAAAA,kBAAAvC,GAAA;MAAA,IAAAwC,MAAA;MACA,IAAAjD,EAAA,GAAAS,GAAA,CAAAT,EAAA;MACA,IAAAkD,KAAA,GAAAzC,GAAA,CAAA0C,iBAAA,CAAAC,eAAA;MACA,IAAAC,WAAA,GAAAH,KAAA;MACA,KAAA5B,MAAA,CAAAQ,OAAA,UAAAuB,WAAA,cAAA5C,GAAA,CAAAtE,IAAA,aAAAsD,IAAA;QACA,WAAA6D,uBAAA,EAAAtD,EAAA,EAAAkD,KAAA;MACA,GAAAzD,IAAA;QACAwD,MAAA,CAAA1D,OAAA;QACA0D,MAAA,CAAA3B,MAAA,CAAAC,UAAA,CAAA8B,WAAA;MACA,GAAArB,KAAA;QACA;QACAvB,GAAA,CAAA0C,iBAAA,CAAAC,eAAA,GAAAF,KAAA;MACA;IACA;IACA,aACAK,YAAA,WAAAA,aAAA;MACA,KAAAnF,MAAA,CAAAZ,IAAA;IACA;IACA;IACAgG,wBAAA,WAAAA,yBAAAC,KAAA,EAAAC,IAAA,EAAAC,QAAA;MACA,KAAAvF,MAAA,CAAAC,WAAA;IACA;IACA;IACAuF,iBAAA,WAAAA,kBAAAlE,QAAA,EAAAgE,IAAA,EAAAC,QAAA;MACA,IAAAjE,QAAA,CAAAmE,IAAA;QACA,KAAAvC,MAAA,CAAAwC,QAAA,CAAApE,QAAA,CAAAqE,GAAA;QACA;MACA;MACA;MACA,KAAAC,WAAA;MACA;MACA,KAAA1C,MAAA,CAAAC,UAAA;MACA,KAAAhC,OAAA;IACA;IACAyE,WAAA,WAAAA,YAAA;MACA;MACA,KAAA5F,MAAA,CAAAZ,IAAA;MACA;MACA,KAAAY,MAAA,CAAAC,WAAA;MACA,KAAA6C,KAAA,CAAA9C,MAAA,CAAA6F,UAAA;MACA;MACA,KAAA7F,MAAA,CAAAX,IAAA;MACA,KAAA0C,SAAA;IACA;IACA,aACA+D,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MACA,KAAAjD,KAAA,eAAAC,QAAA,WAAAC,KAAA;QACA,KAAAA,KAAA;UACA;QACA;QACA+C,MAAA,CAAAjD,KAAA,CAAA9C,MAAA,CAAAgG,MAAA;MACA;IACA;IACA,sBACAC,gBAAA,WAAAA,iBAAA5D,GAAA;MACA,KAAAS,KAAA,yBAAAoD,SAAA,CAAA7D,GAAA,CAAAT,EAAA;IACA;EACA;AACA"}]}