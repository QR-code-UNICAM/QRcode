{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\utils\\request.js","mtime":1704630437831},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\babel.config.js","mtime":1704630437199},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_axios","_interopRequireDefault","require","_elementUi","_store","_auth","_errorCode","_ruoyi","_login","ignoreMsgs","isRelogin","exports","show","requestList","isRefreshToken","axios","defaults","headers","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","withCredentials","interceptors","request","use","config","isToken","getAccessToken","getTenantEnable","tenantId","getTenantId","method","params","url","_i","_Object$keys","Object","keys","length","propName","value","part","encodeURIComponent","_typeof2","default","_i2","_Object$keys2","key","subPart","slice","error","console","log","Promise","reject","response","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","res","code","msg","refreshTokenRes","wrap","_callee$","_context","prev","next","data","errorCode","indexOf","abrupt","getRefreshToken","handleAuthorized","refreshToken","sent","setToken","forEach","cb","t0","finish","resolve","push","Message","message","type","Error","duration","dangerouslyUseHTMLString","Notification","title","stop","_x","apply","arguments","includes","substr","getBaseHeader","MessageBox","confirm","confirmButtonText","cancelButtonText","then","store","dispatch","location","href","getPath","catch","_default"],"sources":["C:/Users/89425/IdeaProjects/qr-code-vue/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport {Message, MessageBox, Notification} from 'element-ui'\r\nimport store from '@/store'\r\nimport {getAccessToken, getRefreshToken, getTenantId, setToken} from '@/utils/auth'\r\nimport errorCode from '@/utils/errorCode'\r\nimport {getPath, getTenantEnable} from \"@/utils/ruoyi\";\r\nimport {refreshToken} from \"@/api/login\";\r\n\r\n// 需要忽略的提示。忽略后，自动 Promise.reject('error')\r\nconst ignoreMsgs = [\r\n  \"无效的刷新令牌\", // 刷新令牌被删除时，不用提示\r\n  \"刷新令牌已过期\" // 使用刷新令牌，刷新获取新的访问令牌时，结果因为过期失败，此时需要忽略。否则，会导致继续 401，无法跳转到登出界面\r\n]\r\n\r\n// 是否显示重新登录\r\nexport let isRelogin = { show: false };\r\n// Axios 无感知刷新令牌，参考 https://www.dashingdog.cn/article/11 与 https://segmentfault.com/a/1190000020210980 实现\r\n// 请求队列\r\nlet requestList = []\r\n// 是否正在刷新中\r\nlet isRefreshToken = false\r\n\r\naxios.defaults.headers['Content-Type'] = 'application/json;charset=utf-8'\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  // axios中请求配置有baseURL选项，表示请求URL公共部分\r\n  baseURL: process.env.VUE_APP_BASE_API , // 此处的 /admin-api/ 地址，原因是后端的基础路径为 /admin-api/\r\n  // 超时\r\n  timeout: 30000,\r\n  // 禁用 Cookie 等信息\r\n  withCredentials: false,\r\n})\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n  // 是否需要设置 token\r\n  const isToken = (config.headers || {}).isToken === false\r\n  if (getAccessToken() && !isToken) {\r\n    config.headers['Authorization'] = 'Bearer ' + getAccessToken() // 让每个请求携带自定义token 请根据实际情况自行修改\r\n  }\r\n  // 设置租户\r\n  if (getTenantEnable()) {\r\n    const tenantId = getTenantId();\r\n    if (tenantId) {\r\n      config.headers['tenant-id'] = tenantId;\r\n    }\r\n  }\r\n  // get请求映射params参数\r\n  if (config.method === 'get' && config.params) {\r\n    let url = config.url + '?';\r\n    for (const propName of Object.keys(config.params)) {\r\n      const value = config.params[propName];\r\n      const part = encodeURIComponent(propName) + '='\r\n      if (value !== null && typeof(value) !== \"undefined\") {\r\n        if (typeof value === 'object') {\r\n          for (const key of Object.keys(value)) {\r\n            let params = propName + '[' + key + ']';\r\n            const subPart = encodeURIComponent(params) + '='\r\n            url += subPart + encodeURIComponent(value[key]) + \"&\";\r\n          }\r\n        } else {\r\n          url += part + encodeURIComponent(value) + \"&\";\r\n        }\r\n      }\r\n    }\r\n    url = url.slice(0, -1);\r\n    config.params = {};\r\n    config.url = url;\r\n  }\r\n  return config\r\n}, error => {\r\n    console.log(error)\r\n    Promise.reject(error)\r\n})\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(async res => {\r\n  // 未设置状态码则默认成功状态\r\n  const code = res.data.code || 200;\r\n  // 获取错误信息\r\n  const msg = res.data.msg || errorCode[code] || errorCode['default']\r\n  if (ignoreMsgs.indexOf(msg) !== -1) { // 如果是忽略的错误码，直接返回 msg 异常\r\n    return Promise.reject(msg)\r\n  } else if (code === 401) {\r\n    // 如果未认证，并且未进行刷新令牌，说明可能是访问令牌过期了\r\n    if (!isRefreshToken) {\r\n      isRefreshToken = true;\r\n      // 1. 如果获取不到刷新令牌，则只能执行登出操作\r\n      if (!getRefreshToken()) {\r\n        return handleAuthorized();\r\n      }\r\n      // 2. 进行刷新访问令牌\r\n      try {\r\n        const refreshTokenRes = await refreshToken()\r\n        // 2.1 刷新成功，则回放队列的请求 + 当前请求\r\n        setToken(refreshTokenRes.data)\r\n        requestList.forEach(cb => cb())\r\n        return service(res.config)\r\n      } catch (e) {// 为什么需要 catch 异常呢？刷新失败时，请求因为 Promise.reject 触发异常。\r\n        // 2.2 刷新失败，只回放队列的请求\r\n        requestList.forEach(cb => cb())\r\n        // 提示是否要登出。即不回放当前请求！不然会形成递归\r\n        return handleAuthorized();\r\n      } finally {\r\n        requestList = []\r\n        isRefreshToken = false\r\n      }\r\n    } else {\r\n      // 添加到队列，等待刷新获取到新的令牌\r\n      return new Promise(resolve => {\r\n        requestList.push(() => {\r\n          res.config.headers['Authorization'] = 'Bearer ' + getAccessToken() // 让每个请求携带自定义token 请根据实际情况自行修改\r\n          resolve(service(res.config))\r\n        })\r\n      })\r\n    }\r\n  } else if (code === 500) {\r\n    Message({\r\n      message: msg,\r\n      type: 'error'\r\n    })\r\n    return Promise.reject(new Error(msg))\r\n  } else if (code === 501) {\r\n    Message({\r\n      type: 'error',\r\n      duration: 0,\r\n      message: msg\r\n    })\r\n    return Promise.reject(new Error(msg))\r\n  } else if (code === 901) {\r\n    Message({\r\n      type: 'error',\r\n      duration: 0,\r\n      dangerouslyUseHTMLString: true,\r\n      message: '<div>演示模式，无法进行写操作</div>'\r\n        + '<div> &nbsp; </div>'\r\n        + '<div>参考 https://doc.iocoder.cn/ 教程</div>'\r\n        + '<div> &nbsp; </div>'\r\n        + '<div>5 分钟搭建本地环境</div>',\r\n    })\r\n    return Promise.reject(new Error(msg))\r\n  } else if (code !== 200) {\r\n    if (msg === '无效的刷新令牌') { // hard coding：忽略这个提示，直接登出\r\n      console.log(msg)\r\n    } else {\r\n      Notification.error({\r\n        title: msg\r\n      })\r\n    }\r\n    return Promise.reject('error')\r\n  } else {\r\n    return res.data\r\n  }\r\n}, error => {\r\n    console.log('err' + error)\r\n    let {message} = error;\r\n    if (message === \"Network Error\") {\r\n      message = \"后端接口连接异常\";\r\n    } else if (message.includes(\"timeout\")) {\r\n      message = \"系统接口请求超时\";\r\n    } else if (message.includes(\"Request failed with status code\")) {\r\n      message = \"系统接口\" + message.substr(message.length - 3) + \"异常\";\r\n    }\r\n    Message({\r\n      message: message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport function getBaseHeader() {\r\n  return {\r\n    'Authorization': \"Bearer \" + getAccessToken(),\r\n    'tenant-id': getTenantId(),\r\n  }\r\n}\r\n\r\nfunction handleAuthorized() {\r\n  if (!isRelogin.show) {\r\n    isRelogin.show = true;\r\n    MessageBox.confirm('登录状态已过期，您可以继续留在该页面，或者重新登录', '系统提示', {\r\n        confirmButtonText: '重新登录',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    ).then(() => {\r\n      isRelogin.show = false;\r\n      store.dispatch('LogOut').then(() => {\r\n        location.href = getPath('/index');\r\n      })\r\n    }).catch(() => {\r\n      isRelogin.show = false;\r\n    });\r\n  }\r\n  return Promise.reject('无效的会话，或者会话已过期，请重新登录。')\r\n}\r\n\r\nexport default service\r\n"],"mappings":"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"}]}