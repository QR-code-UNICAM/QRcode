{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\designer\\ProcessViewer.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\designer\\ProcessViewer.vue","mtime":1704630437688},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\babel.config.js","mtime":1704630437199},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_Viewer","_interopRequireDefault","require","_defaultEmpty","_default2","exports","default","name","componentName","props","value","type","String","prefix","activityData","Array","_default","processInstanceData","Object","taskData","data","xml","activityList","processInstance","undefined","taskList","mounted","_this","initBpmnModeler","createNewDiagram","$once","bpmnModeler","destroy","$emit","initModelListeners","watch","newValue","newActivityData","newProcessInstanceData","newTaskListData","methods","BpmnViewer","container","$refs","bpmnRenderer","_this2","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","newId","newName","xmlString","_yield$_this2$bpmnMod","warnings","canvas","wrap","_callee$","_context","prev","next","concat","Date","getTime","DefaultEmptyXML","importXML","sent","length","forEach","warn","console","highlightDiagram","get","zoom","t0","error","stop","_this3","_callee2","_this3$bpmnModeler$ge","todoActivity","endActivity","_callee2$","_context2","abrupt","find","m","endTime","getDefinitions","rootElements","flowElements","n","activity","key","id","$type","task","taskId","addMarker","getResultCss","result","outgoing","getActivityOutgoing","nn","targetActivity","targetRef","_n$outgoing","getActivityHighlightCss","matchNN","matchActivity","_n$outgoing2","_n$outgoing3","startTime","out","item","sourceRef","push","EventBus","that","on","eventObj","element","elementHover","elementOut","elementOverlayIds","overlays","html","startUser","nickname","deptName","parseTime","createTime","assigneeUser","getDictDataLabel","DICT_TYPE","BPM_PROCESS_INSTANCE_RESULT","reason","log","add","position","left","bottom","remove"],"sources":["src/components/bpmnProcessDesigner/package/designer/ProcessViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-process-designer\">\r\n    <div class=\"my-process-designer__container\">\r\n      <div class=\"my-process-designer__canvas\" ref=\"bpmn-canvas\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BpmnViewer from \"bpmn-js/lib/Viewer\";\r\nimport DefaultEmptyXML from \"./plugins/defaultEmpty\";\r\n\r\nexport default {\r\n  name: \"MyProcessViewer\",\r\n  componentName: \"MyProcessViewer\",\r\n  props: {\r\n    value: {  // BPMN XML 字符串\r\n      type: String,\r\n    },\r\n    prefix: { // 使用哪个引擎\r\n      type: String,\r\n      default: \"camunda\",\r\n    },\r\n    activityData: { // 活动的数据。传递时，可高亮流程\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    processInstanceData: { // 流程实例的数据。传递时，可展示流程发起人等信息\r\n      type: Object,\r\n    },\r\n    taskData: { // 任务实例的数据。传递时，可展示 UserTask 审核相关的信息\r\n      type: Array,\r\n      default: () => [],\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      xml: '',\r\n      activityList: [],\r\n      processInstance: undefined,\r\n      taskList: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.xml = this.value;\r\n    this.activityList = this.activityData;\r\n    // 初始化\r\n    this.initBpmnModeler();\r\n    this.createNewDiagram(this.xml);\r\n    this.$once(\"hook:beforeDestroy\", () => {\r\n      if (this.bpmnModeler) this.bpmnModeler.destroy();\r\n      this.$emit(\"destroy\", this.bpmnModeler);\r\n      this.bpmnModeler = null;\r\n    });\r\n    // 初始模型的监听器\r\n    this.initModelListeners();\r\n  },\r\n  watch: {\r\n    value: function (newValue) { // 在 xmlString 发生变化时，重新创建，从而绘制流程图\r\n      this.xml = newValue;\r\n      this.createNewDiagram(this.xml);\r\n    },\r\n    activityData: function (newActivityData) {\r\n      this.activityList = newActivityData;\r\n      this.createNewDiagram(this.xml);\r\n    },\r\n    processInstanceData: function (newProcessInstanceData) {\r\n      this.processInstance = newProcessInstanceData;\r\n      this.createNewDiagram(this.xml);\r\n    },\r\n    taskData: function (newTaskListData) {\r\n      this.taskList = newTaskListData;\r\n      this.createNewDiagram(this.xml);\r\n    }\r\n  },\r\n  methods: {\r\n    initBpmnModeler() {\r\n      if (this.bpmnModeler) return;\r\n      this.bpmnModeler = new BpmnViewer({\r\n        container: this.$refs[\"bpmn-canvas\"],\r\n        bpmnRenderer: {\r\n        }\r\n      })\r\n    },\r\n    /* 创建新的流程图 */\r\n    async createNewDiagram(xml) {\r\n      // 将字符串转换成图显示出来\r\n      let newId = `Process_${new Date().getTime()}`;\r\n      let newName = `业务流程_${new Date().getTime()}`;\r\n      let xmlString = xml || DefaultEmptyXML(newId, newName, this.prefix);\r\n      try {\r\n        // console.log(this.bpmnModeler.importXML);\r\n        let { warnings } = await this.bpmnModeler.importXML(xmlString);\r\n        if (warnings && warnings.length) {\r\n          warnings.forEach(warn => console.warn(warn));\r\n        }\r\n        // 高亮流程图\r\n        await this.highlightDiagram();\r\n        const canvas = this.bpmnModeler.get('canvas');\r\n        canvas.zoom(\"fit-viewport\", \"auto\");\r\n      } catch (e) {\r\n        console.error(e);\r\n        // console.error(`[Process Designer Warn]: ${e?.message || e}`);\r\n      }\r\n    },\r\n    /* 高亮流程图 */\r\n    // TODO 芋艿：如果多个 endActivity 的话，目前的逻辑可能有一定的问题。https://www.jdon.com/workflow/multi-events.html\r\n    async highlightDiagram() {\r\n      const activityList = this.activityList;\r\n      if (activityList.length === 0) {\r\n        return;\r\n      }\r\n      // 参考自 https://gitee.com/tony2y/RuoYi-flowable/blob/master/ruoyi-ui/src/components/Process/index.vue#L222 实现\r\n      // 再次基础上，增加不同审批结果的颜色等等\r\n      let canvas = this.bpmnModeler.get('canvas');\r\n      let todoActivity = activityList.find(m => !m.endTime) // 找到待办的任务\r\n      let endActivity = activityList[activityList.length - 1] // 获得最后一个任务\r\n      // debugger\r\n      // console.log(this.bpmnModeler.getDefinitions().rootElements[0].flowElements);\r\n      this.bpmnModeler.getDefinitions().rootElements[0].flowElements?.forEach(n => {\r\n        let activity = activityList.find(m => m.key === n.id) // 找到对应的活动\r\n        if (!activity) {\r\n          return;\r\n        }\r\n        if (n.$type === 'bpmn:UserTask') { // 用户任务\r\n          // 处理用户任务的高亮\r\n          const task = this.taskList.find(m => m.id === activity.taskId); // 找到活动对应的 taskId\r\n          if (!task) {\r\n            return;\r\n          }\r\n          // 高亮任务\r\n          canvas.addMarker(n.id, this.getResultCss(task.result));\r\n\r\n          // 如果非通过，就不走后面的线条了\r\n          if (task.result !== 2) {\r\n            return;\r\n          }\r\n          // 处理 outgoing 出线\r\n          const outgoing = this.getActivityOutgoing(activity);\r\n          outgoing?.forEach(nn => {\r\n            // debugger\r\n            let targetActivity = activityList.find(m => m.key === nn.targetRef.id)\r\n            // 如果目标活动存在，则根据该活动是否结束，进行【bpmn:SequenceFlow】连线的高亮设置\r\n            if (targetActivity) {\r\n              canvas.addMarker(nn.id, targetActivity.endTime ? 'highlight' : 'highlight-todo');\r\n            } else if (nn.targetRef.$type === 'bpmn:ExclusiveGateway') { // TODO 芋艿：这个流程，暂时没走到过\r\n              canvas.addMarker(nn.id, activity.endTime ? 'highlight' : 'highlight-todo');\r\n              canvas.addMarker(nn.targetRef.id, activity.endTime ? 'highlight' : 'highlight-todo');\r\n            } else if (nn.targetRef.$type === 'bpmn:EndEvent') { // TODO 芋艿：这个流程，暂时没走到过\r\n              if (!todoActivity && endActivity.key === n.id) {\r\n                canvas.addMarker(nn.id, 'highlight');\r\n                canvas.addMarker(nn.targetRef.id, 'highlight');\r\n              }\r\n              if (!activity.endTime) {\r\n                canvas.addMarker(nn.id, 'highlight-todo');\r\n                canvas.addMarker(nn.targetRef.id, 'highlight-todo');\r\n              }\r\n            }\r\n          });\r\n        } else if (n.$type === 'bpmn:ExclusiveGateway') { // 排它网关\r\n          // 设置【bpmn:ExclusiveGateway】排它网关的高亮\r\n          canvas.addMarker(n.id, this.getActivityHighlightCss(activity));\r\n          // 查找需要高亮的连线\r\n          let matchNN = undefined;\r\n          let matchActivity = undefined;\r\n          n.outgoing?.forEach(nn => {\r\n            let targetActivity = activityList.find(m => m.key === nn.targetRef.id);\r\n            if (!targetActivity) {\r\n              return;\r\n            }\r\n            // 特殊判断 endEvent 类型的原因，ExclusiveGateway 可能后续连有 2 个路径：\r\n            //  1. 一个是 UserTask => EndEvent\r\n            //  2. 一个是 EndEvent\r\n            // 在选择路径 1 时，其实 EndEvent 可能也存在，导致 1 和 2 都高亮，显然是不正确的。\r\n            // 所以，在 matchActivity 为 EndEvent 时，需要进行覆盖~~\r\n            if (!matchActivity || matchActivity.type === 'endEvent') {\r\n              matchNN = nn;\r\n              matchActivity = targetActivity;\r\n            }\r\n          })\r\n          if (matchNN && matchActivity) {\r\n            canvas.addMarker(matchNN.id, this.getActivityHighlightCss(matchActivity));\r\n          }\r\n        } else if (n.$type === 'bpmn:ParallelGateway') { // 并行网关\r\n          // 设置【bpmn:ParallelGateway】并行网关的高亮\r\n          canvas.addMarker(n.id, this.getActivityHighlightCss(activity));\r\n          n.outgoing?.forEach(nn => {\r\n            // 获得连线是否有指向目标。如果有，则进行高亮\r\n            const targetActivity = activityList.find(m => m.key === nn.targetRef.id)\r\n            if (targetActivity) {\r\n              canvas.addMarker(nn.id, this.getActivityHighlightCss(targetActivity)); // 高亮【bpmn:SequenceFlow】连线\r\n              // 高亮【...】目标。其中 ... 可以是 bpm:UserTask、也可以是其它的。当然，如果是 bpm:UserTask 的话，其实不做高亮也没问题，因为上面有逻辑做了这块。\r\n              canvas.addMarker(nn.targetRef.id, this.getActivityHighlightCss(targetActivity));\r\n            }\r\n          })\r\n        } else if (n.$type === 'bpmn:StartEvent') { // 开始节点\r\n          n.outgoing?.forEach(nn => { // outgoing 例如说【bpmn:SequenceFlow】连线\r\n            // 获得连线是否有指向目标。如果有，则进行高亮\r\n            let targetActivity = activityList.find(m => m.key === nn.targetRef.id);\r\n            if (targetActivity) {\r\n              canvas.addMarker(nn.id, 'highlight'); // 高亮【bpmn:SequenceFlow】连线\r\n              canvas.addMarker(n.id, 'highlight'); // 高亮【bpmn:StartEvent】开始节点（自己）\r\n            }\r\n          });\r\n        } else if (n.$type === 'bpmn:EndEvent') { // 结束节点\r\n          if (!this.processInstance || this.processInstance.result === 1) {\r\n            return;\r\n          }\r\n          canvas.addMarker(n.id, this.getResultCss(this.processInstance.result));\r\n        } else if (n.$type === 'bpmn:ServiceTask'){ //服务任务\r\n          if(activity.startTime>0 && activity.endTime===0){//进入执行，标识进行色\r\n            canvas.addMarker(n.id, this.getResultCss(1));\r\n          }\r\n          if(activity.endTime>0){// 执行完成，节点标识完成色, 所有outgoing标识完成色。\r\n            canvas.addMarker(n.id, this.getResultCss(2));\r\n            const outgoing = this.getActivityOutgoing(activity)\r\n            outgoing?.forEach(out=>{\r\n              canvas.addMarker(out.id,this.getResultCss(2))\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getActivityHighlightCss(activity) {\r\n      return activity.endTime ? 'highlight' : 'highlight-todo';\r\n    },\r\n    getResultCss(result) {\r\n      if (result === 1) { // 审批中\r\n        return 'highlight-todo';\r\n      } else if (result === 2) { // 已通过\r\n        return 'highlight';\r\n      } else if (result === 3) { // 不通过\r\n        return 'highlight-reject';\r\n      } else if (result === 4) { // 已取消\r\n        return 'highlight-cancel';\r\n      } else if (result === 5) { // 已退回\r\n        return 'highlight-back';\r\n      } else if (result === 6) { // 已委派\r\n        return 'highlight-todo';\r\n      }\r\n      return '';\r\n    },\r\n    getActivityOutgoing(activity) {\r\n      // 如果有 outgoing，则直接使用它\r\n      if (activity.outgoing && activity.outgoing.length > 0) {\r\n        return activity.outgoing;\r\n      }\r\n      // 如果没有，则遍历获得起点为它的【bpmn:SequenceFlow】节点们。原因是：bpmn-js 的 UserTask 拿不到 outgoing\r\n      const flowElements = this.bpmnModeler.getDefinitions().rootElements[0].flowElements;\r\n      const outgoing = [];\r\n      flowElements.forEach(item => {\r\n        if (item.$type !== 'bpmn:SequenceFlow') {\r\n          return;\r\n        }\r\n        if (item.sourceRef.id === activity.key) {\r\n          outgoing.push(item);\r\n        }\r\n      });\r\n      return outgoing;\r\n    },\r\n    initModelListeners() {\r\n      const EventBus = this.bpmnModeler.get(\"eventBus\");\r\n      const that = this;\r\n      // 注册需要的监听事件\r\n      EventBus.on('element.hover', function(eventObj) {\r\n        let element = eventObj ? eventObj.element : null;\r\n        that.elementHover(element);\r\n      });\r\n      EventBus.on('element.out', function(eventObj) {\r\n        let element = eventObj ? eventObj.element : null;\r\n        that.elementOut(element);\r\n      });\r\n    },\r\n    // 流程图的元素被 hover\r\n    elementHover(element) {\r\n      this.element = element;\r\n      !this.elementOverlayIds && (this.elementOverlayIds = {});\r\n      !this.overlays && (this.overlays = this.bpmnModeler.get(\"overlays\"));\r\n      // 展示信息\r\n      const activity = this.activityList.find(m => m.key === element.id);\r\n      if (!activity) {\r\n        return;\r\n      }\r\n      if (!this.elementOverlayIds[element.id] && element.type !== \"bpmn:Process\") {\r\n        let html = `<div class=\"element-overlays\">\r\n            <p>Elemet id: ${element.id}</p>\r\n            <p>Elemet type: ${element.type}</p>\r\n          </div>`; // 默认值\r\n        if (element.type === 'bpmn:StartEvent' && this.processInstance) {\r\n          html = `<p>发起人：${this.processInstance.startUser.nickname}</p>\r\n                  <p>部门：${this.processInstance.startUser.deptName}</p>\r\n                  <p>创建时间：${this.parseTime(this.processInstance.createTime)}`;\r\n        } else if (element.type === 'bpmn:UserTask') {\r\n          // debugger\r\n          let task = this.taskList.find(m => m.id === activity.taskId); // 找到活动对应的 taskId\r\n          if (!task) {\r\n            return;\r\n          }\r\n          html = `<p>审批人：${task.assigneeUser.nickname}</p>\r\n                  <p>部门：${task.assigneeUser.deptName}</p>\r\n                  <p>结果：${this.getDictDataLabel(this.DICT_TYPE.BPM_PROCESS_INSTANCE_RESULT, task.result)}</p>\r\n                  <p>创建时间：${this.parseTime(task.createTime)}</p>`;\r\n          if (task.endTime) {\r\n            html += `<p>结束时间：${this.parseTime(task.endTime)}</p>`\r\n          }\r\n          if (task.reason) {\r\n            html += `<p>审批建议：${task.reason}</p>`\r\n          }\r\n        } else if (element.type === 'bpmn:ServiceTask' && this.processInstance) {\r\n          if(activity.startTime>0){\r\n            html = `<p>创建时间：${this.parseTime(activity.startTime)}</p>`;\r\n          }\r\n          if(activity.endTime>0){\r\n            html += `<p>结束时间：${this.parseTime(activity.endTime)}</p>`\r\n          }\r\n          console.log(html)\r\n        } else if (element.type === 'bpmn:EndEvent' && this.processInstance) {\r\n          html = `<p>结果：${this.getDictDataLabel(this.DICT_TYPE.BPM_PROCESS_INSTANCE_RESULT, this.processInstance.result)}</p>`;\r\n          if (this.processInstance.endTime) {\r\n            html += `<p>结束时间：${this.parseTime(this.processInstance.endTime)}</p>`\r\n          }\r\n        }\r\n        this.elementOverlayIds[element.id] = this.overlays.add(element, {\r\n          position: { left: 0, bottom: 0 },\r\n          html: `<div class=\"element-overlays\">${html}</div>`\r\n        });\r\n      }\r\n    },\r\n    // 流程图的元素被 out\r\n    elementOut(element) {\r\n      this.overlays.remove({ element });\r\n      this.elementOverlayIds[element.id] = null;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n/** 处理中 */\r\n.highlight-todo.djs-connection > .djs-visual > path {\r\n  stroke: #1890ff !important;\r\n  stroke-dasharray: 4px !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n.highlight-todo.djs-shape .djs-visual > :nth-child(1) {\r\n  fill: #1890ff !important;\r\n  stroke: #1890ff !important;\r\n  stroke-dasharray: 4px !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n\r\n:deep(.highlight-todo.djs-connection > .djs-visual > path) {\r\n  stroke: #1890ff !important;\r\n  stroke-dasharray: 4px !important;\r\n  fill-opacity: 0.2 !important;\r\n  marker-end: url(#sequenceflow-end-_E7DFDF-_E7DFDF-803g1kf6zwzmcig1y2ulm5egr);\r\n}\r\n:deep(.highlight-todo.djs-shape .djs-visual > :nth-child(1)) {\r\n  fill: #1890ff !important;\r\n  stroke: #1890ff !important;\r\n  stroke-dasharray: 4px !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n\r\n/** 通过 */\r\n.highlight.djs-shape .djs-visual > :nth-child(1) {\r\n  fill: green !important;\r\n  stroke: green !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n.highlight.djs-shape .djs-visual > :nth-child(2) {\r\n  fill: green !important;\r\n}\r\n.highlight.djs-shape .djs-visual > path {\r\n  fill: green !important;\r\n  fill-opacity: 0.2 !important;\r\n  stroke: green !important;\r\n}\r\n.highlight.djs-connection > .djs-visual > path {\r\n  stroke: green !important;\r\n}\r\n\r\n.highlight:not(.djs-connection) .djs-visual > :nth-child(1) {\r\n  fill: green !important; /* color elements as green */\r\n}\r\n\r\n:deep(.highlight.djs-shape .djs-visual > :nth-child(1)) {\r\n  fill: green !important;\r\n  stroke: green !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n:deep(.highlight.djs-shape .djs-visual > :nth-child(2)) {\r\n  fill: green !important;\r\n}\r\n:deep(.highlight.djs-shape .djs-visual > path) {\r\n  fill: green !important;\r\n  fill-opacity: 0.2 !important;\r\n  stroke: green !important;\r\n}\r\n:deep(.highlight.djs-connection > .djs-visual > path) {\r\n  stroke: green !important;\r\n}\r\n\r\n/** 不通过 */\r\n.highlight-reject.djs-shape .djs-visual > :nth-child(1) {\r\n  fill: red !important;\r\n  stroke: red !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n.highlight-reject.djs-shape .djs-visual > :nth-child(2) {\r\n  fill: red !important;\r\n}\r\n.highlight-reject.djs-shape .djs-visual > path {\r\n  fill: red !important;\r\n  fill-opacity: 0.2 !important;\r\n  stroke: red !important;\r\n}\r\n.highlight-reject.djs-connection > .djs-visual > path {\r\n  stroke: red !important;\r\n}\r\n\r\n.highlight-reject:not(.djs-connection) .djs-visual > :nth-child(1) {\r\n  fill: red !important; /* color elements as green */\r\n}\r\n\r\n:deep(.highlight-reject.djs-shape .djs-visual > :nth-child(1)) {\r\n  fill: red !important;\r\n  stroke: red !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n:deep(.highlight-reject.djs-shape .djs-visual > :nth-child(2)) {\r\n  fill: red !important;\r\n}\r\n:deep(.highlight-reject.djs-shape .djs-visual > path) {\r\n  fill: red !important;\r\n  fill-opacity: 0.2 !important;\r\n  stroke: red !important;\r\n}\r\n:deep(.highlight-reject.djs-connection > .djs-visual > path) {\r\n  stroke: red !important;\r\n}\r\n\r\n/** 已取消 */\r\n.highlight-cancel.djs-shape .djs-visual > :nth-child(1) {\r\n  fill: grey !important;\r\n  stroke: grey !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n.highlight-cancel.djs-shape .djs-visual > :nth-child(2) {\r\n  fill: grey !important;\r\n}\r\n.highlight-cancel.djs-shape .djs-visual > path {\r\n  fill: grey !important;\r\n  fill-opacity: 0.2 !important;\r\n  stroke: grey !important;\r\n}\r\n.highlight-cancel.djs-connection > .djs-visual > path {\r\n  stroke: grey !important;\r\n}\r\n\r\n.highlight-cancel:not(.djs-connection) .djs-visual > :nth-child(1) {\r\n  fill: grey !important; /* color elements as green */\r\n}\r\n\r\n:deep(.highlight-cancel.djs-shape .djs-visual > :nth-child(1)) {\r\n  fill: grey !important;\r\n  stroke: grey !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n:deep(.highlight-cancel.djs-shape .djs-visual > :nth-child(2)) {\r\n  fill: grey !important;\r\n}\r\n:deep(.highlight-cancel.djs-shape .djs-visual > path) {\r\n  fill: grey !important;\r\n  fill-opacity: 0.2 !important;\r\n  stroke: grey !important;\r\n}\r\n:deep(.highlight-cancel.djs-connection > .djs-visual > path) {\r\n  stroke: grey !important;\r\n}\r\n/**驳回 */\r\n.highlight-back.djs-connection > .djs-visual > path {\r\n  stroke: #FFBA00 !important;\r\n  stroke-dasharray: 4px !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n\r\n.highlight-back.djs-shape .djs-visual > :nth-child(1) {\r\n  fill: #FFBA00 !important;\r\n  stroke: #FFBA00 !important;\r\n  stroke-dasharray: 4px !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n\r\n:deep(.highlight-back.djs-connection > .djs-visual > path) {\r\n  stroke: #FFBA00 !important;\r\n  stroke-dasharray: 4px !important;\r\n  fill-opacity: 0.2 !important;\r\n  marker-end: url(#sequenceflow-end-_E7DFDF-_E7DFDF-803g1kf6zwzmcig1y2ulm5egr);\r\n}\r\n\r\n:deep(.highlight-back.djs-shape .djs-visual > :nth-child(1)) {\r\n  fill: #FFBA00 !important;\r\n  stroke: #FFBA00 !important;\r\n  stroke-dasharray: 4px !important;\r\n  fill-opacity: 0.2 !important;\r\n}\r\n.element-overlays {\r\n  box-sizing: border-box;\r\n  padding: 8px;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  border-radius: 4px;\r\n  color: #fafafa;\r\n  width: 200px;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}