{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\infra\\redis\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\infra\\redis\\index.vue","mtime":1704630437918},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBnZXRDYWNoZSB9IGZyb20gIkAvYXBpL2luZnJhL3JlZGlzIjsNCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cycNCnJlcXVpcmUoJ2VjaGFydHMvdGhlbWUvbWFjYXJvbnMnKSAvLyBlY2hhcnRzIHRoZW1lDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJJbmZyYVJlZGlzIiwNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIC8vIOe7n+iuoeWRveS7pOS/oeaBrw0KICAgICAgY29tbWFuZHN0YXRzOiBudWxsLA0KICAgICAgLy8g5L2/55So5YaF5a2YDQogICAgICB1c2VkbWVtb3J5OiBudWxsLA0KICAgICAgLy8gY2FjaGUg5L+h5oGvDQogICAgICBjYWNoZTogW10NCiAgICB9Ow0KICB9LA0KICBjcmVhdGVkICgpIHsNCiAgICB0aGlzLmdldExpc3QoKTsNCiAgICB0aGlzLm9wZW5Mb2FkaW5nKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvKiog5p+l57yT5a2Y6K+i5L+h5oGvICovDQogICAgZ2V0TGlzdCAoKSB7DQogICAgICAvLyDmn6Xor6IgUmVkaXMg55uR5o6n5L+h5oGvDQogICAgICBnZXRDYWNoZSgpLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAgIHRoaXMuY2FjaGUgPSByZXNwb25zZS5kYXRhOw0KICAgICAgICB0aGlzLiRtb2RhbC5jbG9zZUxvYWRpbmcoKTsNCg0KICAgICAgICB0aGlzLmNvbW1hbmRzdGF0cyA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmNvbW1hbmRzdGF0cywgIm1hY2Fyb25zIik7DQogICAgICAgIGNvbnN0IGNvbW1hbmRTdGF0cyA9IFtdOw0KICAgICAgICByZXNwb25zZS5kYXRhLmNvbW1hbmRTdGF0cy5mb3JFYWNoKHJvdyA9PiB7DQogICAgICAgICAgY29tbWFuZFN0YXRzLnB1c2goew0KICAgICAgICAgICAgbmFtZTogcm93LmNvbW1hbmQsDQogICAgICAgICAgICB2YWx1ZTogcm93LmNhbGxzDQogICAgICAgICAgfSk7DQogICAgICAgIH0pDQogICAgICAgIHRoaXMuY29tbWFuZHN0YXRzLnNldE9wdGlvbih7DQogICAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgICAgdHJpZ2dlcjogIml0ZW0iLA0KICAgICAgICAgICAgZm9ybWF0dGVyOiAie2F9IDxici8+e2J9IDoge2N9ICh7ZH0lKSIsDQogICAgICAgICAgfSwNCiAgICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgbmFtZTogIuWRveS7pCIsDQogICAgICAgICAgICAgIHR5cGU6ICJwaWUiLA0KICAgICAgICAgICAgICByb3NlVHlwZTogInJhZGl1cyIsDQogICAgICAgICAgICAgIHJhZGl1czogWzE1LCA5NV0sDQogICAgICAgICAgICAgIGNlbnRlcjogWyI1MCUiLCAiMzglIl0sDQogICAgICAgICAgICAgIGRhdGE6IGNvbW1hbmRTdGF0cywNCiAgICAgICAgICAgICAgYW5pbWF0aW9uRWFzaW5nOiAiY3ViaWNJbk91dCIsDQogICAgICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiAxMDAwLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICBdLA0KICAgICAgICB9KTsNCiAgICAgICAgdGhpcy51c2VkbWVtb3J5ID0gZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMudXNlZG1lbW9yeSwgIm1hY2Fyb25zIik7DQogICAgICAgIHRoaXMudXNlZG1lbW9yeS5zZXRPcHRpb24oew0KICAgICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICAgIGZvcm1hdHRlcjogIntifSA8YnIvPnthfSA6ICIgKyB0aGlzLmNhY2hlLmluZm8udXNlZF9tZW1vcnlfaHVtYW4sDQogICAgICAgICAgfSwNCiAgICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgbmFtZTogIuWzsOWAvCIsDQogICAgICAgICAgICAgIHR5cGU6ICJnYXVnZSIsDQogICAgICAgICAgICAgIG1pbjogMCwNCiAgICAgICAgICAgICAgbWF4OiAxMDAwLA0KICAgICAgICAgICAgICBkZXRhaWw6IHsNCiAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6IHRoaXMuY2FjaGUuaW5mby51c2VkX21lbW9yeV9odW1hbiwNCiAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgZGF0YTogWw0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBwYXJzZUZsb2F0KHRoaXMuY2FjaGUuaW5mby51c2VkX21lbW9yeV9odW1hbiksDQogICAgICAgICAgICAgICAgICBuYW1lOiAi5YaF5a2Y5raI6ICXIiwNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICBdLA0KICAgICAgICB9KTsNCiAgICAgIH0pOw0KICAgIH0sDQoNCiAgICAvLyDmiZPlvIDliqDovb3lsYINCiAgICBvcGVuTG9hZGluZyAoKSB7DQogICAgICB0aGlzLiRtb2RhbC5sb2FkaW5nKCLmraPlnKjliqDovb3nvJPlrZjnm5HmjqfmlbDmja7vvIzor7fnqI3lkI7vvIEiKTsNCiAgICB9DQogIH0sDQp9Ow0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/infra/redis","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <doc-alert title=\"Redis 缓存\" url=\"https://doc.iocoder.cn/redis-cache/\" />\r\n    <doc-alert title=\"本地缓存\" url=\"https://doc.iocoder.cn/local-cache/\" />\r\n    <el-row>\r\n      <el-col :span=\"24\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\"><span>基本信息</span></div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <table cellspacing=\"0\" style=\"width: 100%\">\r\n              <tbody>\r\n                <tr>\r\n                  <td><div class=\"cell\">Redis版本</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.redis_version }}</div></td>\r\n                  <td><div class=\"cell\">运行模式</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.redis_mode === \"standalone\" ? \"单机\" : \"集群\" }}</div></td>\r\n                  <td><div class=\"cell\">端口</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.tcp_port }}</div></td>\r\n                  <td><div class=\"cell\">客户端数</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.connected_clients }}</div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><div class=\"cell\">运行时间(天)</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.uptime_in_days }}</div></td>\r\n                  <td><div class=\"cell\">使用内存</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.used_memory_human }}</div></td>\r\n                  <td><div class=\"cell\">使用CPU</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ parseFloat(cache.info.used_cpu_user_children).toFixed(2) }}</div></td>\r\n                  <td><div class=\"cell\">内存配置</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.maxmemory_human }}</div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><div class=\"cell\">AOF是否开启</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.aof_enabled === \"0\" ? \"否\" : \"是\" }}</div></td>\r\n                  <td><div class=\"cell\">RDB是否成功</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.rdb_last_bgsave_status }}</div></td>\r\n                  <td><div class=\"cell\">Key数量</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.dbSize\">{{ cache.dbSize }} </div></td>\r\n                  <td><div class=\"cell\">网络入口/出口</div></td>\r\n                  <td><div class=\"cell\" v-if=\"cache.info\">{{ cache.info.instantaneous_input_kbps }}kps/{{cache.info.instantaneous_output_kbps}}kps</div></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\"><span>命令统计</span></div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <div ref=\"commandstats\" style=\"height: 420px\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\">\r\n            <span>内存信息</span>\r\n          </div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <div ref=\"usedmemory\" style=\"height: 420px\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCache } from \"@/api/infra/redis\";\r\nimport * as echarts from 'echarts'\r\nrequire('echarts/theme/macarons') // echarts theme\r\nexport default {\r\n  name: \"InfraRedis\",\r\n  data () {\r\n    return {\r\n      // 统计命令信息\r\n      commandstats: null,\r\n      // 使用内存\r\n      usedmemory: null,\r\n      // cache 信息\r\n      cache: []\r\n    };\r\n  },\r\n  created () {\r\n    this.getList();\r\n    this.openLoading();\r\n  },\r\n  methods: {\r\n    /** 查缓存询信息 */\r\n    getList () {\r\n      // 查询 Redis 监控信息\r\n      getCache().then((response) => {\r\n        this.cache = response.data;\r\n        this.$modal.closeLoading();\r\n\r\n        this.commandstats = echarts.init(this.$refs.commandstats, \"macarons\");\r\n        const commandStats = [];\r\n        response.data.commandStats.forEach(row => {\r\n          commandStats.push({\r\n            name: row.command,\r\n            value: row.calls\r\n          });\r\n        })\r\n        this.commandstats.setOption({\r\n          tooltip: {\r\n            trigger: \"item\",\r\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\r\n          },\r\n          series: [\r\n            {\r\n              name: \"命令\",\r\n              type: \"pie\",\r\n              roseType: \"radius\",\r\n              radius: [15, 95],\r\n              center: [\"50%\", \"38%\"],\r\n              data: commandStats,\r\n              animationEasing: \"cubicInOut\",\r\n              animationDuration: 1000,\r\n            },\r\n          ],\r\n        });\r\n        this.usedmemory = echarts.init(this.$refs.usedmemory, \"macarons\");\r\n        this.usedmemory.setOption({\r\n          tooltip: {\r\n            formatter: \"{b} <br/>{a} : \" + this.cache.info.used_memory_human,\r\n          },\r\n          series: [\r\n            {\r\n              name: \"峰值\",\r\n              type: \"gauge\",\r\n              min: 0,\r\n              max: 1000,\r\n              detail: {\r\n                formatter: this.cache.info.used_memory_human,\r\n              },\r\n              data: [\r\n                {\r\n                  value: parseFloat(this.cache.info.used_memory_human),\r\n                  name: \"内存消耗\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        });\r\n      });\r\n    },\r\n\r\n    // 打开加载层\r\n    openLoading () {\r\n      this.$modal.loading(\"正在加载缓存监控数据，请稍后！\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n"]}]}