{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\designer\\ProcessDesigner.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\designer\\ProcessDesigner.vue","mtime":1704630437686},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProcessDesigner.vue"],"names":[],"mappings":";AAyfile":"ProcessDesigner.vue","sourceRoot":"src/components/bpmnProcessDesigner/package/designer","sourcesContent":["<template>\r\n  <div class=\"my-process-designer\">\r\n    <div class=\"my-process-designer__header\">\r\n      <slot name=\"control-header\"></slot>\r\n      <template v-if=\"!$slots['control-header']\">\r\n        <el-button-group key=\"file-control\">\r\n          <el-button :size=\"headerButtonSize\" icon=\"el-icon-folder-opened\" @click=\"$refs.refFile.click()\">打开文件</el-button>\r\n          <el-tooltip effect=\"light\">\r\n            <div slot=\"content\">\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"downloadProcessAsXml()\">下载为XML文件</el-button>\r\n              <br />\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"downloadProcessAsSvg()\">下载为SVG文件</el-button>\r\n              <br />\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"downloadProcessAsBpmn()\">下载为BPMN文件</el-button>\r\n            </div>\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-download\">下载文件</el-button>\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\">\r\n            <div slot=\"content\">\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"previewProcessXML\">预览XML</el-button>\r\n              <br />\r\n              <el-button :size=\"headerButtonSize\" type=\"text\" @click=\"previewProcessJson\">预览JSON</el-button>\r\n            </div>\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-view\">预览</el-button>\r\n          </el-tooltip>\r\n          <el-tooltip v-if=\"simulation\" effect=\"light\" :content=\"this.simulationStatus ? '退出模拟' : '开启模拟'\">\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-cpu\" @click=\"processSimulation\">\r\n              模拟\r\n            </el-button>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n        <el-button-group key=\"align-control\">\r\n          <el-tooltip effect=\"light\" content=\"向左对齐\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-left\" icon=\"el-icon-s-data\" @click=\"elementsAlign('left')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"向右对齐\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-right\" icon=\"el-icon-s-data\" @click=\"elementsAlign('right')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"向上对齐\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-top\" icon=\"el-icon-s-data\" @click=\"elementsAlign('top')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"向下对齐\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-bottom\" icon=\"el-icon-s-data\" @click=\"elementsAlign('bottom')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"水平居中\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-center\" icon=\"el-icon-s-data\" @click=\"elementsAlign('center')\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"垂直居中\">\r\n            <el-button :size=\"headerButtonSize\" class=\"align align-middle\" icon=\"el-icon-s-data\" @click=\"elementsAlign('middle')\" />\r\n          </el-tooltip>\r\n        </el-button-group>\r\n        <el-button-group key=\"scale-control\">\r\n          <el-tooltip effect=\"light\" content=\"缩小视图\">\r\n            <el-button :size=\"headerButtonSize\" :disabled=\"defaultZoom < 0.2\" icon=\"el-icon-zoom-out\" @click=\"processZoomOut()\" />\r\n          </el-tooltip>\r\n          <el-button :size=\"headerButtonSize\">{{ Math.floor(this.defaultZoom * 10 * 10) + \"%\" }}</el-button>\r\n          <el-tooltip effect=\"light\" content=\"放大视图\">\r\n            <el-button :size=\"headerButtonSize\" :disabled=\"defaultZoom > 4\" icon=\"el-icon-zoom-in\" @click=\"processZoomIn()\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"重置视图并居中\">\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-c-scale-to-original\" @click=\"processReZoom()\" />\r\n          </el-tooltip>\r\n        </el-button-group>\r\n        <el-button-group key=\"stack-control\">\r\n          <el-tooltip effect=\"light\" content=\"撤销\">\r\n            <el-button :size=\"headerButtonSize\" :disabled=\"!revocable\" icon=\"el-icon-refresh-left\" @click=\"processUndo()\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"恢复\">\r\n            <el-button :size=\"headerButtonSize\" :disabled=\"!recoverable\" icon=\"el-icon-refresh-right\" @click=\"processRedo()\" />\r\n          </el-tooltip>\r\n          <el-tooltip effect=\"light\" content=\"重新绘制\">\r\n            <el-button :size=\"headerButtonSize\" icon=\"el-icon-refresh\" @click=\"processRestart\" />\r\n          </el-tooltip>\r\n        </el-button-group>\r\n        <el-button :size=\"headerButtonSize\" :type=\"headerButtonType\" icon=\"el-icon-plus\" @click=\"processSave\" :disabled = \"simulationStatus\">保存模型</el-button>\r\n      </template>\r\n      <!-- 用于打开本地文件-->\r\n      <input type=\"file\" id=\"files\" ref=\"refFile\" style=\"display: none\" accept=\".xml, .bpmn\" @change=\"importLocalFile\" />\r\n    </div>\r\n    <div class=\"my-process-designer__container\">\r\n      <div class=\"my-process-designer__canvas\" ref=\"bpmn-canvas\"></div>\r\n    </div>\r\n    <el-dialog title=\"预览\" width=\"80%\" :visible.sync=\"previewModelVisible\" append-to-body destroy-on-close>\r\n      <pre><code class=\"hljs\" v-html=\"highlightedCode(previewType, previewResult)\"></code></pre>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BpmnModeler from \"bpmn-js/lib/Modeler\";\r\nimport DefaultEmptyXML from \"./plugins/defaultEmpty\";\r\n// 翻译方法\r\nimport customTranslate from \"./plugins/translate/customTranslate\";\r\nimport translationsCN from \"./plugins/translate/zh\";\r\n// 模拟流转流程\r\nimport tokenSimulation from \"bpmn-js-token-simulation\";\r\n// 标签解析构建器\r\n// import bpmnPropertiesProvider from \"bpmn-js-properties-panel/lib/provider/bpmn\";\r\n// 标签解析 Moddle\r\nimport camundaModdleDescriptor from \"./plugins/descriptor/camundaDescriptor.json\";\r\nimport activitiModdleDescriptor from \"./plugins/descriptor/activitiDescriptor.json\";\r\nimport flowableModdleDescriptor from \"./plugins/descriptor/flowableDescriptor.json\";\r\n// 标签解析 Extension\r\nimport camundaModdleExtension from \"./plugins/extension-moddle/camunda\";\r\nimport activitiModdleExtension from \"./plugins/extension-moddle/activiti\";\r\nimport flowableModdleExtension from \"./plugins/extension-moddle/flowable\";\r\n// 引入json转换与高亮\r\nimport convert from \"xml-js\";\r\n\r\n// 代码高亮插件\r\nimport hljs from \"highlight.js/lib/highlight\";\r\nimport \"highlight.js/styles/github-gist.css\";\r\nhljs.registerLanguage(\"xml\", require(\"highlight.js/lib/languages/xml\"));\r\nhljs.registerLanguage(\"json\", require(\"highlight.js/lib/languages/json\"));\r\n\r\nexport default {\r\n  name: \"MyProcessDesigner\",\r\n  componentName: \"MyProcessDesigner\",\r\n  props: {\r\n    value: String, // xml 字符串\r\n    valueWatch: true, // xml 字符串的 watch 状态\r\n    processId: String, // 流程 key 标识\r\n    processName: String, // 流程 name 名字\r\n    formId: Number, // 流程 form 表单编号\r\n    translations: Object, // 自定义的翻译文件\r\n    additionalModel: [Object, Array], // 自定义model\r\n    moddleExtension: Object, // 自定义moddle\r\n    onlyCustomizeAddi: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    onlyCustomizeModdle: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    simulation: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    keyboard: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    prefix: {\r\n      type: String,\r\n      default: \"camunda\"\r\n    },\r\n    events: {\r\n      type: Array,\r\n      default: () => [\"element.click\"]\r\n    },\r\n    headerButtonSize: {\r\n      type: String,\r\n      default: \"small\",\r\n      validator: value => [\"default\", \"medium\", \"small\", \"mini\"].indexOf(value) !== -1\r\n    },\r\n    headerButtonType: {\r\n      type: String,\r\n      default: \"primary\",\r\n      validator: value => [\"default\", \"primary\", \"success\", \"warning\", \"danger\", \"info\"].indexOf(value) !== -1\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultZoom: 1,\r\n      previewModelVisible: false,\r\n      simulationStatus: false,\r\n      previewResult: \"\",\r\n      previewType: \"xml\",\r\n      recoverable: false,\r\n      revocable: false\r\n    };\r\n  },\r\n  computed: {\r\n    additionalModules() {\r\n      const Modules = [];\r\n      // 仅保留用户自定义扩展模块\r\n      if (this.onlyCustomizeAddi) {\r\n        if (Object.prototype.toString.call(this.additionalModel) === \"[object Array]\") {\r\n          return this.additionalModel || [];\r\n        }\r\n        return [this.additionalModel];\r\n      }\r\n\r\n      // 插入用户自定义扩展模块\r\n      if (Object.prototype.toString.call(this.additionalModel) === \"[object Array]\") {\r\n        Modules.push(...this.additionalModel);\r\n      } else {\r\n        this.additionalModel && Modules.push(this.additionalModel);\r\n      }\r\n\r\n      // 翻译模块\r\n      const TranslateModule = {\r\n        translate: [\"value\", customTranslate(this.translations || translationsCN)]\r\n      };\r\n      Modules.push(TranslateModule);\r\n\r\n      // 模拟流转模块\r\n      if (this.simulation) {\r\n        Modules.push(tokenSimulation);\r\n      }\r\n\r\n      // 根据需要的流程类型设置扩展元素构建模块\r\n      // if (this.prefix === \"bpmn\") {\r\n      //   Modules.push(bpmnModdleExtension);\r\n      // }\r\n      if (this.prefix === \"camunda\") {\r\n        Modules.push(camundaModdleExtension);\r\n      }\r\n      if (this.prefix === \"flowable\") {\r\n        Modules.push(flowableModdleExtension);\r\n      }\r\n      if (this.prefix === \"activiti\") {\r\n        Modules.push(activitiModdleExtension);\r\n      }\r\n\r\n      return Modules;\r\n    },\r\n    moddleExtensions() {\r\n      const Extensions = {};\r\n      // 仅使用用户自定义模块\r\n      if (this.onlyCustomizeModdle) {\r\n        return this.moddleExtension || null;\r\n      }\r\n\r\n      // 插入用户自定义模块\r\n      if (this.moddleExtension) {\r\n        for (let key in this.moddleExtension) {\r\n          Extensions[key] = this.moddleExtension[key];\r\n        }\r\n      }\r\n\r\n      // 根据需要的 \"流程类型\" 设置 对应的解析文件\r\n      if (this.prefix === \"activiti\") {\r\n        Extensions.activiti = activitiModdleDescriptor;\r\n      }\r\n      if (this.prefix === \"flowable\") {\r\n        Extensions.flowable = flowableModdleDescriptor;\r\n      }\r\n      if (this.prefix === \"camunda\") {\r\n        Extensions.camunda = camundaModdleDescriptor;\r\n      }\r\n\r\n      return Extensions;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initBpmnModeler();\r\n    this.createNewDiagram(this.value);\r\n    this.$once(\"hook:beforeDestroy\", () => {\r\n      if (this.bpmnModeler) this.bpmnModeler.destroy();\r\n      this.$emit(\"destroy\", this.bpmnModeler);\r\n      this.bpmnModeler = null;\r\n    });\r\n  },\r\n  methods: {\r\n    initBpmnModeler() {\r\n      if (this.bpmnModeler) return;\r\n      this.bpmnModeler = new BpmnModeler({\r\n        container: this.$refs[\"bpmn-canvas\"],\r\n        keyboard: this.keyboard ? { bindTo: document } : null,\r\n        additionalModules: this.additionalModules,\r\n        moddleExtensions: this.moddleExtensions\r\n      });\r\n      this.$emit(\"init-finished\", this.bpmnModeler);\r\n      this.initModelListeners();\r\n    },\r\n    initModelListeners() {\r\n      const EventBus = this.bpmnModeler.get(\"eventBus\");\r\n      const that = this;\r\n      // 注册需要的监听事件, 将. 替换为 - , 避免解析异常\r\n      this.events.forEach(event => {\r\n        EventBus.on(event, function(eventObj) {\r\n          let eventName = event.replace(/\\./g, \"-\");\r\n          let element = eventObj ? eventObj.element : null;\r\n          that.$emit(eventName, element, eventObj);\r\n        });\r\n      });\r\n      // 监听图形改变返回xml\r\n      EventBus.on(\"commandStack.changed\", async event => {\r\n        try {\r\n          this.recoverable = this.bpmnModeler.get(\"commandStack\").canRedo();\r\n          this.revocable = this.bpmnModeler.get(\"commandStack\").canUndo();\r\n          let { xml } = await this.bpmnModeler.saveXML({ format: true });\r\n          this.$emit(\"commandStack-changed\", event);\r\n          this.$emit(\"input\", xml);\r\n          this.$emit(\"change\", xml);\r\n        } catch (e) {\r\n          console.error(`[Process Designer Warn]: ${e.message || e}`);\r\n        }\r\n      });\r\n      // 监听视图缩放变化\r\n      this.bpmnModeler.on(\"canvas.viewbox.changed\", ({ viewbox }) => {\r\n        this.$emit(\"canvas-viewbox-changed\", { viewbox });\r\n        const { scale } = viewbox;\r\n        this.defaultZoom = Math.floor(scale * 100) / 100;\r\n      });\r\n    },\r\n    /* 创建新的流程图 */\r\n    async createNewDiagram(xml) {\r\n      // 将字符串转换成图显示出来\r\n      let newId = this.processId || `Process_${new Date().getTime()}`;\r\n      let newName = this.processName || `业务流程_${new Date().getTime()}`;\r\n      let xmlString = xml || DefaultEmptyXML(newId, newName, this.prefix);\r\n      try {\r\n        // console.log(this.bpmnModeler.importXML);\r\n        let { warnings } = await this.bpmnModeler.importXML(xmlString);\r\n        if (warnings && warnings.length) {\r\n          warnings.forEach(warn => console.warn(warn));\r\n        }\r\n      } catch (e) {\r\n        console.error(`[Process Designer Warn]: ${e?.message || e}`);\r\n      }\r\n    },\r\n\r\n    // 下载流程图到本地\r\n    async downloadProcess(type, name) {\r\n      try {\r\n        const _this = this;\r\n        // 按需要类型创建文件并下载\r\n        if (type === \"xml\" || type === \"bpmn\") {\r\n          const { err, xml } = await this.bpmnModeler.saveXML();\r\n          // 读取异常时抛出异常\r\n          if (err) {\r\n            console.error(`[Process Designer Warn ]: ${err.message || err}`);\r\n          }\r\n          let { href, filename } = _this.setEncoded(type.toUpperCase(), name, xml);\r\n          downloadFunc(href, filename);\r\n        } else {\r\n          const { err, svg } = await this.bpmnModeler.saveSVG();\r\n          // 读取异常时抛出异常\r\n          if (err) {\r\n            return console.error(err);\r\n          }\r\n          let { href, filename } = _this.setEncoded(\"SVG\", name, svg);\r\n          downloadFunc(href, filename);\r\n        }\r\n      } catch (e) {\r\n        console.error(`[Process Designer Warn ]: ${e.message || e}`);\r\n      }\r\n      // 文件下载方法\r\n      function downloadFunc(href, filename) {\r\n        if (href && filename) {\r\n          let a = document.createElement(\"a\");\r\n          a.download = filename; //指定下载的文件名\r\n          a.href = href; //  URL对象\r\n          a.click(); // 模拟点击\r\n          URL.revokeObjectURL(a.href); // 释放URL 对象\r\n        }\r\n      }\r\n    },\r\n\r\n    // 根据所需类型进行转码并返回下载地址\r\n    setEncoded(type, filename = \"diagram\", data) {\r\n      const encodedData = encodeURIComponent(data);\r\n      return {\r\n        filename: `${filename}.${type}`,\r\n        href: `data:application/${type === \"svg\" ? \"text/xml\" : \"bpmn20-xml\"};charset=UTF-8,${encodedData}`,\r\n        data: data\r\n      };\r\n    },\r\n\r\n    // 加载本地文件\r\n    importLocalFile() {\r\n      const that = this;\r\n      const file = this.$refs.refFile.files[0];\r\n      const reader = new FileReader();\r\n      reader.readAsText(file);\r\n      reader.onload = function() {\r\n        let xmlStr = this.result;\r\n        that.createNewDiagram(xmlStr);\r\n      };\r\n    },\r\n    /* ------------------------------------------------ refs methods ------------------------------------------------------ */\r\n    downloadProcessAsXml() {\r\n      this.downloadProcess(\"xml\");\r\n    },\r\n    downloadProcessAsBpmn() {\r\n      this.downloadProcess(\"bpmn\");\r\n    },\r\n    downloadProcessAsSvg() {\r\n      this.downloadProcess(\"svg\");\r\n    },\r\n    processSimulation() {\r\n      this.simulationStatus = !this.simulationStatus;\r\n      this.simulation && this.bpmnModeler.get(\"toggleMode\").toggleMode();\r\n    },\r\n    processRedo() {\r\n      this.bpmnModeler.get(\"commandStack\").redo();\r\n    },\r\n    processUndo() {\r\n      this.bpmnModeler.get(\"commandStack\").undo();\r\n    },\r\n    processZoomIn(zoomStep = 0.1) {\r\n      let newZoom = Math.floor(this.defaultZoom * 100 + zoomStep * 100) / 100;\r\n      if (newZoom > 4) {\r\n        throw new Error(\"[Process Designer Warn ]: The zoom ratio cannot be greater than 4\");\r\n      }\r\n      this.defaultZoom = newZoom;\r\n      this.bpmnModeler.get(\"canvas\").zoom(this.defaultZoom);\r\n    },\r\n    processZoomOut(zoomStep = 0.1) {\r\n      let newZoom = Math.floor(this.defaultZoom * 100 - zoomStep * 100) / 100;\r\n      if (newZoom < 0.2) {\r\n        throw new Error(\"[Process Designer Warn ]: The zoom ratio cannot be less than 0.2\");\r\n      }\r\n      this.defaultZoom = newZoom;\r\n      this.bpmnModeler.get(\"canvas\").zoom(this.defaultZoom);\r\n    },\r\n    processZoomTo(newZoom = 1) {\r\n      if (newZoom < 0.2) {\r\n        throw new Error(\"[Process Designer Warn ]: The zoom ratio cannot be less than 0.2\");\r\n      }\r\n      if (newZoom > 4) {\r\n        throw new Error(\"[Process Designer Warn ]: The zoom ratio cannot be greater than 4\");\r\n      }\r\n      this.defaultZoom = newZoom;\r\n      this.bpmnModeler.get(\"canvas\").zoom(newZoom);\r\n    },\r\n    processReZoom() {\r\n      this.defaultZoom = 1;\r\n      this.bpmnModeler.get(\"canvas\").zoom(\"fit-viewport\", \"auto\");\r\n    },\r\n    processRestart() {\r\n      this.recoverable = false;\r\n      this.revocable = false;\r\n      this.createNewDiagram(null);\r\n    },\r\n    elementsAlign(align) {\r\n      const Align = this.bpmnModeler.get(\"alignElements\");\r\n      const Selection = this.bpmnModeler.get(\"selection\");\r\n      const SelectedElements = Selection.get();\r\n      if (!SelectedElements || SelectedElements.length <= 1) {\r\n        this.$message.warning(\"请按住 Ctrl 键选择多个元素对齐\");\r\n        return;\r\n      }\r\n      this.$confirm(\"自动对齐可能造成图形变形，是否继续？\", \"警告\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      }).then(() => Align.trigger(SelectedElements, align));\r\n    },\r\n    /*-----------------------------    方法结束     ---------------------------------*/\r\n    previewProcessXML() {\r\n      this.bpmnModeler.saveXML({ format: true }).then(({ xml }) => {\r\n        this.previewResult = xml;\r\n        this.previewType = \"xml\";\r\n        this.previewModelVisible = true;\r\n      });\r\n    },\r\n    previewProcessJson() {\r\n      this.bpmnModeler.saveXML({ format: true }).then(({ xml }) => {\r\n        this.previewResult = convert.xml2json(xml, { spaces: 2 });\r\n        this.previewType = \"json\";\r\n        this.previewModelVisible = true;\r\n      });\r\n    },\r\n    /* ------------------------------------------------ 芋道源码 methods ------------------------------------------------------ */\r\n    async processSave() {\r\n      const { err, xml } = await this.bpmnModeler.saveXML();\r\n      // 读取异常时抛出异常\r\n      if (err) {\r\n        this.$modal.msgError('保存模型失败，请重试！')\r\n        return\r\n      }\r\n      // 触发 save 事件\r\n      this.$emit('save', xml)\r\n    },\r\n    /** 高亮显示 */\r\n    highlightedCode(previewType, previewResult) {\r\n      const result = hljs.highlight(previewType, previewResult || \"\", true);\r\n      return result.value || '&nbsp;';\r\n    },\r\n  }\r\n};\r\n</script>\r\n"]}]}