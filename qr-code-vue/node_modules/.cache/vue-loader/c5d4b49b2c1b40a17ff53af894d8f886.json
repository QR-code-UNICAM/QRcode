{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\mp\\autoReply\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\mp\\autoReply\\index.vue","mtime":1704630437998},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAyfile":"index.vue","sourceRoot":"src/views/mp/autoReply","sourcesContent":["<!--\r\nMIT License\r\n\r\nCopyright (c) 2020 www.joolun.com\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n  芋道源码：\r\n  ① 移除 avue 框架，使用 element-ui 重写\r\n  ② 重写代码，保持和现有项目保持一致\r\n-->\r\n<template>\r\n  <div class=\"app-container\">\r\n    <doc-alert title=\"自动回复\" url=\"https://doc.iocoder.cn/mp/auto-reply/\" />\r\n\r\n    <!-- 搜索工作栏 -->\r\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\r\n      <el-form-item label=\"公众号\" prop=\"accountId\">\r\n        <el-select v-model=\"queryParams.accountId\" placeholder=\"请选择公众号\">\r\n          <el-option v-for=\"item in accounts\" :key=\"parseInt(item.id)\" :label=\"item.name\" :value=\"parseInt(item.id)\" />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleQuery\">搜索</el-button>\r\n        <el-button icon=\"el-icon-refresh\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- tab 切换 -->\r\n    <el-tabs v-model=\"type\" @tab-click=\"handleClick\">\r\n      <!-- 操作工具栏 -->\r\n      <el-row :gutter=\"10\" class=\"mb8\">\r\n        <el-col :span=\"1.5\">\r\n          <el-button type=\"primary\" plain icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd\"\r\n                     v-hasPermi=\"['mp:auto-reply:create']\" v-if=\"type !== '1' || list.length <= 0\">新增\r\n          </el-button>\r\n        </el-col>\r\n        <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\" />\r\n      </el-row>\r\n      <!-- tab 项 -->\r\n      <el-tab-pane name=\"1\">\r\n        <span slot=\"label\"><i class=\"el-icon-star-off\"></i> 关注时回复</span>\r\n      </el-tab-pane>\r\n      <el-tab-pane name=\"2\">\r\n        <span slot=\"label\"><i class=\"el-icon-chat-line-round\"></i> 消息回复</span>\r\n      </el-tab-pane>\r\n      <el-tab-pane name=\"3\">\r\n        <span slot=\"label\"><i class=\"el-icon-news\"></i> 关键词回复</span>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n    <!-- 列表 -->\r\n    <el-table v-loading=\"loading\" :data=\"list\">\r\n      <el-table-column label=\"请求消息类型\" align=\"center\" prop=\"requestMessageType\" v-if=\"type === '2'\" />\r\n      <el-table-column label=\"关键词\" align=\"center\" prop=\"requestKeyword\" v-if=\"type === '3'\" />\r\n      <el-table-column label=\"匹配类型\" align=\"center\" prop=\"requestMatch\" v-if=\"type === '3'\">\r\n        <template v-slot=\"scope\">\r\n          <dict-tag :type=\"DICT_TYPE.MP_AUTO_REPLY_REQUEST_MATCH\" :value=\"scope.row.requestMatch\"/>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"回复消息类型\" align=\"center\">\r\n        <template v-slot=\"scope\">\r\n          <dict-tag :type=\"DICT_TYPE.MP_MESSAGE_TYPE\" :value=\"scope.row.responseMessageType\"/>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"回复内容\" align=\"center\">\r\n        <template v-slot=\"scope\">\r\n          <div v-if=\"scope.row.responseMessageType === 'text'\">{{ scope.row.responseContent }}</div>\r\n          <div v-else-if=\"scope.row.responseMessageType === 'voice'\">\r\n            <wx-voice-player :url=\"scope.row.responseMediaUrl\" />\r\n          </div>\r\n          <div v-else-if=\"scope.row.responseMessageType === 'image'\">\r\n            <a target=\"_blank\" :href=\"scope.row.responseMediaUrl\">\r\n              <img :src=\"scope.row.responseMediaUrl\" style=\"width: 100px\">\r\n            </a>\r\n          </div>\r\n          <div v-else-if=\"scope.row.responseMessageType === 'video' || scope.row.responseMessageType === 'shortvideo'\">\r\n            <wx-video-player :url=\"scope.row.responseMediaUrl\" style=\"margin-top: 10px\" />\r\n          </div>\r\n          <div v-else-if=\"scope.row.responseMessageType === 'news'\">\r\n            <wx-news :articles=\"scope.row.responseArticles\" />\r\n          </div>\r\n          <div v-else-if=\"scope.row.responseMessageType === 'music'\">\r\n            <wx-music :title=\"scope.row.responseTitle\" :description=\"scope.row.responseDescription\"\r\n                      :thumb-media-url=\"scope.row.responseThumbMediaUrl\"\r\n                      :music-url=\"scope.row.responseMusicUrl\" :hq-music-url=\"scope.row.responseHqMusicUrl\" />\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"180\">\r\n        <template v-slot=\"scope\">\r\n          <span>{{ parseTime(scope.row.createTime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\r\n        <template v-slot=\"scope\">\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\"\r\n                     v-hasPermi=\"['mp:auto-reply:update']\">修改\r\n          </el-button>\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\"\r\n                     v-hasPermi=\"['mp:auto-reply:delete']\">删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加或修改自动回复的对话框 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"800px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n        <el-form-item label=\"消息类型\" prop=\"requestMessageType\" v-if=\"type === '2'\">\r\n          <el-select v-model=\"form.requestMessageType\" placeholder=\"请选择\">\r\n            <el-option v-for=\"dict in this.getDictDatas(DICT_TYPE.MP_MESSAGE_TYPE)\"\r\n                       :key=\"dict.value\" :label=\"dict.label\" :value=\"dict.value\"\r\n                       v-if=\"requestMessageTypes.includes(dict.value)\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"匹配类型\" prop=\"requestMatch\" v-if=\"type === '3'\">\r\n          <el-select v-model=\"form.requestMatch\" placeholder=\"请选择匹配类型\" clearable size=\"small\">\r\n            <el-option v-for=\"dict in this.getDictDatas(DICT_TYPE.MP_AUTO_REPLY_REQUEST_MATCH)\"\r\n                       :key=\"dict.value\" :label=\"dict.label\" :value=\"parseInt(dict.value)\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"关键词\" prop=\"requestKeyword\" v-if=\"type === '3'\">\r\n          <el-input v-model=\"form.requestKeyword\" placeholder=\"请输入内容\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"回复消息\">\r\n          <wx-reply-select :objData=\"objData\" v-if=\"hackResetWxReplySelect\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport WxVideoPlayer from '@/views/mp/components/wx-video-play/main.vue';\r\nimport WxVoicePlayer from '@/views/mp/components/wx-voice-play/main.vue';\r\nimport WxMsg from '@/views/mp/components/wx-msg/main.vue';\r\nimport WxLocation from '@/views/mp/components/wx-location/main.vue';\r\nimport WxMusic from '@/views/mp/components/wx-music/main.vue';\r\nimport WxNews from '@/views/mp/components/wx-news/main.vue';\r\nimport WxReplySelect from '@/views/mp/components/wx-reply/main.vue'\r\nimport { getSimpleAccounts } from \"@/api/mp/account\";\r\nimport { createAutoReply, deleteAutoReply, getAutoReply, getAutoReplyPage, updateAutoReply } from \"@/api/mp/autoReply\";\r\n\r\nexport default {\r\n  name: 'MpAutoReply',\r\n  components: {\r\n    WxVideoPlayer,\r\n    WxVoicePlayer,\r\n    WxMsg,\r\n    WxLocation,\r\n    WxMusic,\r\n    WxNews,\r\n    WxReplySelect\r\n  },\r\n  data() {\r\n    return {\r\n      // tab 类型（1、关注时回复；2、消息回复；3、关键词回复）\r\n      type: '3',\r\n      // 允许选择的请求消息类型\r\n      requestMessageTypes: ['text', 'image', 'voice', 'video', 'shortvideo', 'location', 'link'],\r\n      // 遮罩层\r\n      loading: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 自动回复列表\r\n      list: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNo: 1,\r\n        pageSize: 10,\r\n        accountId: undefined,\r\n      },\r\n\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 表单参数\r\n      form: {},\r\n      // 回复消息\r\n      objData: {\r\n        type : 'text'\r\n      },\r\n      // 表单校验\r\n      rules: {\r\n        requestKeyword: [{ required: true, message: \"请求的关键字不能为空\", trigger: \"blur\" }],\r\n        requestMatch: [{ required: true, message: \"请求的关键字的匹配不能为空\", trigger: \"blur\" }],\r\n      },\r\n      hackResetWxReplySelect: false, // 重置 WxReplySelect 组件，解决无法清除的问题\r\n\r\n      // 公众号账号列表\r\n      accounts: []\r\n    }\r\n  },\r\n  created() {\r\n    getSimpleAccounts().then(response => {\r\n      this.accounts = response.data;\r\n      // 默认选中第一个\r\n      if (this.accounts.length > 0) {\r\n        this.queryParams.accountId = this.accounts[0].id;\r\n      }\r\n      // 加载数据\r\n      this.getList();\r\n    })\r\n  },\r\n  methods: {\r\n    /** 查询列表 */\r\n    getList() {\r\n      // 如果没有选中公众号账号，则进行提示。\r\n      if (!this.queryParams.accountId) {\r\n        this.$message.error('未选中公众号，无法查询自动回复')\r\n        return false\r\n      }\r\n\r\n      this.loading = false\r\n      // 处理查询参数\r\n      let params = {\r\n        ...this.queryParams,\r\n        type: this.type\r\n      }\r\n      // 执行查询\r\n      getAutoReplyPage(params).then(response => {\r\n        this.list = response.data.list\r\n        this.total = response.data.total\r\n        this.loading = false\r\n      })\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNo = 1\r\n      this.getList()\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.resetForm('queryForm')\r\n      // 默认选中第一个\r\n      if (this.accounts.length > 0) {\r\n        this.queryParams.accountId = this.accounts[0].id;\r\n      }\r\n      this.handleQuery()\r\n    },\r\n    handleClick(tab, event) {\r\n      this.type = tab.name\r\n      this.handleQuery()\r\n    },\r\n\r\n    /** 新增按钮操作 */\r\n    handleAdd(){\r\n      this.reset();\r\n      this.resetEditor();\r\n      // 打开表单，并设置初始化\r\n      this.open = true\r\n      this.title = '新增自动回复';\r\n      this.objData = {\r\n        type : 'text',\r\n        accountId: this.queryParams.accountId,\r\n      }\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset();\r\n      this.resetEditor();\r\n      const id = row.id;\r\n      getAutoReply(id).then(response => {\r\n        // 设置属性\r\n        this.form = {...response.data}\r\n        this.$delete(this.form, 'responseMessageType');\r\n        this.$delete(this.form, 'responseContent');\r\n        this.$delete(this.form, 'responseMediaId');\r\n        this.$delete(this.form, 'responseMediaUrl');\r\n        this.$delete(this.form, 'responseDescription');\r\n        this.$delete(this.form, 'responseArticles');\r\n        this.objData = {\r\n          type: response.data.responseMessageType,\r\n          accountId: this.queryParams.accountId,\r\n          content: response.data.responseContent,\r\n          mediaId: response.data.responseMediaId,\r\n          url: response.data.responseMediaUrl,\r\n          title: response.data.responseTitle,\r\n          description: response.data.responseDescription,\r\n          thumbMediaId: response.data.responseThumbMediaId,\r\n          thumbMediaUrl: response.data.responseThumbMediaUrl,\r\n          articles: response.data.responseArticles,\r\n          musicUrl: response.data.responseMusicUrl,\r\n          hqMusicUrl: response.data.responseHqMusicUrl,\r\n        }\r\n\r\n        // 打开表单\r\n        this.open = true\r\n        this.title = '修改自动回复';\r\n      })\r\n    },\r\n    handleSubmit() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (!valid) {\r\n          return;\r\n        }\r\n        // 处理回复消息\r\n        const form = {...this.form};\r\n        form.responseMessageType = this.objData.type;\r\n        form.responseContent = this.objData.content;\r\n        form.responseMediaId = this.objData.mediaId;\r\n        form.responseMediaUrl = this.objData.url;\r\n        form.responseTitle = this.objData.title;\r\n        form.responseDescription = this.objData.description;\r\n        form.responseThumbMediaId = this.objData.thumbMediaId;\r\n        form.responseThumbMediaUrl = this.objData.thumbMediaUrl;\r\n        form.responseArticles = this.objData.articles;\r\n        form.responseMusicUrl = this.objData.musicUrl;\r\n        form.responseHqMusicUrl = this.objData.hqMusicUrl;\r\n\r\n        if (this.form.id !== undefined) {\r\n          updateAutoReply(form).then(response => {\r\n            this.$modal.msgSuccess(\"修改成功\");\r\n            this.open = false;\r\n            this.getList();\r\n          });\r\n        } else {\r\n          createAutoReply(form).then(response => {\r\n            this.$modal.msgSuccess(\"新增成功\");\r\n            this.open = false;\r\n            this.getList();\r\n          });\r\n        }\r\n      });\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      this.form = {\r\n        id: undefined,\r\n        accountId: this.queryParams.accountId,\r\n        type: this.type,\r\n        requestKeyword: undefined,\r\n        requestMatch: this.type === '3' ? 1 : undefined,\r\n        requestMessageType: undefined,\r\n      };\r\n      this.resetForm(\"form\");\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单 Editor 重置\r\n    resetEditor() {\r\n      this.hackResetWxReplySelect = false // 销毁组件\r\n      this.$nextTick(() => {\r\n        this.hackResetWxReplySelect = true // 重建组件\r\n      })\r\n    },\r\n    handleDelete: function(row) {\r\n      const ids = row.id;\r\n      this.$modal.confirm('是否确认删除此数据?').then(function() {\r\n        return deleteAutoReply(ids);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.$modal.msgSuccess(\"删除成功\");\r\n      }).catch(() => {});\r\n    },\r\n  }\r\n}\r\n</script>\r\n"]}]}