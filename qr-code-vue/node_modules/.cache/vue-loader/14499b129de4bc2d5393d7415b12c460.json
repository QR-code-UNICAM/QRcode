{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\definition\\index.vue?vue&type=style&index=0&id=53546f60&lang=scss","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\definition\\index.vue","mtime":1704630437835},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubXktcHJvY2Vzcy1kZXNpZ25lciB7DQogIGhlaWdodDogY2FsYygxMDB2aCAtIDIwMHB4KTsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA0KA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/bpm/definition","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <doc-alert title=\"工作流\" url=\"https://doc.iocoder.cn/bpm\" />\r\n\r\n    <!-- 列表 -->\r\n    <el-table v-loading=\"loading\" :data=\"list\">\r\n      <el-table-column label=\"定义编号\" align=\"center\" prop=\"id\" width=\"400\" />\r\n      <el-table-column label=\"定义名称\" align=\"center\" prop=\"name\" width=\"100\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"text\" @click=\"handleBpmnDetail(scope.row)\">\r\n            <span>{{ scope.row.name }}</span>\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"定义分类\" align=\"center\" prop=\"category\" width=\"100\">\r\n        <template v-slot=\"scope\">\r\n          <dict-tag :type=\"DICT_TYPE.BPM_MODEL_CATEGORY\" :value=\"scope.row.category\" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"表单信息\" align=\"center\" prop=\"formType\" width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <el-button v-if=\"scope.row.formId\" type=\"text\" @click=\"handleFormDetail(scope.row)\">\r\n            <span>{{ scope.row.formName }}</span>\r\n          </el-button>\r\n          <el-button v-else-if=\"scope.row.formCustomCreatePath\" type=\"text\" @click=\"handleFormDetail(scope.row)\">\r\n            <span>{{ scope.row.formCustomCreatePath }}</span>\r\n          </el-button>\r\n          <label v-else>暂无表单</label>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"流程版本\" align=\"center\" prop=\"processDefinition.version\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n          <el-tag size=\"medium\" v-if=\"scope.row\">v{{ scope.row.version }}</el-tag>\r\n          <el-tag size=\"medium\" type=\"warning\" v-else>未部署</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\" align=\"center\" prop=\"version\" width=\"80\">\r\n        <template v-slot=\"scope\">\r\n            <el-tag type=\"success\" v-if=\"scope.row.suspensionState === 1\">激活</el-tag>\r\n            <el-tag type=\"warning\" v-if=\"scope.row.suspensionState === 2\">挂起</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"部署时间\" align=\"center\" prop=\"deploymentTime\" width=\"180\">\r\n        <template v-slot=\"scope\">\r\n          <span>{{ parseTime(scope.row.deploymentTime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"定义描述\" align=\"center\" prop=\"description\" width=\"300\" show-overflow-tooltip />\r\n      <el-table-column label=\"操作\" align=\"center\" width=\"150\" fixed=\"right\">\r\n        <template v-slot=\"scope\">\r\n          <el-button size=\"mini\" type=\"text\" icon=\"el-icon-s-custom\" @click=\"handleAssignRule(scope.row)\"\r\n                     v-hasPermi=\"['bpm:task-assign-rule:update']\">分配规则</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 流程表单配置详情 -->\r\n    <el-dialog title=\"表单详情\" :visible.sync=\"detailOpen\" width=\"50%\" append-to-body>\r\n      <parser :key=\"new Date().getTime()\" :form-conf=\"detailForm\" />\r\n    </el-dialog>\r\n\r\n    <!-- 流程模型图的预览 -->\r\n    <el-dialog title=\"流程图\" :visible.sync=\"showBpmnOpen\" width=\"80%\" append-to-body>\r\n      <my-process-viewer key=\"designer\" v-model=\"bpmnXML\" v-bind=\"bpmnControlForm\" />\r\n    </el-dialog>\r\n\r\n    <!-- 分页组件 -->\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"queryParams.pageNo\" :limit.sync=\"queryParams.pageSize\"\r\n                @pagination=\"getList\"/>\r\n\r\n    <!-- ========== 流程任务分配规则 ========== -->\r\n    <taskAssignRuleDialog ref=\"taskAssignRuleDialog\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {getProcessDefinitionBpmnXML, getProcessDefinitionPage} from \"@/api/bpm/definition\";\r\nimport {DICT_TYPE, getDictDatas} from \"@/utils/dict\";\r\nimport {decodeFields} from \"@/utils/formGenerator\";\r\nimport Parser from '@/components/parser/Parser'\r\nimport taskAssignRuleDialog from \"../taskAssignRule/taskAssignRuleDialog\";\r\n\r\nexport default {\r\n  name: \"BpmProcessDefinition\",\r\n  components: {\r\n    Parser,\r\n    taskAssignRuleDialog\r\n  },\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 表格数据\r\n      list: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNo: 1,\r\n        pageSize: 10\r\n      },\r\n\r\n      // 流程表单详情\r\n      detailOpen: false,\r\n      detailForm: {\r\n        fields: []\r\n      },\r\n\r\n      // BPMN 数据\r\n      showBpmnOpen: false,\r\n      bpmnXML: null,\r\n      bpmnControlForm: {\r\n        prefix: \"flowable\"\r\n      },\r\n\r\n      // 数据字典\r\n      categoryDictDatas: getDictDatas(DICT_TYPE.BPM_MODEL_CATEGORY),\r\n    };\r\n  },\r\n  created() {\r\n    const key = this.$route.query && this.$route.query.key\r\n    if (key) {\r\n      this.queryParams['key'] = key\r\n    }\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    /** 查询流程定义列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      getProcessDefinitionPage(this.queryParams).then(response => {\r\n          this.list = response.data.list;\r\n          this.total = response.data.total;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    },\r\n    /** 流程表单的详情按钮操作 */\r\n    handleFormDetail(row) {\r\n      // 流程表单\r\n      if (row.formId) {\r\n        // 设置值\r\n        this.detailForm = {\r\n          ...JSON.parse(row.formConf),\r\n          fields: decodeFields(row.formFields)\r\n        }\r\n        // 弹窗打开\r\n        this.detailOpen = true\r\n        // 业务表单\r\n      } else if (row.formCustomCreatePath) {\r\n        this.$router.push({ path: row.formCustomCreatePath});\r\n      }\r\n    },\r\n    /** 流程图的详情按钮操作 */\r\n    handleBpmnDetail(row) {\r\n      getProcessDefinitionBpmnXML(row.id).then(response => {\r\n        this.bpmnXML = response.data\r\n        // 弹窗打开\r\n        this.showBpmnOpen = true\r\n      })\r\n    },\r\n    /** 处理任务分配规则列表的按钮操作 */\r\n    handleAssignRule(row) {\r\n      this.$refs['taskAssignRuleDialog'].initProcessDefinition(row.id);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.my-process-designer {\r\n  height: calc(100vh - 200px);\r\n}\r\n</style>\r\n"]}]}