{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\parser\\Parser.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\parser\\Parser.vue","mtime":1704630437758},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Parser.vue"],"names":[],"mappingsfile":"Parser.vue","sourceRoot":"src/components/parser","sourcesContent":["<script>\r\nimport { deepClone } from '@/utils/index'\r\nimport render from '@/components/render/render.js'\r\nimport {getAccessToken} from \"@/utils/auth\";\r\n\r\nconst ruleTrigger = {\r\n  'el-input': 'blur',\r\n  'el-input-number': 'blur',\r\n  'el-select': 'change',\r\n  'el-radio-group': 'change',\r\n  'el-checkbox-group': 'change',\r\n  'el-cascader': 'change',\r\n  'el-time-picker': 'change',\r\n  'el-date-picker': 'change',\r\n  'el-rate': 'change'\r\n}\r\n\r\nconst layouts = {\r\n  colFormItem(h, scheme) {\r\n    const config = scheme.__config__\r\n    const listeners = buildListeners.call(this, scheme)\r\n\r\n    let labelWidth = config.labelWidth ? `${config.labelWidth}px` : null\r\n    if (config.showLabel === false) labelWidth = '0'\r\n    return (\r\n      <el-col span={config.span}>\r\n        <el-form-item label-width={labelWidth} prop={scheme.__vModel__}\r\n          label={config.showLabel ? config.label : ''}>\r\n          <render conf={scheme} on={listeners} />\r\n        </el-form-item>\r\n      </el-col>\r\n    )\r\n  },\r\n  rowFormItem(h, scheme) {\r\n    let child = renderChildren.apply(this, arguments)\r\n    if (scheme.type === 'flex') {\r\n      child = <el-row type={scheme.type} justify={scheme.justify} align={scheme.align}>\r\n              {child}\r\n            </el-row>\r\n    }\r\n    return (\r\n      <el-col span={scheme.span}>\r\n        <el-row gutter={scheme.gutter}>\r\n          {child}\r\n        </el-row>\r\n      </el-col>\r\n    )\r\n  }\r\n}\r\n\r\nfunction renderFrom(h) {\r\n  const { formConfCopy } = this\r\n\r\n  return (\r\n    <el-row gutter={formConfCopy.gutter}>\r\n      <el-form\r\n        size={formConfCopy.size}\r\n        label-position={formConfCopy.labelPosition}\r\n        disabled={formConfCopy.disabled}\r\n        label-width={`${formConfCopy.labelWidth}px`}\r\n        ref={formConfCopy.formRef}\r\n        // model不能直接赋值 https://github.com/vuejs/jsx/issues/49#issuecomment-472013664\r\n        props={{ model: this[formConfCopy.formModel] }}\r\n        rules={this[formConfCopy.formRules]}\r\n      >\r\n        {renderFormItem.call(this, h, formConfCopy.fields)}\r\n        {formConfCopy.formBtns && formBtns.call(this, h)}\r\n      </el-form>\r\n    </el-row>\r\n  )\r\n}\r\n\r\nfunction formBtns(h) {\r\n  return <el-col>\r\n    <el-form-item size=\"large\">\r\n      <el-button type=\"primary\" onClick={this.submitForm}>提交</el-button>\r\n      <el-button onClick={this.resetForm}>重置</el-button>\r\n    </el-form-item>\r\n  </el-col>\r\n}\r\n\r\nfunction renderFormItem(h, elementList) {\r\n  const that = this\r\n  const data = this[this.formConf.formModel]\r\n  // const formRef = that.$refs[that.formConf.formRef] // 这里直接添加有问题，此时还找不到表单 $refs\r\n  return elementList.map(scheme => {\r\n    const config = scheme.__config__\r\n    const layout = layouts[config.layout]\r\n\r\n    // edit by 芋道源码，解决 el-upload 上传的问题\r\n    // 参考 https://github.com/JakHuang/form-generator/blob/master/src/components/parser/example/Index.vue 实现\r\n    const vModel = scheme.__vModel__\r\n    const val = data[vModel]\r\n    if (scheme.__config__.tag === 'el-upload') {\r\n      // 回显图片\r\n      scheme['file-list'] = (val || []).map(url => ({ name: url, url }))\r\n      // 上传地址 + 请求头\r\n      scheme.action = process.env.VUE_APP_BASE_API + \"/admin-api/infra/file/upload\"\r\n      scheme.headers = { Authorization: \"Bearer \" + getAccessToken() }\r\n      // 注意 on-success 不能绑定箭头函数！！！\r\n      scheme['on-success'] = function (response, file, fileList) {\r\n        if (response.code !== 0) {\r\n          return;\r\n        }\r\n        // 添加到 data 中\r\n        const prev = data[vModel] || []\r\n        this.$set(data, vModel, [\r\n          ...prev,\r\n          response.data\r\n        ])\r\n        // 发起表单校验\r\n        that.$refs[that.formConf.formRef].validateField(vModel)\r\n      }\r\n      // 注意 on-remove 不能绑定箭头函数！！！\r\n      scheme['on-remove'] = function (file, fileList) {\r\n        // 移除从 data 中\r\n        const prev = data[vModel] || []\r\n        const index = prev.indexOf(file.response.data)\r\n        if (index === -1) {\r\n          return\r\n        }\r\n        prev.splice(index, 1) // 直接移除即可，无需重复 set，因为 array 是引用\r\n        // 发起表单校验\r\n        that.$refs[that.formConf.formRef].validateField(vModel)\r\n      }\r\n    }\r\n\r\n    if (layout) {\r\n      return layout.call(this, h, scheme)\r\n    }\r\n    throw new Error(`没有与${config.layout}匹配的layout`)\r\n  })\r\n}\r\n\r\nfunction renderChildren(h, scheme) {\r\n  const config = scheme.__config__\r\n  if (!Array.isArray(config.children)) return null\r\n  return renderFormItem.call(this, h, config.children)\r\n}\r\n\r\nfunction setValue(event, config, scheme) {\r\n  this.$set(config, 'defaultValue', event)\r\n  this.$set(this[this.formConf.formModel], scheme.__vModel__, event)\r\n}\r\n\r\nfunction buildListeners(scheme) {\r\n  const config = scheme.__config__\r\n  const methods = this.formConf.__methods__ || {}\r\n  const listeners = {}\r\n\r\n  // 给__methods__中的方法绑定this和event\r\n  Object.keys(methods).forEach(key => {\r\n    listeners[key] = event => methods[key].call(this, event)\r\n  })\r\n  // 响应 render.js 中的 vModel $emit('input', val)\r\n  listeners.input = event => setValue.call(this, event, config, scheme)\r\n\r\n  return listeners\r\n}\r\n\r\nexport default {\r\n  components: {\r\n    render\r\n  },\r\n  props: {\r\n    formConf: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    const data = {\r\n      formConfCopy: deepClone(this.formConf),\r\n      [this.formConf.formModel]: {},\r\n      [this.formConf.formRules]: {}\r\n    }\r\n    this.initFormData(data.formConfCopy.fields, data[this.formConf.formModel])\r\n    this.buildRules(data.formConfCopy.fields, data[this.formConf.formRules])\r\n    return data\r\n  },\r\n  methods: {\r\n    initFormData(componentList, formData) {\r\n      componentList.forEach(cur => {\r\n        const config = cur.__config__\r\n        if (cur.__vModel__) formData[cur.__vModel__] = config.defaultValue\r\n        if (config.children) this.initFormData(config.children, formData)\r\n      })\r\n    },\r\n    buildRules(componentList, rules) {\r\n      componentList.forEach(cur => {\r\n        const config = cur.__config__\r\n        if (Array.isArray(config.regList)) {\r\n          if (config.required) {\r\n            const required = { required: config.required, message: cur.placeholder }\r\n            if (Array.isArray(config.defaultValue)) {\r\n              required.type = 'array'\r\n              required.message = `请至少选择一个${config.label}`\r\n            }\r\n            required.message === undefined && (required.message = `${config.label}不能为空`)\r\n            config.regList.push(required)\r\n          }\r\n          rules[cur.__vModel__] = config.regList.map(item => {\r\n            item.pattern && (item.pattern = eval(item.pattern))\r\n            item.trigger = ruleTrigger && ruleTrigger[config.tag]\r\n            return item\r\n          })\r\n        }\r\n        if (config.children) this.buildRules(config.children, rules)\r\n      })\r\n    },\r\n    resetForm() {\r\n      this.formConfCopy = deepClone(this.formConf)\r\n      this.$refs[this.formConf.formRef].resetFields()\r\n    },\r\n    submitForm() {\r\n      this.$refs[this.formConf.formRef].validate(valid => {\r\n        if (!valid) return false\r\n        // 触发 submit 事件\r\n        // update by 芋道源码\r\n        // this.$emit('submit', this[this.formConf.formModel])\r\n        this.$emit('submit', {\r\n          conf: this.formConfCopy,\r\n          values: this[this.formConf.formModel]\r\n        })\r\n        return true\r\n      })\r\n    }\r\n  },\r\n  render(h) {\r\n    return renderFrom.call(this, h)\r\n  }\r\n}\r\n</script>\r\n"]}]}