{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\layout\\components\\Sidebar\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\layout\\components\\Sidebar\\index.vue","mtime":1704630437795},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBTdGF0ZSB9IGZyb20gInZ1ZXgiOw0KaW1wb3J0IExvZ28gZnJvbSAiLi9Mb2dvIjsNCmltcG9ydCBTaWRlYmFySXRlbSBmcm9tICIuL1NpZGViYXJJdGVtIjsNCmltcG9ydCB2YXJpYWJsZXMgZnJvbSAiQC9hc3NldHMvc3R5bGVzL3ZhcmlhYmxlcy5zY3NzIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7IFNpZGViYXJJdGVtLCBMb2dvIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwU3RhdGUoWyJzZXR0aW5ncyJdKSwNCiAgICAuLi5tYXBHZXR0ZXJzKFsic2lkZWJhclJvdXRlcnMiLCAic2lkZWJhciJdKSwNCiAgICBhY3RpdmVNZW51KCkgew0KICAgICAgY29uc3Qgcm91dGUgPSB0aGlzLiRyb3V0ZTsNCiAgICAgIGNvbnN0IHsgbWV0YSwgcGF0aCB9ID0gcm91dGU7DQogICAgICAvLyBpZiBzZXQgcGF0aCwgdGhlIHNpZGViYXIgd2lsbCBoaWdobGlnaHQgdGhlIHBhdGggeW91IHNldA0KICAgICAgaWYgKG1ldGEuYWN0aXZlTWVudSkgew0KICAgICAgICByZXR1cm4gbWV0YS5hY3RpdmVNZW51Ow0KICAgICAgfQ0KICAgICAgcmV0dXJuIHBhdGg7DQogICAgfSwNCiAgICBzaG93TG9nbygpIHsNCiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5ncy5zaWRlYmFyTG9nbzsNCiAgICB9LA0KICAgIHZhcmlhYmxlcygpIHsNCiAgICAgIHJldHVybiB2YXJpYWJsZXM7DQogICAgfSwNCiAgICBpc0NvbGxhcHNlKCkgew0KICAgICAgcmV0dXJuICF0aGlzLnNpZGViYXIub3BlbmVkOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA2BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<template>\r\n  <div :class=\"{'has-logo':showLogo}\" :style=\"{ backgroundColor: settings.sideTheme === 'theme-dark' ? variables.menuBackground : variables.menuLightBackground }\">\r\n    <logo v-if=\"showLogo\" :collapse=\"isCollapse\" />\r\n    <el-scrollbar :class=\"settings.sideTheme\" wrap-class=\"scrollbar-wrapper\">\r\n      <el-menu\r\n        :default-active=\"activeMenu\"\r\n        :collapse=\"isCollapse\"\r\n        :background-color=\"settings.sideTheme === 'theme-dark' ? variables.menuBackground : variables.menuLightBackground\"\r\n        :text-color=\"settings.sideTheme === 'theme-dark' ? variables.menuColor : variables.menuLightColor\"\r\n        :unique-opened=\"true\"\r\n        :active-text-color=\"settings.theme\"\r\n        :collapse-transition=\"false\"\r\n        mode=\"vertical\"\r\n      >\r\n        <!-- 根据 sidebarRouters 路由，生成菜单 -->\r\n        <sidebar-item\r\n          v-for=\"(route, index) in sidebarRouters\"\r\n          :key=\"route.path  + index\"\r\n          :item=\"route\"\r\n          :base-path=\"route.path\"\r\n        />\r\n      </el-menu>\r\n    </el-scrollbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapState } from \"vuex\";\r\nimport Logo from \"./Logo\";\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport variables from \"@/assets/styles/variables.scss\";\r\n\r\nexport default {\r\n  components: { SidebarItem, Logo },\r\n  computed: {\r\n    ...mapState([\"settings\"]),\r\n    ...mapGetters([\"sidebarRouters\", \"sidebar\"]),\r\n    activeMenu() {\r\n      const route = this.$route;\r\n      const { meta, path } = route;\r\n      // if set path, the sidebar will highlight the path you set\r\n      if (meta.activeMenu) {\r\n        return meta.activeMenu;\r\n      }\r\n      return path;\r\n    },\r\n    showLogo() {\r\n      return this.$store.state.settings.sidebarLogo;\r\n    },\r\n    variables() {\r\n      return variables;\r\n    },\r\n    isCollapse() {\r\n      return !this.sidebar.opened;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}