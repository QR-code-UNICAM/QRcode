{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\penal\\form\\ElementForm.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\penal\\form\\ElementForm.vue","mtime":1704630437715},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ElementForm.vue"],"names":[],"mappings":";AAsfile":"ElementForm.vue","sourceRoot":"src/components/bpmnProcessDesigner/package/penal/form","sourcesContent":["<template>\r\n  <div class=\"panel-tab__content\">\r\n    <el-form size=\"mini\" label-width=\"80px\" @submit.native.prevent>\r\n      <el-form-item label=\"表单标识\">\r\n        <el-input v-model=\"formKey\" clearable @change=\"updateElementFormKey\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"业务标识\">\r\n        <el-select v-model=\"businessKey\" @change=\"updateElementBusinessKey\">\r\n          <el-option v-for=\"i in fieldList\" :key=\"i.id\" :value=\"i.id\" :label=\"i.label\" />\r\n          <el-option label=\"无\" value=\"\" />\r\n        </el-select>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!--字段列表-->\r\n    <div class=\"element-property list-property\">\r\n      <el-divider><i class=\"el-icon-coin\"></i> 表单字段</el-divider>\r\n      <el-table :data=\"fieldList\" size=\"mini\" max-height=\"240\" border fit>\r\n        <el-table-column label=\"序号\" type=\"index\" width=\"50px\" />\r\n        <el-table-column label=\"字段名称\" prop=\"label\" min-width=\"80px\" show-overflow-tooltip />\r\n        <el-table-column label=\"字段类型\" prop=\"type\" min-width=\"80px\" :formatter=\"row => fieldType[row.type] || row.type\" show-overflow-tooltip />\r\n        <el-table-column label=\"默认值\" prop=\"defaultValue\" min-width=\"80px\" show-overflow-tooltip />\r\n        <el-table-column label=\"操作\" width=\"90px\">\r\n          <template v-slot=\"{ row, $index }\">\r\n            <el-button size=\"mini\" type=\"text\" @click=\"openFieldForm(row, $index)\">编辑</el-button>\r\n            <el-divider direction=\"vertical\" />\r\n            <el-button size=\"mini\" type=\"text\" style=\"color: #ff4d4f\" @click=\"removeField(row, $index)\">移除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <div class=\"element-drawer__button\">\r\n      <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"openFieldForm(null, -1)\">添加字段</el-button>\r\n    </div>\r\n\r\n    <!--字段配置侧边栏-->\r\n    <el-drawer :visible.sync=\"fieldModelVisible\" title=\"字段配置\" :size=\"`${width}px`\" append-to-body destroy-on-close>\r\n      <el-form :model=\"formFieldForm\" label-width=\"90px\" size=\"mini\" @submit.native.prevent>\r\n        <el-form-item label=\"字段ID\">\r\n          <el-input v-model=\"formFieldForm.id\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"类型\">\r\n          <el-select v-model=\"formFieldForm.typeType\" placeholder=\"请选择字段类型\" clearable @change=\"changeFieldTypeType\">\r\n            <el-option v-for=\"(value, key) of fieldType\" :label=\"value\" :value=\"key\" :key=\"key\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"类型名称\" v-if=\"formFieldForm.typeType === 'custom'\">\r\n          <el-input v-model=\"formFieldForm.type\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"formFieldForm.label\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"时间格式\" v-if=\"formFieldForm.typeType === 'date'\">\r\n          <el-input v-model=\"formFieldForm.datePattern\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"默认值\">\r\n          <el-input v-model=\"formFieldForm.defaultValue\" clearable />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 枚举值设置 -->\r\n      <template v-if=\"formFieldForm.type === 'enum'\">\r\n        <el-divider key=\"enum-divider\" />\r\n        <p class=\"listener-filed__title\" key=\"enum-title\">\r\n          <span><i class=\"el-icon-menu\"></i>枚举值列表：</span>\r\n          <el-button size=\"mini\" type=\"primary\" @click=\"openFieldOptionForm(null, -1, 'enum')\">添加枚举值</el-button>\r\n        </p>\r\n        <el-table :data=\"fieldEnumList\" size=\"mini\" key=\"enum-table\" max-height=\"240\" border fit>\r\n          <el-table-column label=\"序号\" width=\"50px\" type=\"index\" />\r\n          <el-table-column label=\"枚举值编号\" prop=\"id\" min-width=\"100px\" show-overflow-tooltip />\r\n          <el-table-column label=\"枚举值名称\" prop=\"name\" min-width=\"100px\" show-overflow-tooltip />\r\n          <el-table-column label=\"操作\" width=\"90px\">\r\n            <template v-slot=\"{ row, $index }\">\r\n              <el-button size=\"mini\" type=\"text\" @click=\"openFieldOptionForm(row, $index, 'enum')\">编辑</el-button>\r\n              <el-divider direction=\"vertical\" />\r\n              <el-button size=\"mini\" type=\"text\" style=\"color: #ff4d4f\" @click=\"removeFieldOptionItem(row, $index, 'enum')\">移除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </template>\r\n\r\n      <!-- 校验规则 -->\r\n      <el-divider key=\"validation-divider\" />\r\n      <p class=\"listener-filed__title\" key=\"validation-title\">\r\n        <span><i class=\"el-icon-menu\"></i>约束条件列表：</span>\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"openFieldOptionForm(null, -1, 'constraint')\">添加约束</el-button>\r\n      </p>\r\n      <el-table :data=\"fieldConstraintsList\" size=\"mini\" key=\"validation-table\" max-height=\"240\" border fit>\r\n        <el-table-column label=\"序号\" width=\"50px\" type=\"index\" />\r\n        <el-table-column label=\"约束名称\" prop=\"name\" min-width=\"100px\" show-overflow-tooltip />\r\n        <el-table-column label=\"约束配置\" prop=\"config\" min-width=\"100px\" show-overflow-tooltip />\r\n        <el-table-column label=\"操作\" width=\"90px\">\r\n          <template v-slot=\"{ row, $index }\">\r\n            <el-button size=\"mini\" type=\"text\" @click=\"openFieldOptionForm(row, $index, 'constraint')\">编辑</el-button>\r\n            <el-divider direction=\"vertical\" />\r\n            <el-button size=\"mini\" type=\"text\" style=\"color: #ff4d4f\" @click=\"removeFieldOptionItem(row, $index, 'constraint')\">移除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 表单属性 -->\r\n      <el-divider key=\"property-divider\" />\r\n      <p class=\"listener-filed__title\" key=\"property-title\">\r\n        <span><i class=\"el-icon-menu\"></i>字段属性列表：</span>\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"openFieldOptionForm(null, -1, 'property')\">添加属性</el-button>\r\n      </p>\r\n      <el-table :data=\"fieldPropertiesList\" size=\"mini\" key=\"property-table\" max-height=\"240\" border fit>\r\n        <el-table-column label=\"序号\" width=\"50px\" type=\"index\" />\r\n        <el-table-column label=\"属性编号\" prop=\"id\" min-width=\"100px\" show-overflow-tooltip />\r\n        <el-table-column label=\"属性值\" prop=\"value\" min-width=\"100px\" show-overflow-tooltip />\r\n        <el-table-column label=\"操作\" width=\"90px\">\r\n          <template v-slot=\"{ row, $index }\">\r\n            <el-button size=\"mini\" type=\"text\" @click=\"openFieldOptionForm(row, $index, 'property')\">编辑</el-button>\r\n            <el-divider direction=\"vertical\" />\r\n            <el-button size=\"mini\" type=\"text\" style=\"color: #ff4d4f\" @click=\"removeFieldOptionItem(row, $index, 'property')\">移除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 底部按钮 -->\r\n      <div class=\"element-drawer__button\">\r\n        <el-button size=\"mini\">取 消</el-button>\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveField\">保 存</el-button>\r\n      </div>\r\n    </el-drawer>\r\n\r\n    <el-dialog :visible.sync=\"fieldOptionModelVisible\" :title=\"optionModelTitle\" width=\"600px\" append-to-body destroy-on-close>\r\n      <el-form :model=\"fieldOptionForm\" size=\"mini\" label-width=\"96px\" @submit.native.prevent>\r\n        <el-form-item label=\"编号/ID\" v-if=\"fieldOptionType !== 'constraint'\" key=\"option-id\">\r\n          <el-input v-model=\"fieldOptionForm.id\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"名称\" v-if=\"fieldOptionType !== 'property'\" key=\"option-name\">\r\n          <el-input v-model=\"fieldOptionForm.name\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"配置\" v-if=\"fieldOptionType === 'constraint'\" key=\"option-config\">\r\n          <el-input v-model=\"fieldOptionForm.config\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"值\" v-if=\"fieldOptionType === 'property'\" key=\"option-value\">\r\n          <el-input v-model=\"fieldOptionForm.value\" clearable />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template slot=\"footer\">\r\n        <el-button size=\"mini\" @click=\"fieldOptionModelVisible = false\">取 消</el-button>\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveFieldOption\">确 定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ElementForm\",\r\n  props: {\r\n    id: String,\r\n    type: String\r\n  },\r\n  inject: {\r\n    prefix: \"prefix\",\r\n    width: \"width\"\r\n  },\r\n  data() {\r\n    return {\r\n      formKey: \"\",\r\n      businessKey: \"\",\r\n      optionModelTitle: \"\",\r\n      fieldList: [],\r\n      formFieldForm: {},\r\n      fieldType: {\r\n        long: \"长整型\",\r\n        string: \"字符串\",\r\n        boolean: \"布尔类\",\r\n        date: \"日期类\",\r\n        enum: \"枚举类\",\r\n        custom: \"自定义类型\"\r\n      },\r\n      formFieldIndex: -1, // 编辑中的字段， -1 为新增\r\n      formFieldOptionIndex: -1, // 编辑中的字段配置项， -1 为新增\r\n      fieldModelVisible: false,\r\n      fieldOptionModelVisible: false,\r\n      fieldOptionForm: {}, // 当前激活的字段配置项数据\r\n      fieldOptionType: \"\", // 当前激活的字段配置项弹窗 类型\r\n      fieldEnumList: [], // 枚举值列表\r\n      fieldConstraintsList: [], // 约束条件列表\r\n      fieldPropertiesList: [] // 绑定属性列表\r\n    };\r\n  },\r\n  watch: {\r\n    id: {\r\n      immediate: true,\r\n      handler(val) {\r\n        val && val.length && this.$nextTick(() => this.resetFormList());\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    resetFormList() {\r\n      this.bpmnELement = window.bpmnInstances.bpmnElement;\r\n      this.formKey = this.bpmnELement.businessObject.formKey;\r\n      // 获取元素扩展属性 或者 创建扩展属性\r\n      this.elExtensionElements =\r\n        this.bpmnELement.businessObject.get(\"extensionElements\") || window.bpmnInstances.moddle.create(\"bpmn:ExtensionElements\", { values: [] });\r\n      // 获取元素表单配置 或者 创建新的表单配置\r\n      this.formData =\r\n        this.elExtensionElements.values.filter(ex => ex.$type === `${this.prefix}:FormData`)?.[0] ||\r\n        window.bpmnInstances.moddle.create(`${this.prefix}:FormData`, { fields: [] });\r\n\r\n      // 业务标识 businessKey， 绑定在 formData 中\r\n      this.businessKey = this.formData.businessKey;\r\n\r\n      // 保留剩余扩展元素，便于后面更新该元素对应属性\r\n      this.otherExtensions = this.elExtensionElements.values.filter(ex => ex.$type !== `${this.prefix}:FormData`);\r\n\r\n      // 复制原始值，填充表格\r\n      this.fieldList = JSON.parse(JSON.stringify(this.formData.fields || []));\r\n\r\n      // 更新元素扩展属性，避免后续报错\r\n      this.updateElementExtensions();\r\n    },\r\n    updateElementFormKey() {\r\n      window.bpmnInstances.modeling.updateProperties(this.bpmnELement, { formKey: this.formKey });\r\n    },\r\n    updateElementBusinessKey() {\r\n      window.bpmnInstances.modeling.updateModdleProperties(this.bpmnELement, this.formData, { businessKey: this.businessKey });\r\n    },\r\n    // 根据类型调整字段type\r\n    changeFieldTypeType(type) {\r\n      this.$set(this.formFieldForm, \"type\", type === \"custom\" ? \"\" : type);\r\n    },\r\n\r\n    // 打开字段详情侧边栏\r\n    openFieldForm(field, index) {\r\n      this.formFieldIndex = index;\r\n      if (index !== -1) {\r\n        const FieldObject = this.formData.fields[index];\r\n        this.formFieldForm = JSON.parse(JSON.stringify(field));\r\n        // 设置自定义类型\r\n        this.$set(this.formFieldForm, \"typeType\", !this.fieldType[field.type] ? \"custom\" : field.type);\r\n        // 初始化枚举值列表\r\n        field.type === \"enum\" && (this.fieldEnumList = JSON.parse(JSON.stringify(FieldObject?.values || [])));\r\n        // 初始化约束条件列表\r\n        this.fieldConstraintsList = JSON.parse(JSON.stringify(FieldObject?.validation?.constraints || []));\r\n        // 初始化自定义属性列表\r\n        this.fieldPropertiesList = JSON.parse(JSON.stringify(FieldObject?.properties?.values || []));\r\n      } else {\r\n        this.formFieldForm = {};\r\n        // 初始化枚举值列表\r\n        this.fieldEnumList = [];\r\n        // 初始化约束条件列表\r\n        this.fieldConstraintsList = [];\r\n        // 初始化自定义属性列表\r\n        this.fieldPropertiesList = [];\r\n      }\r\n      this.fieldModelVisible = true;\r\n    },\r\n    // 打开字段 某个 配置项 弹窗\r\n    openFieldOptionForm(option, index, type) {\r\n      this.fieldOptionModelVisible = true;\r\n      this.fieldOptionType = type;\r\n      this.formFieldOptionIndex = index;\r\n      if (type === \"property\") {\r\n        this.fieldOptionForm = option ? JSON.parse(JSON.stringify(option)) : {};\r\n        return (this.optionModelTitle = \"属性配置\");\r\n      }\r\n      if (type === \"enum\") {\r\n        this.fieldOptionForm = option ? JSON.parse(JSON.stringify(option)) : {};\r\n        return (this.optionModelTitle = \"枚举值配置\");\r\n      }\r\n      this.fieldOptionForm = option ? JSON.parse(JSON.stringify(option)) : {};\r\n      return (this.optionModelTitle = \"约束条件配置\");\r\n    },\r\n\r\n    // 保存字段 某个 配置项\r\n    saveFieldOption() {\r\n      if (this.formFieldOptionIndex === -1) {\r\n        if (this.fieldOptionType === \"property\") {\r\n          this.fieldPropertiesList.push(this.fieldOptionForm);\r\n        }\r\n        if (this.fieldOptionType === \"constraint\") {\r\n          this.fieldConstraintsList.push(this.fieldOptionForm);\r\n        }\r\n        if (this.fieldOptionType === \"enum\") {\r\n          this.fieldEnumList.push(this.fieldOptionForm);\r\n        }\r\n      } else {\r\n        this.fieldOptionType === \"property\" && this.fieldPropertiesList.splice(this.formFieldOptionIndex, 1, this.fieldOptionForm);\r\n        this.fieldOptionType === \"constraint\" && this.fieldConstraintsList.splice(this.formFieldOptionIndex, 1, this.fieldOptionForm);\r\n        this.fieldOptionType === \"enum\" && this.fieldEnumList.splice(this.formFieldOptionIndex, 1, this.fieldOptionForm);\r\n      }\r\n      this.fieldOptionModelVisible = false;\r\n      this.fieldOptionForm = {};\r\n    },\r\n    // 保存字段配置\r\n    saveField() {\r\n      const { id, type, label, defaultValue, datePattern } = this.formFieldForm;\r\n      const Field = window.bpmnInstances.moddle.create(`${this.prefix}:FormField`, { id, type, label });\r\n      defaultValue && (Field.defaultValue = defaultValue);\r\n      datePattern && (Field.datePattern = datePattern);\r\n      // 构建属性\r\n      if (this.fieldPropertiesList && this.fieldPropertiesList.length) {\r\n        const fieldPropertyList = this.fieldPropertiesList.map(fp => {\r\n          return window.bpmnInstances.moddle.create(`${this.prefix}:Property`, { id: fp.id, value: fp.value });\r\n        });\r\n        Field.properties = window.bpmnInstances.moddle.create(`${this.prefix}:Properties`, { values: fieldPropertyList });\r\n      }\r\n      // 构建校验规则\r\n      if (this.fieldConstraintsList && this.fieldConstraintsList.length) {\r\n        const fieldConstraintList = this.fieldConstraintsList.map(fc => {\r\n          return window.bpmnInstances.moddle.create(`${this.prefix}:Constraint`, { name: fc.name, config: fc.config });\r\n        });\r\n        Field.validation = window.bpmnInstances.moddle.create(`${this.prefix}:Validation`, { constraints: fieldConstraintList });\r\n      }\r\n      // 构建枚举值\r\n      if (this.fieldEnumList && this.fieldEnumList.length) {\r\n        Field.values = this.fieldEnumList.map(fe => {\r\n          return window.bpmnInstances.moddle.create(`${this.prefix}:Value`, { name: fe.name, id: fe.id });\r\n        });\r\n      }\r\n      // 更新数组 与 表单配置实例\r\n      if (this.formFieldIndex === -1) {\r\n        this.fieldList.push(this.formFieldForm);\r\n        this.formData.fields.push(Field);\r\n      } else {\r\n        this.fieldList.splice(this.formFieldIndex, 1, this.formFieldForm);\r\n        this.formData.fields.splice(this.formFieldIndex, 1, Field);\r\n      }\r\n      this.updateElementExtensions();\r\n      this.fieldModelVisible = false;\r\n    },\r\n\r\n    // 移除某个 字段的 配置项\r\n    removeFieldOptionItem(option, index, type) {\r\n      if (type === \"property\") {\r\n        this.fieldPropertiesList.splice(index, 1);\r\n        return;\r\n      }\r\n      if (type === \"enum\") {\r\n        this.fieldEnumList.splice(index, 1);\r\n        return;\r\n      }\r\n      this.fieldConstraintsList.splice(index, 1);\r\n    },\r\n    // 移除 字段\r\n    removeField(field, index) {\r\n      this.fieldList.splice(index, 1);\r\n      this.formData.fields.splice(index, 1);\r\n      this.updateElementExtensions();\r\n    },\r\n\r\n    updateElementExtensions() {\r\n      // 更新回扩展元素\r\n      const newElExtensionElements = window.bpmnInstances.moddle.create(`bpmn:ExtensionElements`, {\r\n        values: this.otherExtensions.concat(this.formData)\r\n      });\r\n      // 更新到元素上\r\n      window.bpmnInstances.modeling.updateProperties(this.bpmnELement, {\r\n        extensionElements: newElExtensionElements\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}