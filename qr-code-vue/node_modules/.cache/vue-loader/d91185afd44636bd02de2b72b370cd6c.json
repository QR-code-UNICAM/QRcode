{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\taskAssignRule\\taskAssignRuleDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\taskAssignRule\\taskAssignRuleDialog.vue","mtime":1704630437851},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["taskAssignRuleDialog.vue"],"names":[],"mappings":";AAifile":"taskAssignRuleDialog.vue","sourceRoot":"src/views/bpm/taskAssignRule","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 列表弹窗 -->\r\n    <el-dialog title=\"任务分配规则\" :visible.sync=\"visible\" width=\"800px\" append-to-body>\r\n      <el-table v-loading=\"loading\" :data=\"list\">\r\n        <el-table-column label=\"任务名\" align=\"center\" prop=\"taskDefinitionName\" width=\"120\" fixed />\r\n        <el-table-column label=\"任务标识\" align=\"center\" prop=\"taskDefinitionKey\" width=\"120\" show-tooltip-when-overflow />\r\n        <el-table-column label=\"规则类型\" align=\"center\" prop=\"type\" width=\"120\">\r\n          <template v-slot=\"scope\">\r\n            <dict-tag :type=\"DICT_TYPE.BPM_TASK_ASSIGN_RULE_TYPE\" :value=\"scope.row.type\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"规则范围\" align=\"center\" prop=\"options\" width=\"440px\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag size=\"medium\" v-if=\"scope.row.options\" :key=\"option\" v-for=\"option in scope.row.options\">\r\n              {{ getAssignRuleOptionName(scope.row.type, option) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column v-if=\"modelId\" label=\"操作\" align=\"center\" width=\"80\" fixed=\"right\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdateTaskAssignRule(scope.row)\"\r\n                       v-hasPermi=\"['bpm:task-assign-rule:update']\">修改</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-dialog>\r\n    <!-- 添加/修改弹窗 -->\r\n    <el-dialog title=\"修改任务规则\" :visible.sync=\"open\" width=\"500px\" append-to-body>\r\n      <el-form ref=\"taskAssignRuleForm\" :model=\"form\" :rules=\"rules\" label-width=\"110px\">\r\n        <el-form-item label=\"任务名称\" prop=\"taskDefinitionName\">\r\n          <el-input v-model=\"form.taskDefinitionName\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"任务标识\" prop=\"taskDefinitionKey\">\r\n          <el-input v-model=\"form.taskDefinitionKey\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"规则类型\" prop=\"type\">\r\n          <el-select v-model=\"form.type\" clearable style=\"width: 100%\">\r\n            <el-option v-for=\"dict in taskAssignRuleTypeDictDatas\" :key=\"parseInt(dict.value)\" :label=\"dict.label\" :value=\"parseInt(dict.value)\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 10\" label=\"指定角色\" prop=\"roleIds\">\r\n          <el-select v-model=\"form.roleIds\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"item in roleOptions\" :key=\"parseInt(item.id)\" :label=\"item.name\" :value=\"parseInt(item.id)\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 20 || form.type === 21\" label=\"指定部门\" prop=\"deptIds\">\r\n          <treeselect v-model=\"form.deptIds\" :options=\"deptTreeOptions\" multiple flat :defaultExpandLevel=\"3\"\r\n                      placeholder=\"请选择指定部门\" :normalizer=\"normalizer\"/>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 22\" label=\"指定岗位\" prop=\"postIds\">\r\n          <el-select v-model=\"form.postIds\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"item in postOptions\" :key=\"parseInt(item.id)\" :label=\"item.name\" :value=\"parseInt(item.id)\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 30 || form.type === 31 || form.type === 32\" label=\"指定用户\" prop=\"userIds\">\r\n          <el-select v-model=\"form.userIds\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"item in userOptions\" :key=\"parseInt(item.id)\" :label=\"item.nickname\" :value=\"parseInt(item.id)\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 40\" label=\"指定用户组\" prop=\"userGroupIds\">\r\n          <el-select v-model=\"form.userGroupIds\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"item in userGroupOptions\" :key=\"parseInt(item.id)\" :label=\"item.name\" :value=\"parseInt(item.id)\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"form.type === 50\" label=\"指定脚本\" prop=\"scripts\">\r\n          <el-select v-model=\"form.scripts\" multiple clearable style=\"width: 100%\">\r\n            <el-option v-for=\"dict in taskAssignScriptDictDatas\" :key=\"parseInt(dict.value)\"\r\n                       :label=\"dict.label\" :value=\"parseInt(dict.value)\"/>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitAssignRuleForm\">确 定</el-button>\r\n        <el-button @click=\"cancelAssignRuleForm\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {DICT_TYPE, getDictDatas} from \"@/utils/dict\";\r\nimport {createTaskAssignRule, getTaskAssignRuleList, updateTaskAssignRule} from \"@/api/bpm/taskAssignRule\";\r\nimport {listSimpleRoles} from \"@/api/system/role\";\r\nimport {listSimpleDepts} from \"@/api/system/dept\";\r\n\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\nimport {listSimplePosts} from \"@/api/system/post\";\r\nimport {listSimpleUsers} from \"@/api/system/user\";\r\nimport {listSimpleUserGroups} from \"@/api/bpm/userGroup\";\r\n\r\nexport default {\r\n  name: \"BpmTaskAssignRule\",\r\n  components: {\r\n    Treeselect\r\n  },\r\n  data() {\r\n    return {\r\n      // 如下参数，可传递\r\n      modelId: undefined, // 流程模型的编号。如果 modelId 非空，则用于流程模型的查看与配置\r\n      processDefinitionId: undefined, // 流程定义的编号。如果 processDefinitionId 非空，则用于流程定义的查看，不支持配置\r\n      visible: false,\r\n\r\n      // 任务分配规则表单\r\n      row: undefined, // 选中的流程模型\r\n      list: [], // 选中流程模型的任务分配规则们\r\n      loading: false, // 加载中\r\n      open: false, // 是否打开\r\n      form: {}, // 表单\r\n      rules: { // 表单校验规则\r\n        type: [{ required: true, message: \"规则类型不能为空\", trigger: \"change\" }],\r\n        roleIds: [{required: true, message: \"指定角色不能为空\", trigger: \"change\" }],\r\n        deptIds: [{required: true, message: \"指定部门不能为空\", trigger: \"change\" }],\r\n        postIds: [{required: true, message: \"指定岗位不能为空\", trigger: \"change\"}],\r\n        userIds: [{required: true, message: \"指定用户不能为空\", trigger: \"change\"}],\r\n        userGroupIds: [{required: true, message: \"指定用户组不能为空\", trigger: \"change\"}],\r\n        scripts: [{required: true, message: \"指定脚本不能为空\", trigger: \"change\"}],\r\n      },\r\n\r\n      // 各种下拉框\r\n      roleOptions: [],\r\n      deptOptions: [],\r\n      deptTreeOptions: [],\r\n      postOptions: [],\r\n      userOptions: [],\r\n      userGroupOptions: [],\r\n\r\n      // 数据字典\r\n      modelFormTypeDictDatas: getDictDatas(DICT_TYPE.BPM_MODEL_FORM_TYPE),\r\n      taskAssignRuleTypeDictDatas: getDictDatas(DICT_TYPE.BPM_TASK_ASSIGN_RULE_TYPE),\r\n      taskAssignScriptDictDatas: getDictDatas(DICT_TYPE.BPM_TASK_ASSIGN_SCRIPT),\r\n    };\r\n  },\r\n  methods: {\r\n    initModel(modelId) {\r\n      this.modelId = modelId;\r\n      this.processDefinitionId = undefined;\r\n\r\n      // 初始化所有下拉框\r\n      this.init0();\r\n    },\r\n    initProcessDefinition(processDefinitionId) {\r\n      this.modelId = undefined;\r\n      this.processDefinitionId = processDefinitionId;\r\n\r\n      // 初始化所有下拉框\r\n      this.init0();\r\n    },\r\n    /** 初始化 */\r\n    init0() {\r\n      // 设置可见\r\n      this.visible = true;\r\n      // 获得列表\r\n      this.getList();\r\n\r\n      // 获得角色列表\r\n      this.roleOptions = [];\r\n      listSimpleRoles().then(response => {\r\n        this.roleOptions.push(...response.data);\r\n      });\r\n      // 获得部门列表\r\n      this.deptOptions = [];\r\n      this.deptTreeOptions = [];\r\n      listSimpleDepts().then(response => {\r\n        this.deptOptions.push(...response.data);\r\n        this.deptTreeOptions.push(...this.handleTree(response.data, \"id\"));\r\n      });\r\n      // 获得岗位列表\r\n      this.postOptions = [];\r\n      listSimplePosts().then(response => {\r\n        this.postOptions.push(...response.data);\r\n      });\r\n      // 获得用户列表\r\n      this.userOptions = [];\r\n      listSimpleUsers().then(response => {\r\n        this.userOptions.push(...response.data);\r\n      });\r\n      // 获得用户组列表\r\n      this.userGroupOptions = [];\r\n      listSimpleUserGroups().then(response => {\r\n        this.userGroupOptions.push(...response.data);\r\n      });\r\n    },\r\n    /** 获得任务分配规则列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      getTaskAssignRuleList({\r\n        modelId: this.modelId,\r\n        processDefinitionId: this.processDefinitionId,\r\n      }).then(response => {\r\n        this.loading = false;\r\n        this.list = response.data;\r\n      })\r\n    },\r\n    /** 处理修改任务分配规则的按钮操作 */\r\n    handleUpdateTaskAssignRule(row) {\r\n      // 先重置标识\r\n      this.resetAssignRuleForm();\r\n      // 设置表单\r\n      this.form = {\r\n        ...row,\r\n        options: [],\r\n        roleIds: [],\r\n        deptIds: [],\r\n        postIds: [],\r\n        userIds: [],\r\n        userGroupIds: [],\r\n        scripts: [],\r\n      };\r\n      // 将 options 赋值到对应的 roleIds 等选项\r\n      if (row.type === 10) {\r\n        this.form.roleIds.push(...row.options);\r\n      } else if (row.type === 20 || row.type === 21) {\r\n        this.form.deptIds.push(...row.options);\r\n      } else if (row.type === 22) {\r\n        this.form.postIds.push(...row.options);\r\n      } else if (row.type === 30 || row.type === 31 || row.type === 32) {\r\n        this.form.userIds.push(...row.options);\r\n      } else if (row.type === 40) {\r\n        this.form.userGroupIds.push(...row.options);\r\n      } else if (row.type === 50) {\r\n        this.form.scripts.push(...row.options);\r\n      }\r\n      this.open = true;\r\n    },\r\n    /** 提交任务分配规则的表单 */\r\n    submitAssignRuleForm() {\r\n      this.$refs[\"taskAssignRuleForm\"].validate(valid => {\r\n        if (valid) {\r\n          // 构建表单\r\n          let form = {\r\n            ...this.form,\r\n            taskDefinitionName: undefined,\r\n          };\r\n          // 将 roleIds 等选项赋值到 options 中\r\n          if (form.type === 10) {\r\n            form.options = form.roleIds;\r\n          } else if (form.type === 20 || form.type === 21) {\r\n            form.options = form.deptIds;\r\n          } else if (form.type === 22) {\r\n            form.options = form.postIds;\r\n          } else if (form.type === 30 || form.type === 31 || form.type === 32) {\r\n            form.options = form.userIds;\r\n          } else if (form.type === 40) {\r\n            form.options = form.userGroupIds;\r\n          } else if (form.type === 50) {\r\n            form.options = form.scripts;\r\n          }\r\n          form.roleIds = undefined;\r\n          form.deptIds = undefined;\r\n          form.postIds = undefined;\r\n          form.userIds = undefined;\r\n          form.userGroupIds = undefined;\r\n          form.scripts = undefined;\r\n          // 新增\r\n          if (!form.id) {\r\n            form.modelId = this.modelId; // 模型编号\r\n            createTaskAssignRule(form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n            // 修改\r\n          } else {\r\n            form.taskDefinitionKey = undefined; // 无法修改\r\n            updateTaskAssignRule(form).then(response => {\r\n              this.$modal.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 取消任务分配规则的表单 */\r\n    cancelAssignRuleForm() {\r\n      this.open = false;\r\n      this.resetAssignRuleForm();\r\n    },\r\n    /** 表单重置 */\r\n    resetAssignRuleForm() {\r\n      this.form = {};\r\n      this.resetForm(\"taskAssignRuleForm\");\r\n    },\r\n    getAssignRuleOptionName(type, option) {\r\n      if (type === 10) {\r\n        for (const roleOption of this.roleOptions) {\r\n          if (roleOption.id === option) {\r\n            return roleOption.name;\r\n          }\r\n        }\r\n      } else if (type === 20 || type === 21) {\r\n        for (const deptOption of this.deptOptions) {\r\n          if (deptOption.id === option) {\r\n            return deptOption.name;\r\n          }\r\n        }\r\n      } else if (type === 22) {\r\n        for (const postOption of this.postOptions) {\r\n          if (postOption.id === option) {\r\n            return postOption.name;\r\n          }\r\n        }\r\n      } else if (type === 30 || type === 31 || type === 32) {\r\n        for (const userOption of this.userOptions) {\r\n          if (userOption.id === option) {\r\n            return userOption.nickname;\r\n          }\r\n        }\r\n      } else if (type === 40) {\r\n        for (const userGroupOption of this.userGroupOptions) {\r\n          if (userGroupOption.id === option) {\r\n            return userGroupOption.name;\r\n          }\r\n        }\r\n      } else if (type === 50) {\r\n        option = option + ''; // 转换成 string\r\n        for (const dictData of this.taskAssignScriptDictDatas) {\r\n          if (dictData.value === option) {\r\n            return dictData.label;\r\n          }\r\n        }\r\n      }\r\n      return '未知(' + option + ')';\r\n    },\r\n    // 格式化部门的下拉框\r\n    normalizer(node) {\r\n      return {\r\n        id: node.id,\r\n        label: node.name,\r\n        children: node.children\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}