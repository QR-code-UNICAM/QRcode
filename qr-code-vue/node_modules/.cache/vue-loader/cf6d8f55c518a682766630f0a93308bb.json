{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\sso.vue?vue&type=style&index=0&id=3510c736&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\sso.vue","mtime":1704630438057},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICJ+QC9hc3NldHMvc3R5bGVzL2xvZ2luLnNjc3MiOw0KLm9hdXRoLWxvZ2luIHsNCiAgZGlzcGxheTogZmxleDsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgY3Vyc29yOnBvaW50ZXI7DQp9DQoub2F1dGgtbG9naW4taXRlbSB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIG1hcmdpbi1yaWdodDogMTBweDsNCn0NCi5vYXV0aC1sb2dpbi1pdGVtIGltZyB7DQogIGhlaWdodDogMjVweDsNCiAgd2lkdGg6IDI1cHg7DQp9DQoub2F1dGgtbG9naW4taXRlbSBzcGFuOmhvdmVyIHsNCiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgcmVkOw0KICBjb2xvcjogcmVkOw0KfQ0K"},{"version":3,"sources":["sso.vue"],"names":[],"mappings":";AA8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sso.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"logo\"></div>\r\n    <!-- 登录区域 -->\r\n    <div class=\"content\">\r\n      <!-- 配图 -->\r\n      <div class=\"pic\"></div>\r\n      <!-- 表单 -->\r\n      <div class=\"field\">\r\n        <!-- [移动端]标题 -->\r\n        <h2 class=\"mobile-title\">\r\n          <h3 class=\"title\">芋道后台管理系统</h3>\r\n        </h2>\r\n\r\n        <!-- 表单 -->\r\n        <div class=\"form-cont\">\r\n          <el-tabs class=\"form\" style=\" float:none;\" value=\"uname\">\r\n            <el-tab-pane :label=\"'三方授权（' + client.name + ')'\" name=\"uname\">\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n          <div>\r\n            <el-form ref=\"loginForm\" :model=\"loginForm\" class=\"login-form\">\r\n              <!-- 授权范围的选择 -->\r\n              此第三方应用请求获得以下权限：\r\n              <el-form-item prop=\"scopes\">\r\n                <el-checkbox-group v-model=\"loginForm.scopes\">\r\n                  <el-checkbox v-for=\"scope in params.scopes\" :label=\"scope\" :key=\"scope\"\r\n                               style=\"display: block; margin-bottom: -10px;\">{{formatScope(scope)}}</el-checkbox>\r\n                </el-checkbox-group>\r\n              </el-form-item>\r\n              <!-- 下方的登录按钮 -->\r\n              <el-form-item style=\"width:100%;\">\r\n                <el-button :loading=\"loading\" size=\"medium\" type=\"primary\" style=\"width:60%;\"\r\n                           @click.native.prevent=\"handleAuthorize(true)\">\r\n                  <span v-if=\"!loading\">同意授权</span>\r\n                  <span v-else>授 权 中...</span>\r\n                </el-button>\r\n                <el-button size=\"medium\" style=\"width:36%\"\r\n                           @click.native.prevent=\"handleAuthorize(false)\">拒绝</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- footer -->\r\n    <div class=\"footer\">\r\n      Copyright © 2020-2022 iocoder.cn All Rights Reserved.\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {authorize, getAuthorize} from \"@/api/login\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        scopes: [], // 已选中的 scope 数组\r\n      },\r\n      params: { // URL 上的 client_id、scope 等参数\r\n        responseType: undefined,\r\n        clientId: undefined,\r\n        redirectUri: undefined,\r\n        state: undefined,\r\n        scopes: [], // 优先从 query 参数获取；如果未传递，从后端获取\r\n      },\r\n      client: { // 客户端信息\r\n        name: '',\r\n        logo: '',\r\n      },\r\n      loading: false\r\n    };\r\n  },\r\n  created() {\r\n    // 解析参数\r\n    // 例如说【自动授权不通过】：client_id=default&redirect_uri=https%3A%2F%2Fwww.iocoder.cn&response_type=code&scope=user.read%20user.write\r\n    // 例如说【自动授权通过】：client_id=default&redirect_uri=https%3A%2F%2Fwww.iocoder.cn&response_type=code&scope=user.read\r\n    this.params.responseType = this.$route.query.response_type\r\n    this.params.clientId = this.$route.query.client_id\r\n    this.params.redirectUri = this.$route.query.redirect_uri\r\n    this.params.state = this.$route.query.state\r\n    if (this.$route.query.scope) {\r\n      this.params.scopes = this.$route.query.scope.split(' ')\r\n    }\r\n\r\n    // 如果有 scope 参数，先执行一次自动授权，看看是否之前都授权过了。\r\n    if (this.params.scopes.length > 0) {\r\n      this.doAuthorize(true, this.params.scopes, []).then(res => {\r\n        const href = res.data\r\n        if (!href) {\r\n          console.log('自动授权未通过！')\r\n          return;\r\n        }\r\n        location.href = href\r\n      })\r\n    }\r\n\r\n    // 获取授权页的基本信息\r\n    getAuthorize(this.params.clientId).then(res => {\r\n      this.client = res.data.client\r\n      // 解析 scope\r\n      let scopes\r\n      // 1.1 如果 params.scope 非空，则过滤下返回的 scopes\r\n      if (this.params.scopes.length > 0) {\r\n        scopes = []\r\n        for (const scope of res.data.scopes) {\r\n          if (this.params.scopes.indexOf(scope.key) >= 0) {\r\n            scopes.push(scope)\r\n          }\r\n        }\r\n      // 1.2 如果 params.scope 为空，则使用返回的 scopes 设置它\r\n      } else {\r\n        scopes = res.data.scopes\r\n        for (const scope of scopes) {\r\n          this.params.scopes.push(scope.key)\r\n        }\r\n      }\r\n      // 生成已选中的 checkedScopes\r\n      for (const scope of scopes) {\r\n        if (scope.value) {\r\n          this.loginForm.scopes.push(scope.key)\r\n        }\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    handleAuthorize(approved) {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (!valid) {\r\n          return\r\n        }\r\n        this.loading = true\r\n        // 计算 checkedScopes + uncheckedScopes\r\n        let checkedScopes;\r\n        let uncheckedScopes;\r\n        if (approved) { // 同意授权，按照用户的选择\r\n          checkedScopes = this.loginForm.scopes\r\n          uncheckedScopes = this.params.scopes.filter(item => checkedScopes.indexOf(item) === -1)\r\n        } else { // 拒绝，则都是取消\r\n          checkedScopes = []\r\n          uncheckedScopes = this.params.scopes\r\n        }\r\n        // 提交授权的请求\r\n        this.doAuthorize(false, checkedScopes, uncheckedScopes).then(res => {\r\n          const href = res.data\r\n          if (!href) {\r\n            return;\r\n          }\r\n          location.href = href\r\n        }).finally(() => {\r\n          this.loading = false\r\n        })\r\n      })\r\n    },\r\n    doAuthorize(autoApprove, checkedScopes, uncheckedScopes) {\r\n      return authorize(this.params.responseType, this.params.clientId, this.params.redirectUri, this.params.state,\r\n          autoApprove, checkedScopes, uncheckedScopes)\r\n    },\r\n    formatScope(scope) {\r\n      // 格式化 scope 授权范围，方便用户理解。\r\n      // 这里仅仅是一个 demo，可以考虑录入到字典数据中，例如说字典类型 \"system_oauth2_scope\"，它的每个 scope 都是一条字典数据。\r\n      switch (scope) {\r\n        case 'user.read': return '访问你的个人信息'\r\n        case 'user.write': return '修改你的个人信息'\r\n        default: return scope\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"~@/assets/styles/login.scss\";\r\n.oauth-login {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor:pointer;\r\n}\r\n.oauth-login-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 10px;\r\n}\r\n.oauth-login-item img {\r\n  height: 25px;\r\n  width: 25px;\r\n}\r\n.oauth-login-item span:hover {\r\n  text-decoration: underline red;\r\n  color: red;\r\n}\r\n</style>\r\n"]}]}