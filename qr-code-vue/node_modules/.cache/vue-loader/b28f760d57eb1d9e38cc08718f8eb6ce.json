{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\infra\\codegen\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\infra\\codegen\\index.vue","mtime":1704630437879},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAsFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/infra/codegen","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <doc-alert title=\"代码生成\" url=\"https://doc.iocoder.cn/new-feature/\" />\r\n    <doc-alert title=\"单元测试\" url=\"https://doc.iocoder.cn/unit-test/\" />\r\n    <!-- 操作工作栏 -->\r\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\r\n      <el-form-item label=\"表名称\" prop=\"tableName\">\r\n        <el-input v-model=\"queryParams.tableName\" placeholder=\"请输入表名称\" clearable\r\n                  @keyup.enter.native=\"handleQuery\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"表描述\" prop=\"tableComment\">\r\n        <el-input v-model=\"queryParams.tableComment\" placeholder=\"请输入表描述\" clearable\r\n                  @keyup.enter.native=\"handleQuery\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"创建时间\" prop=\"createTime\">\r\n        <el-date-picker v-model=\"queryParams.createTime\" style=\"width: 240px\" value-format=\"yyyy-MM-dd HH:mm:ss\" type=\"daterange\"\r\n                        range-separator=\"-\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" :default-time=\"['00:00:00', '23:59:59']\" />\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleQuery\">搜索</el-button>\r\n        <el-button icon=\"el-icon-refresh\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 操作工作栏 -->\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button type=\"info\" plain icon=\"el-icon-upload\" size=\"mini\" @click=\"openImportTable\"\r\n                   v-hasPermi=\"['infra:codegen:create']\">导入</el-button>\r\n      </el-col>\r\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\r\n    </el-row>\r\n\r\n    <!-- 列表 -->\r\n    <el-table v-loading=\"loading\" :data=\"tableList\">\r\n      <el-table-column label=\"数据源\" align=\"center\" :formatter=\"dataSourceConfigNameFormat\"/>\r\n      <el-table-column label=\"表名称\" align=\"center\" prop=\"tableName\" width=\"200\"/>\r\n      <el-table-column label=\"表描述\" align=\"center\" prop=\"tableComment\" :show-overflow-tooltip=\"true\" width=\"120\"/>\r\n      <el-table-column label=\"实体\" align=\"center\" prop=\"className\" width=\"200\"/>\r\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"180\">\r\n        <template v-slot=\"scope\">\r\n          <span>{{ parseTime(scope.row.createTime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"更新时间\" align=\"center\" prop=\"createTime\" width=\"180\">\r\n        <template v-slot=\"scope\">\r\n          <span>{{ parseTime(scope.row.updateTime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" align=\"center\" width=\"300px\" class-name=\"small-padding fixed-width\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"text\" size=\"small\" icon=\"el-icon-view\" @click=\"handlePreview(scope.row)\" v-hasPermi=\"['infra:codegen:preview']\">预览</el-button>\r\n          <el-button type=\"text\" size=\"small\" icon=\"el-icon-edit\" @click=\"handleEditTable(scope.row)\" v-hasPermi=\"['infra:codegen:update']\">编辑</el-button>\r\n          <el-button type=\"text\" size=\"small\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\" v-hasPermi=\"['infra:codegen:delete']\">删除</el-button>\r\n          <el-button type=\"text\" size=\"small\" icon=\"el-icon-refresh\" @click=\"handleSynchDb(scope.row)\" v-hasPermi=\"['infra:codegen:update']\">同步</el-button>\r\n          <el-button type=\"text\" size=\"small\" icon=\"el-icon-download\" @click=\"handleGenTable(scope.row)\" v-hasPermi=\"['infra:codegen:download']\">生成代码</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"queryParams.pageNo\" :limit.sync=\"queryParams.pageSize\" @pagination=\"getList\"/>\r\n\r\n    <!-- 预览界面 -->\r\n    <el-dialog :title=\"preview.title\" :visible.sync=\"preview.open\" width=\"90%\" top=\"5vh\" append-to-body class=\"scrollbar\">\r\n      <el-row>\r\n        <el-col :span=\"7\">\r\n          <el-tree :data=\"preview.fileTree\" :expand-on-click-node=\"false\" default-expand-all highlight-current\r\n                   @node-click=\"handleNodeClick\"/>\r\n        </el-col>\r\n        <el-col :span=\"17\">\r\n          <el-tabs v-model=\"preview.activeName\">\r\n            <el-tab-pane v-for=\"item in preview.data\" :label=\"item.filePath.substring(item.filePath.lastIndexOf('/') + 1)\"\r\n                         :name=\"item.filePath\" :key=\"item.filePath\">\r\n              <el-link :underline=\"false\" icon=\"el-icon-document-copy\" v-clipboard:copy=\"item.code\" v-clipboard:success=\"clipboardSuccess\" style=\"float:right\">复制</el-link>\r\n              <pre><code class=\"hljs\" v-html=\"highlightedCode(item)\"></code></pre>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col>\r\n      </el-row>\r\n    </el-dialog>\r\n\r\n    <!-- 基于 DB 导入 -->\r\n    <import-table ref=\"import\" @ok=\"handleQuery\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCodegenTablePage, previewCodegen, downloadCodegen, deleteCodegen,\r\n  syncCodegenFromDB } from \"@/api/infra/codegen\";\r\n\r\nimport importTable from \"./importTable\";\r\n// 代码高亮插件\r\nimport hljs from \"highlight.js/lib/highlight\";\r\nimport \"highlight.js/styles/github-gist.css\";\r\nimport {getDataSourceConfigList} from \"@/api/infra/dataSourceConfig\";\r\nhljs.registerLanguage(\"java\", require(\"highlight.js/lib/languages/java\"));\r\nhljs.registerLanguage(\"xml\", require(\"highlight.js/lib/languages/xml\"));\r\nhljs.registerLanguage(\"html\", require(\"highlight.js/lib/languages/xml\"));\r\nhljs.registerLanguage(\"vue\", require(\"highlight.js/lib/languages/xml\"));\r\nhljs.registerLanguage(\"javascript\", require(\"highlight.js/lib/languages/javascript\"));\r\nhljs.registerLanguage(\"sql\", require(\"highlight.js/lib/languages/sql\"));\r\nhljs.registerLanguage(\"typescript\", require(\"highlight.js/lib/languages/typescript\"));\r\nexport default {\r\n  name: \"InfraCodegen\",\r\n  components: { importTable },\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 唯一标识符\r\n      uniqueId: \"\",\r\n      // 选中表数组\r\n      tableNames: [],\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 表数据\r\n      tableList: [],\r\n      // 日期范围\r\n      dateRange: \"\",\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNo: 1,\r\n        pageSize: 10,\r\n        tableName: undefined,\r\n        tableComment: undefined,\r\n        createTime: []\r\n      },\r\n      // 预览参数\r\n      preview: {\r\n        open: false,\r\n        title: \"代码预览\",\r\n        fileTree: [],\r\n        data: {},\r\n        activeName: \"\",\r\n      },\r\n      // 数据源列表\r\n      dataSourceConfigs: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n    // 加载数据源\r\n    getDataSourceConfigList().then(response => {\r\n      this.dataSourceConfigs = response.data;\r\n    });\r\n  },\r\n  activated() {\r\n    const time = this.$route.query.t;\r\n    if (time != null && time !== this.uniqueId) {\r\n      this.uniqueId = time;\r\n      this.resetQuery();\r\n    }\r\n  },\r\n  methods: {\r\n    /** 查询表集合 */\r\n    getList() {\r\n      this.loading = true;\r\n      getCodegenTablePage(this.queryParams).then(response => {\r\n            this.tableList = response.data.list;\r\n            this.total = response.data.total;\r\n            this.loading = false;\r\n          }\r\n      );\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNo = 1;\r\n      this.getList();\r\n    },\r\n    /** 生成代码操作 */\r\n    handleGenTable(row) {\r\n      downloadCodegen(row.id).then(response => {\r\n        this.$download.zip(response, 'codegen-' + row.tableName + '.zip');\r\n      })\r\n    },\r\n    /** 同步数据库操作 */\r\n    handleSynchDb(row) {\r\n      // 基于 DB 同步\r\n      const tableName = row.tableName;\r\n      this.$modal.confirm('确认要强制同步\"' + tableName + '\"表结构吗？').then(function() {\r\n          return syncCodegenFromDB(row.id);\r\n      }).then(() => {\r\n          this.$modal.msgSuccess(\"同步成功\");\r\n      }).catch(() => {});\r\n    },\r\n    /** 打开导入表弹窗 */\r\n    openImportTable() {\r\n      this.$refs.import.show();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    /** 预览按钮 */\r\n    handlePreview(row) {\r\n      previewCodegen(row.id).then(response => {\r\n        this.preview.data = response.data;\r\n        let files = this.handleFiles(response.data);\r\n        this.preview.fileTree = this.handleTree(files, \"id\", \"parentId\", \"children\",\r\n            \"/\"); // \"/\" 为根节点\r\n        // console.log(this.preview.fileTree)\r\n        this.preview.activeName = response.data[0].filePath;\r\n        this.preview.open = true;\r\n      });\r\n    },\r\n    /** 高亮显示 */\r\n    highlightedCode(item) {\r\n      // const vmName = key.substring(key.lastIndexOf(\"/\") + 1, key.indexOf(\".vm\"));\r\n      // var language = vmName.substring(vmName.indexOf(\".\") + 1, vmName.length);\r\n      const language = item.filePath.substring(item.filePath.lastIndexOf('.') + 1)\r\n      const result = hljs.highlight(language, item.code || \"\", true);\r\n      return result.value || '&nbsp;';\r\n    },\r\n    /** 复制代码成功 */\r\n    clipboardSuccess() {\r\n      this.$modal.msgSuccess(\"复制成功\");\r\n    },\r\n    /** 生成 files 目录 **/\r\n    handleFiles(datas) {\r\n      let exists = {}; // key：file 的 id；value：true\r\n      let files = [];\r\n      // 遍历每个元素\r\n      for (const data of datas) {\r\n        let paths = data.filePath.split('/');\r\n        let fullPath = ''; // 从头开始的路径，用于生成 id\r\n        // 特殊处理 java 文件\r\n        if (paths[paths.length - 1].indexOf('.java') >= 0) {\r\n          let newPaths = [];\r\n          for (let i = 0; i < paths.length; i++) {\r\n            let path = paths[i];\r\n            if (path !== 'java') {\r\n              newPaths.push(path);\r\n              continue;\r\n            }\r\n            newPaths.push(path);\r\n            // 特殊处理中间的 package，进行合并\r\n            let tmp = undefined;\r\n            while (i < paths.length) {\r\n              path = paths[i + 1];\r\n              if (path === 'controller'\r\n                || path === 'convert'\r\n                || path === 'dal'\r\n                || path === 'enums'\r\n                || path === 'service'\r\n                || path === 'vo' // 下面三个，主要是兜底。可能考虑到有人改了包结构\r\n                || path === 'mysql'\r\n                || path === 'dataobject') {\r\n                break;\r\n              }\r\n              tmp = tmp ? tmp + '.' + path : path;\r\n              i++;\r\n            }\r\n            if (tmp) {\r\n              newPaths.push(tmp);\r\n            }\r\n          }\r\n          paths = newPaths;\r\n        }\r\n        // 遍历每个 path， 拼接成树\r\n        for (let i = 0; i < paths.length; i++) {\r\n          // 已经添加到 files 中，则跳过\r\n          let oldFullPath = fullPath;\r\n          // 下面的 replaceAll 的原因，是因为上面包处理了，导致和 tabs 不匹配，所以 replaceAll 下\r\n          fullPath = fullPath.length === 0 ? paths[i] : fullPath.replaceAll('.', '/') + '/' + paths[i];\r\n          if (exists[fullPath]) {\r\n            continue;\r\n          }\r\n          // 添加到 files 中\r\n          exists[fullPath] = true;\r\n          files.push({\r\n            id: fullPath,\r\n            label: paths[i],\r\n            parentId: oldFullPath || '/'  // \"/\" 为根节点\r\n          });\r\n        }\r\n      }\r\n      return files;\r\n    },\r\n    /** 节点单击事件 **/\r\n    handleNodeClick(data, node) {\r\n      if (node && !node.isLeaf) {\r\n        return false;\r\n      }\r\n      // 判断，如果非子节点，不允许选中\r\n      this.preview.activeName = data.id;\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleEditTable(row) {\r\n      const tableId = row.id;\r\n      const tableName = row.tableName || this.tableNames[0];\r\n      const params = { pageNum: this.queryParams.pageNum };\r\n      this.$tab.openPage(\"修改[\" + tableName + \"]生成配置\", '/codegen/edit/' + tableId, params);\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const tableIds = row.id;\r\n      this.$modal.confirm('是否确认删除表名称为\"' + row.tableName + '\"的数据项?').then(function() {\r\n          return deleteCodegen(tableIds);\r\n      }).then(() => {\r\n          this.getList();\r\n          this.$modal.msgSuccess(\"删除成功\");\r\n      }).catch(() => {});\r\n    },\r\n    // 数据源配置的名字\r\n    dataSourceConfigNameFormat(row, column) {\r\n      for (const config of this.dataSourceConfigs) {\r\n        if (row.dataSourceConfigId === config.id) {\r\n          return config.name;\r\n        }\r\n      }\r\n      return '未知【' + row.leaderUserId + '】';\r\n    },\r\n  }\r\n};\r\n</script>\r\n"]}]}