{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\mp\\statistics\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\mp\\statistics\\index.vue","mtime":1704630438033},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAmfile":"index.vue","sourceRoot":"src/views/mp/statistics","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <doc-alert title=\"公众号统计\" url=\"https://doc.iocoder.cn/mp/statistics/\" />\r\n\r\n    <!-- 搜索工作栏 -->\r\n    <el-form ref=\"queryForm\" size=\"small\" :inline=\"true\" label-width=\"68px\">\r\n      <el-form-item label=\"公众号\" prop=\"accountId\">\r\n        <el-select v-model=\"accountId\" @change=\"getSummary\">\r\n          <el-option v-for=\"item in accounts\" :key=\"parseInt(item.id)\" :label=\"item.name\" :value=\"parseInt(item.id)\" />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"时间范围\" prop=\"date\">\r\n        <el-date-picker v-model=\"date\" style=\"width: 260px\" value-format=\"yyyy-MM-dd HH:mm:ss\" type=\"daterange\"\r\n                        range-separator=\"-\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\"\r\n                        :picker-options=\"datePickerOptions\" :default-time=\"['00:00:00', '23:59:59']\"\r\n                        @change=\"getSummary\">\r\n        </el-date-picker>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 图表 -->\r\n    <el-row>\r\n      <el-col :span=\"12\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\">\r\n            <span>用户增减数据</span>\r\n          </div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <div ref=\"userSummaryChart\" style=\"height: 420px\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\">\r\n            <span>累计用户数据</span>\r\n          </div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <div ref=\"userCumulateChart\" style=\"height: 420px\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\">\r\n            <span>消息概况数据</span>\r\n          </div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <div ref=\"upstreamMessageChart\" style=\"height: 420px\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\" class=\"card-box\">\r\n        <el-card>\r\n          <div slot=\"header\">\r\n            <span>接口分析数据</span>\r\n          </div>\r\n          <div class=\"el-table el-table--enable-row-hover el-table--medium\">\r\n            <div ref=\"interfaceSummaryChart\" style=\"height: 420px\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入基本模板\r\nimport * as echarts from 'echarts'\r\n// 引入柱状图组件\r\nrequire('echarts/lib/chart/bar')\r\n// 引入柱拆线组件\r\nrequire('echarts/lib/chart/line')\r\n// 引入提示框和title组件\r\nrequire('echarts/lib/component/tooltip')\r\nrequire('echarts/lib/component/title')\r\nrequire('echarts/lib/component/legend')\r\n\r\nimport { getInterfaceSummary, getUserSummary, getUserCumulate, getUpstreamMessage} from '@/api/mp/statistics'\r\nimport { datePickerOptions } from \"@/utils/constants\";\r\nimport {addTime, beginOfDay, betweenDay, endOfDay, formatDate} from \"@/utils/dateUtils\";\r\nimport { getSimpleAccounts } from \"@/api/mp/account\";\r\n\r\nexport default {\r\n  name: 'MpStatistics',\r\n  data() {\r\n    return {\r\n      date : [beginOfDay(new Date(new Date().getTime() - 3600 * 1000 * 24 * 7)), // -7 天\r\n        endOfDay(new Date(new Date().getTime() - 3600 * 1000 * 24))], // -1 天\r\n      accountId: undefined,\r\n      accounts: [],\r\n\r\n      xAxisDate: [], // X 轴的日期范围\r\n      userSummaryOption: { // 用户增减数据\r\n        color: ['#67C23A', '#e5323e'],\r\n        legend: {\r\n          data: ['新增用户','取消关注的用户']\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: [] // X 轴的日期范围\r\n        },\r\n        yAxis: {\r\n          minInterval: 1\r\n        },\r\n        series: [{\r\n          name: '新增用户',\r\n          type: 'bar',\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          },\r\n          barGap: 0,\r\n          data: [] // 新增用户的数据\r\n        }, {\r\n          name: '取消关注的用户',\r\n          type: 'bar',\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          },\r\n          data: [] // 取消关注的用户的数据\r\n        }]\r\n      },\r\n      userCumulateOption: { // 累计用户数据\r\n        legend: {\r\n          data: ['累计用户量']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          minInterval: 1\r\n        },\r\n        series: [{\r\n          name:'累计用户量',\r\n          data: [], // 累计用户量的数据\r\n          type: 'line',\r\n          smooth: true,\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          }\r\n        }]\r\n      },\r\n      upstreamMessageOption: { // 消息发送概况数据\r\n        color: ['#67C23A', '#e5323e'],\r\n        legend: {\r\n          data: ['用户发送人数', '用户发送条数']\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: [] // X 轴的日期范围\r\n        },\r\n        yAxis: {\r\n          minInterval: 1\r\n        },\r\n        series: [{\r\n          name: '用户发送人数',\r\n          type: 'line',\r\n          smooth: true,\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          },\r\n          data: [] // 用户发送人数的数据\r\n        }, {\r\n          name: '用户发送条数',\r\n          type: 'line',\r\n          smooth: true,\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          },\r\n          data: [] // 用户发送条数的数据\r\n        }]\r\n      },\r\n      interfaceSummaryOption: {  // 接口分析况数据\r\n        color: ['#67C23A', '#e5323e', '#E6A23C', '#409EFF'],\r\n        legend: {\r\n          data: ['被动回复用户消息的次数','失败次数', '最大耗时','总耗时']\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: [] // X 轴的日期范围\r\n        },\r\n        yAxis: {},\r\n        series: [{\r\n          name: '被动回复用户消息的次数',\r\n          type: 'bar',\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          },\r\n          barGap: 0,\r\n          data: [] // 被动回复用户消息的次数的数据\r\n        }, {\r\n          name: '失败次数',\r\n          type: 'bar',\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          },\r\n          data: [] // 失败次数的数据\r\n        }, {\r\n          name: '最大耗时',\r\n          type: 'bar',\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          },\r\n          data: [] // 最大耗时的数据\r\n        }, {\r\n          name: '总耗时',\r\n          type: 'bar',\r\n          label: {\r\n            normal: {\r\n              show: true\r\n            }\r\n          },\r\n          data: [] // 总耗时的数据\r\n        }]\r\n      },\r\n\r\n      // 静态变量\r\n      datePickerOptions: datePickerOptions,\r\n    }\r\n  },\r\n  created() {\r\n    getSimpleAccounts().then(response => {\r\n      this.accounts = response.data;\r\n      // 默认选中第一个\r\n      if (this.accounts.length > 0) {\r\n        this.accountId = this.accounts[0].id;\r\n      }\r\n      // 加载数据\r\n      this.getSummary();\r\n    })\r\n  },\r\n  methods: {\r\n    getSummary() {\r\n      // 如果没有选中公众号账号，则进行提示。\r\n      if (!this.accountId) {\r\n        this.$message.error('未选中公众号，无法统计数据')\r\n        return false\r\n      }\r\n      // 必须选择 7 天内，因为公众号有时间跨度限制为 7\r\n      if (betweenDay(this.date[0], this.date[1]) >= 7) {\r\n        this.$message.error('时间间隔 7 天以内，请重新选择')\r\n        return false\r\n      }\r\n      this.xAxisDate = []\r\n      const days = betweenDay(this.date[0], this.date[1]) // 相差天数\r\n      for(let i = 0; i <= days; i++){\r\n        this.xAxisDate.push(formatDate(addTime(this.date[0], 3600 * 1000 * 24 * i), 'yyyy-MM-dd'));\r\n      }\r\n\r\n      // 初始化图表\r\n      this.initUserSummaryChart();\r\n      this.initUserCumulateChart();\r\n      this.initUpstreamMessageChart();\r\n      this.interfaceSummaryChart();\r\n    },\r\n    initUserSummaryChart() {\r\n      this.userSummaryOption.xAxis.data = [];\r\n      this.userSummaryOption.series[0].data = [];\r\n      this.userSummaryOption.series[1].data = [];\r\n      getUserSummary({\r\n        accountId: this.accountId,\r\n        date: [formatDate(this.date[0], 'yyyy-MM-dd HH:mm:ss'), formatDate(this.date[1], 'yyyy-MM-dd HH:mm:ss'),]\r\n      }).then(response => {\r\n        this.userSummaryOption.xAxis.data = this.xAxisDate;\r\n        // 处理数据\r\n        this.xAxisDate.forEach((date, index) => {\r\n          response.data.forEach((item) => {\r\n            // 匹配日期\r\n            const refDate = formatDate(new Date(item.refDate), 'yyyy-MM-dd');\r\n            if (refDate.indexOf(date) === -1) {\r\n              return;\r\n            }\r\n            // 设置数据到对应的位置\r\n            this.userSummaryOption.series[0].data[index] = item.newUser;\r\n            this.userSummaryOption.series[1].data[index] = item.cancelUser;\r\n          })\r\n        })\r\n        // 绘制图表\r\n        const userSummaryChart = echarts.init(this.$refs.userSummaryChart);\r\n        userSummaryChart.setOption(this.userSummaryOption)\r\n      }).catch(() => {})\r\n    },\r\n    initUserCumulateChart() {\r\n      this.userCumulateOption.xAxis.data = [];\r\n      this.userCumulateOption.series[0].data = [];\r\n      // 发起请求\r\n      getUserCumulate({\r\n        accountId: this.accountId,\r\n        date: [formatDate(this.date[0], 'yyyy-MM-dd HH:mm:ss'), formatDate(this.date[1], 'yyyy-MM-dd HH:mm:ss'),]\r\n      }).then(response => {\r\n        this.userCumulateOption.xAxis.data = this.xAxisDate;\r\n        // 处理数据\r\n        response.data.forEach((item, index) => {\r\n          this.userCumulateOption.series[0].data[index] = item.cumulateUser;\r\n        })\r\n        // 绘制图表\r\n        const userCumulateChart = echarts.init(this.$refs.userCumulateChart);\r\n        userCumulateChart.setOption(this.userCumulateOption)\r\n      }).catch(() => {})\r\n    },\r\n    initUpstreamMessageChart() {\r\n      this.upstreamMessageOption.xAxis.data = [];\r\n      this.upstreamMessageOption.series[0].data = [];\r\n      this.upstreamMessageOption.series[1].data = [];\r\n      // 发起请求\r\n      getUpstreamMessage({\r\n        accountId: this.accountId,\r\n        date: [formatDate(this.date[0], 'yyyy-MM-dd HH:mm:ss'), formatDate(this.date[1], 'yyyy-MM-dd HH:mm:ss'),]\r\n      }).then(response => {\r\n        this.upstreamMessageOption.xAxis.data = this.xAxisDate;\r\n        // 处理数据\r\n        response.data.forEach((item, index) => {\r\n          this.upstreamMessageOption.series[0].data[index] = item.messageUser;\r\n          this.upstreamMessageOption.series[1].data[index] = item.messageCount;\r\n        })\r\n        // 绘制图表\r\n        const upstreamMessageChart = echarts.init(this.$refs.upstreamMessageChart);\r\n        upstreamMessageChart.setOption(this.upstreamMessageOption);\r\n      }).catch(() => {})\r\n    },\r\n    interfaceSummaryChart() {\r\n      this.interfaceSummaryOption.xAxis.data = [];\r\n      this.interfaceSummaryOption.series[0].data = [];\r\n      this.interfaceSummaryOption.series[1].data = [];\r\n      this.interfaceSummaryOption.series[2].data = [];\r\n      this.interfaceSummaryOption.series[3].data = [];\r\n      // 发起请求\r\n      getInterfaceSummary({\r\n        accountId: this.accountId,\r\n        date: [formatDate(this.date[0], 'yyyy-MM-dd HH:mm:ss'), formatDate(this.date[1], 'yyyy-MM-dd HH:mm:ss'),]\r\n      }).then(response => {\r\n        this.interfaceSummaryOption.xAxis.data = this.xAxisDate;\r\n        // 处理数据\r\n        response.data.forEach((item, index) => {\r\n          this.interfaceSummaryOption.series[0].data[index] = item.callbackCount;\r\n          this.interfaceSummaryOption.series[1].data[index] = item.failCount;\r\n          this.interfaceSummaryOption.series[2].data[index] = item.maxTimeCost;\r\n          this.interfaceSummaryOption.series[3].data[index] = item.totalTimeCost;\r\n        })\r\n        // 绘制图表\r\n        const interfaceSummaryChart = echarts.init(this.$refs.interfaceSummaryChart);\r\n        interfaceSummaryChart.setOption(this.interfaceSummaryOption);\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}