{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\form\\formEditor.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\bpm\\form\\formEditor.vue","mtime":1704630437837},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["formEditor.vue"],"names":[],"mappingsfile":"formEditor.vue","sourceRoot":"src/views/bpm/form","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"left-board\">\r\n      <div class=\"logo-wrapper\">\r\n        <div class=\"logo\">流程表单</div>\r\n      </div>\r\n      <el-scrollbar class=\"left-scrollbar\">\r\n        <!-- 左边：表单项 -->\r\n        <div class=\"components-list\">\r\n          <div v-for=\"(item, listIndex) in leftComponents\" :key=\"listIndex\">\r\n            <div class=\"components-title\">\r\n              <svg-icon icon-class=\"component\" />\r\n              {{ item.title }}\r\n            </div>\r\n            <draggable\r\n              class=\"components-draggable\"\r\n              :list=\"item.list\"\r\n              :group=\"{ name: 'componentsGroup', pull: 'clone', put: false }\"\r\n              :clone=\"cloneComponent\"\r\n              draggable=\".components-item\"\r\n              :sort=\"false\"\r\n              @end=\"onEnd\"\r\n            >\r\n              <div\r\n                v-for=\"(element, index) in item.list\"\r\n                :key=\"index\"\r\n                class=\"components-item\"\r\n                @click=\"addComponent(element)\"\r\n              >\r\n                <div class=\"components-body\">\r\n                  <svg-icon :icon-class=\"element.__config__.tagIcon\" />\r\n                  {{ element.__config__.label }}\r\n                </div>\r\n              </div>\r\n            </draggable>\r\n          </div>\r\n\r\n          <!-- 左边：动态表单 -->\r\n          <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n            <el-form-item label=\"表单名\" prop=\"name\">\r\n              <el-input v-model=\"form.name\" placeholder=\"请输入表单名\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"开启状态\" prop=\"status\">\r\n              <el-radio-group v-model=\"form.status\">\r\n                <el-radio v-for=\"dict in this.getDictDatas(DICT_TYPE.COMMON_STATUS)\"\r\n                          :key=\"dict.value\" :label=\"parseInt(dict.value)\">{{dict.label}}</el-radio>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n            <el-form-item label=\"备注\" prop=\"remark\">\r\n              <el-input type=\"textarea\" v-model=\"form.remark\" placeholder=\"请输入备注\" />\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </el-scrollbar>\r\n    </div>\r\n\r\n    <div class=\"center-board\">\r\n      <div class=\"action-bar\">\r\n        <el-button icon=\"el-icon-check\" type=\"text\" @click=\"save\">保存</el-button>\r\n        <!--        <el-button icon=\"el-icon-video-play\" type=\"text\" @click=\"run\">-->\r\n<!--          运行-->\r\n<!--        </el-button>-->\r\n        <el-button icon=\"el-icon-view\" type=\"text\" @click=\"showJson\">\r\n          查看json\r\n        </el-button>\r\n<!--        <el-button icon=\"el-icon-download\" type=\"text\" @click=\"download\">-->\r\n<!--          导出vue文件-->\r\n<!--        </el-button>-->\r\n<!--        <el-button class=\"copy-btn-main\" icon=\"el-icon-document-copy\" type=\"text\" @click=\"copy\">-->\r\n<!--          复制代码-->\r\n<!--        </el-button>-->\r\n        <el-button class=\"delete-btn\" icon=\"el-icon-delete\" type=\"text\" @click=\"empty\">\r\n          清空\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 中间，表单项 -->\r\n      <el-scrollbar class=\"center-scrollbar\">\r\n        <el-row class=\"center-board-row\" :gutter=\"formConf.gutter\">\r\n          <el-form\r\n            :size=\"formConf.size\"\r\n            :label-position=\"formConf.labelPosition\"\r\n            :disabled=\"formConf.disabled\"\r\n            :label-width=\"formConf.labelWidth + 'px'\"\r\n          >\r\n            <draggable class=\"drawing-board\" :list=\"drawingList\" :animation=\"340\" group=\"componentsGroup\">\r\n              <draggable-item\r\n                v-for=\"(item, index) in drawingList\"\r\n                :key=\"item.renderKey\"\r\n                :drawing-list=\"drawingList\"\r\n                :current-item=\"item\"\r\n                :index=\"index\"\r\n                :active-id=\"activeId\"\r\n                :form-conf=\"formConf\"\r\n                @activeItem=\"activeFormItem\"\r\n                @copyItem=\"drawingItemCopy\"\r\n                @deleteItem=\"drawingItemDelete\"\r\n              />\r\n            </draggable>\r\n            <div v-show=\"!drawingList.length\" class=\"empty-info\">\r\n              从左侧拖入或点选组件进行表单设计\r\n            </div>\r\n          </el-form>\r\n        </el-row>\r\n      </el-scrollbar>\r\n    </div>\r\n\r\n    <!-- 右边：组件属性/表单属性 -->\r\n    <right-panel\r\n      :active-data=\"activeData\"\r\n      :form-conf=\"formConf\"\r\n      :show-field=\"!!drawingList.length\"\r\n      @tag-change=\"tagChange\"\r\n      @fetch-data=\"fetchData\"\r\n    />\r\n\r\n<!--    <form-drawer-->\r\n<!--      :visible.sync=\"drawerVisible\"-->\r\n<!--      :form-data=\"formData\"-->\r\n<!--      size=\"100%\"-->\r\n<!--      :generate-conf=\"generateConf\"-->\r\n<!--    />-->\r\n\r\n    <json-drawer\r\n      size=\"60%\"\r\n      :visible.sync=\"jsonDrawerVisible\"\r\n      :json-str=\"JSON.stringify(formData)\"\r\n      @refresh=\"refreshJson\"\r\n    />\r\n\r\n<!--    <code-type-dialog-->\r\n<!--      :visible.sync=\"dialogVisible\"-->\r\n<!--      title=\"选择生成类型\"-->\r\n<!--      :show-file-name=\"showFileName\"-->\r\n<!--      @confirm=\"generate\"-->\r\n<!--    />-->\r\n\r\n<!--    <input id=\"copyNode\" type=\"hidden\">-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport draggable from 'vuedraggable'\r\nimport { debounce } from 'throttle-debounce'\r\nimport { saveAs } from 'file-saver'\r\nimport ClipboardJS from 'clipboard'\r\nimport render from '@/components/render/render'\r\nimport FormDrawer from '@/views/infra/build/FormDrawer'\r\nimport JsonDrawer from '@/views/infra/build/JsonDrawer'\r\nimport RightPanel from '@/views/infra/build/RightPanel'\r\nimport {\r\n  inputComponents, selectComponents, layoutComponents, formConf\r\n} from '@/components/generator/config'\r\nimport {beautifierConf, titleCase, deepClone, isObjectObject} from '@/utils'\r\nimport {\r\n  makeUpHtml, vueTemplate, vueScript, cssStyle\r\n} from '@/components/generator/html'\r\nimport { makeUpJs } from '@/components/generator/js'\r\nimport { makeUpCss } from '@/components/generator/css'\r\nimport drawingDefalut from '@/components/generator/drawingDefalut'\r\nimport logo from '@/assets/logo/logo.png'\r\nimport CodeTypeDialog from '@/views/infra/build/CodeTypeDialog'\r\nimport DraggableItem from '@/views/infra/build/DraggableItem'\r\nimport {\r\n  getDrawingList, saveDrawingList, getIdGlobal, saveIdGlobal, getFormConf\r\n} from '@/utils/db'\r\nimport loadBeautifier from '@/utils/loadBeautifier'\r\nimport {CommonStatusEnum} from \"@/utils/constants\";\r\nimport {createForm, getForm, updateForm} from \"@/api/bpm/form\";\r\nimport {decodeFields} from \"@/utils/formGenerator\";\r\n\r\nlet beautifier\r\nconst emptyActiveData = { style: {}, autosize: {} }\r\nlet oldActiveId\r\nlet tempActiveData\r\nconst drawingListInDB = getDrawingList()\r\nconst formConfInDB = getFormConf()\r\nconst idGlobal = getIdGlobal()\r\n\r\nexport default {\r\n  components: {\r\n    draggable,\r\n    render,\r\n    FormDrawer,\r\n    JsonDrawer,\r\n    RightPanel,\r\n    CodeTypeDialog,\r\n    DraggableItem\r\n  },\r\n  data() {\r\n    return {\r\n      logo,\r\n      idGlobal,\r\n      formConf,\r\n      inputComponents,\r\n      selectComponents,\r\n      layoutComponents,\r\n      labelWidth: 100,\r\n      // drawingList: drawingDefalut,\r\n      drawingData: {}, // 生成后的表单数据\r\n      activeId: drawingDefalut[0].__config__.formId,\r\n\r\n      drawingList: [], // 表单项的数组\r\n      // activeId: undefined,\r\n      // activeData: {},\r\n\r\n      drawerVisible: false,\r\n      formData: {},\r\n      dialogVisible: false,\r\n      jsonDrawerVisible: false,\r\n      generateConf: null,\r\n      showFileName: false,\r\n      activeData: drawingDefalut[0], // 右边编辑器激活的表单项\r\n      saveDrawingListDebounce: debounce(340, saveDrawingList),\r\n      saveIdGlobalDebounce: debounce(340, saveIdGlobal),\r\n      leftComponents: [\r\n        {\r\n          title: '输入型组件',\r\n          list: inputComponents\r\n        },\r\n        {\r\n          title: '选择型组件',\r\n          list: selectComponents\r\n        },\r\n        {\r\n          title: '布局型组件',\r\n          list: layoutComponents\r\n        }\r\n      ],\r\n\r\n      // 表单参数\r\n      form: {\r\n        status: CommonStatusEnum.ENABLE,\r\n      },\r\n      // 表单校验\r\n      rules: {\r\n        name: [{ required: true, message: \"表单名不能为空\", trigger: \"blur\" }],\r\n        status: [{ required: true, message: \"开启状态不能为空\", trigger: \"blur\" }],\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  watch: {\r\n    // eslint-disable-next-line func-names\r\n    'activeData.__config__.label': function (val, oldVal) {\r\n      if (\r\n        this.activeData.placeholder === undefined\r\n        || !this.activeData.__config__.tag\r\n        || oldActiveId !== this.activeId\r\n      ) {\r\n        return\r\n      }\r\n      this.activeData.placeholder = this.activeData.placeholder.replace(oldVal, '') + val\r\n    },\r\n    activeId: {\r\n      handler(val) {\r\n        oldActiveId = val\r\n      },\r\n      immediate: true\r\n    },\r\n    drawingList: {\r\n      handler(val) {\r\n        this.saveDrawingListDebounce(val)\r\n        if (val.length === 0) this.idGlobal = 100\r\n      },\r\n      deep: true\r\n    },\r\n    idGlobal: {\r\n      handler(val) {\r\n        this.saveIdGlobalDebounce(val)\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  mounted() {\r\n    // 【add by 芋道源码】不读缓存\r\n    // if (Array.isArray(drawingListInDB) && drawingListInDB.length > 0) {\r\n    //   this.drawingList = drawingListInDB\r\n    // } else {\r\n    //   this.drawingList = drawingDefalut\r\n    // }\r\n    // this.activeFormItem(this.drawingList[0])\r\n    // if (formConfInDB) {\r\n    //   this.formConf = formConfInDB\r\n    // }\r\n    loadBeautifier(btf => {\r\n      beautifier = btf\r\n    })\r\n    const clipboard = new ClipboardJS('#copyNode', {\r\n      text: trigger => {\r\n        const codeStr = this.generateCode()\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '代码已复制到剪切板，可粘贴。',\r\n          type: 'success'\r\n        })\r\n        return codeStr\r\n      }\r\n    })\r\n    clipboard.on('error', e => {\r\n      this.$message.error('代码复制失败')\r\n    })\r\n  },\r\n  created() {\r\n    // 读取表单配置\r\n    const formId = this.$route.query && this.$route.query.formId\r\n    if (formId) {\r\n      getForm(formId).then(response => {\r\n        const data = response.data\r\n        this.form = {\r\n          id: data.id,\r\n          name: data.name,\r\n          status: data.status,\r\n          remark: data.remark\r\n        }\r\n        this.formConf = JSON.parse(data.conf)\r\n        this.drawingList = decodeFields(data.fields)\r\n        // 设置激活的表单项\r\n        this.activeData = this.drawingList[0]\r\n        this.activeId = this.activeData.__config__.formId\r\n        // 设置 idGlobal，避免重复\r\n        this.idGlobal += this.drawingList.length\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    setObjectValueReduce(obj, strKeys, data) {\r\n      const arr = strKeys.split('.')\r\n      arr.reduce((pre, item, i) => {\r\n        if (arr.length === i + 1) {\r\n          pre[item] = data\r\n        } else if (!isObjectObject(pre[item])) {\r\n          pre[item] = {}\r\n        }\r\n        return pre[item]\r\n      }, obj)\r\n    },\r\n    setRespData(component, resp) {\r\n      const { dataPath, renderKey, dataConsumer } = component.__config__\r\n      if (!dataPath || !dataConsumer) return\r\n      const respData = dataPath.split('.').reduce((pre, item) => pre[item], resp)\r\n\r\n      // 将请求回来的数据，赋值到指定属性。\r\n      // 以el-tabel为例，根据Element文档，应该将数据赋值给el-tabel的data属性，所以dataConsumer的值应为'data';\r\n      // 此时赋值代码可写成 component[dataConsumer] = respData；\r\n      // 但为支持更深层级的赋值（如：dataConsumer的值为'options.data'）,使用setObjectValueReduce\r\n      this.setObjectValueReduce(component, dataConsumer, respData)\r\n      const i = this.drawingList.findIndex(item => item.__config__.renderKey === renderKey)\r\n      if (i > -1) this.$set(this.drawingList, i, component)\r\n    },\r\n    fetchData(component) {\r\n      const { dataType, method, url } = component.__config__\r\n      if (dataType === 'dynamic' && method && url) {\r\n        this.setLoading(component, true)\r\n        this.$axios({\r\n          method,\r\n          url\r\n        }).then(resp => {\r\n          this.setLoading(component, false)\r\n          this.setRespData(component, resp.data)\r\n        })\r\n      }\r\n    },\r\n    setLoading(component, val) {\r\n      const { directives } = component\r\n      if (Array.isArray(directives)) {\r\n        const t = directives.find(d => d.name === 'loading')\r\n        if (t) t.value = val\r\n      }\r\n    },\r\n    activeFormItem(currentItem) {\r\n      this.activeData = currentItem\r\n      this.activeId = currentItem.__config__.formId\r\n    },\r\n    onEnd(obj) {\r\n      if (obj.from !== obj.to) {\r\n        this.fetchData(tempActiveData)\r\n        this.activeData = tempActiveData\r\n        this.activeId = this.idGlobal\r\n      }\r\n    },\r\n    addComponent(item) {\r\n      const clone = this.cloneComponent(item)\r\n      this.fetchData(clone)\r\n      this.drawingList.push(clone)\r\n      this.activeFormItem(clone)\r\n    },\r\n    cloneComponent(origin) {\r\n      const clone = deepClone(origin)\r\n      const config = clone.__config__\r\n      config.span = this.formConf.span // 生成代码时，会根据span做精简判断\r\n      this.createIdAndKey(clone)\r\n      clone.placeholder !== undefined && (clone.placeholder += config.label)\r\n      tempActiveData = clone\r\n      return tempActiveData\r\n    },\r\n    createIdAndKey(item) {\r\n      const config = item.__config__\r\n      config.formId = ++this.idGlobal\r\n      config.renderKey = `${config.formId}${+new Date()}` // 改变renderKey后可以实现强制更新组件\r\n      if (config.layout === 'colFormItem') {\r\n        item.__vModel__ = `field${this.idGlobal}`\r\n      } else if (config.layout === 'rowFormItem') {\r\n        config.componentName = `row${this.idGlobal}`\r\n        !Array.isArray(config.children) && (config.children = [])\r\n        delete config.label // rowFormItem无需配置label属性\r\n      }\r\n      if (Array.isArray(config.children)) {\r\n        config.children = config.children.map(childItem => this.createIdAndKey(childItem))\r\n      }\r\n      return item\r\n    },\r\n    // 获得表单数据\r\n    AssembleFormData() {\r\n      this.formData = {\r\n        fields: deepClone(this.drawingList),\r\n        ...this.formConf\r\n      }\r\n    },\r\n    save() {\r\n      // this.AssembleFormData()\r\n      // console.log(this.formData)\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (!valid) {\r\n          return;\r\n        }\r\n        const form = {\r\n          conf: JSON.stringify(this.formConf), // 表单配置\r\n          fields: this.encodeFields(), // 表单项的数组\r\n          ...this.form // 表单名等\r\n        }\r\n        // 修改的提交\r\n        if (this.form.id != null) {\r\n          updateForm(form).then(response => {\r\n            this.$modal.msgSuccess(\"修改成功\");\r\n            this.close()\r\n          });\r\n          return;\r\n        }\r\n        // 添加的提交\r\n        createForm(form).then(response => {\r\n          this.$modal.msgSuccess(\"新增成功\");\r\n          this.close()\r\n        });\r\n      });\r\n    },\r\n    /** 关闭按钮 */\r\n    close() {\r\n      this.$tab.closeOpenPage({ path: \"/bpm/manager/form\" });\r\n    },\r\n    encodeFields() {\r\n      const fields = []\r\n      this.drawingList.forEach(item => {\r\n        fields.push(JSON.stringify(item))\r\n      })\r\n      return fields\r\n    },\r\n    generate(data) {\r\n      const func = this[`exec${titleCase(this.operationType)}`]\r\n      this.generateConf = data\r\n      func && func(data)\r\n    },\r\n    execRun(data) {\r\n      this.AssembleFormData()\r\n      this.drawerVisible = true\r\n    },\r\n    execDownload(data) {\r\n      const codeStr = this.generateCode()\r\n      const blob = new Blob([codeStr], { type: 'text/plain;charset=utf-8' })\r\n      saveAs(blob, data.fileName)\r\n    },\r\n    execCopy(data) {\r\n      document.getElementById('copyNode').click()\r\n    },\r\n    empty() {\r\n      this.$confirm('确定要清空所有组件吗？', '提示', { type: 'warning' }).then(\r\n        () => {\r\n          this.drawingList = []\r\n          this.idGlobal = 100\r\n        }\r\n      )\r\n    },\r\n    drawingItemCopy(item, list) {\r\n      let clone = deepClone(item)\r\n      clone = this.createIdAndKey(clone)\r\n      list.push(clone)\r\n      this.activeFormItem(clone)\r\n    },\r\n    drawingItemDelete(index, list) {\r\n      list.splice(index, 1)\r\n      this.$nextTick(() => {\r\n        const len = this.drawingList.length\r\n        if (len) {\r\n          this.activeFormItem(this.drawingList[len - 1])\r\n        }\r\n      })\r\n    },\r\n    generateCode() {\r\n      const { type } = this.generateConf\r\n      this.AssembleFormData()\r\n      const script = vueScript(makeUpJs(this.formData, type))\r\n      const html = vueTemplate(makeUpHtml(this.formData, type))\r\n      const css = cssStyle(makeUpCss(this.formData))\r\n      return beautifier.html(html + script + css, beautifierConf.html)\r\n    },\r\n    showJson() {\r\n      this.AssembleFormData()\r\n      this.jsonDrawerVisible = true\r\n    },\r\n    download() {\r\n      this.dialogVisible = true\r\n      this.showFileName = true\r\n      this.operationType = 'download'\r\n    },\r\n    run() {\r\n      this.dialogVisible = true\r\n      this.showFileName = false\r\n      this.operationType = 'run'\r\n    },\r\n    copy() {\r\n      this.dialogVisible = true\r\n      this.showFileName = false\r\n      this.operationType = 'copy'\r\n    },\r\n    tagChange(newTag) {\r\n      newTag = this.cloneComponent(newTag)\r\n      const config = newTag.__config__\r\n      newTag.__vModel__ = this.activeData.__vModel__\r\n      config.formId = this.activeId\r\n      config.span = this.activeData.__config__.span\r\n      this.activeData.__config__.tag = config.tag\r\n      this.activeData.__config__.tagIcon = config.tagIcon\r\n      this.activeData.__config__.document = config.document\r\n      if (typeof this.activeData.__config__.defaultValue === typeof config.defaultValue) {\r\n        config.defaultValue = this.activeData.__config__.defaultValue\r\n      }\r\n      Object.keys(newTag).forEach(key => {\r\n        if (this.activeData[key] !== undefined) {\r\n          newTag[key] = this.activeData[key]\r\n        }\r\n      })\r\n      this.activeData = newTag\r\n      this.updateDrawingList(newTag, this.drawingList)\r\n    },\r\n    updateDrawingList(newTag, list) {\r\n      const index = list.findIndex(item => item.__config__.formId === this.activeId)\r\n      if (index > -1) {\r\n        list.splice(index, 1, newTag)\r\n      } else {\r\n        list.forEach(item => {\r\n          if (Array.isArray(item.__config__.children)) this.updateDrawingList(newTag, item.__config__.children)\r\n        })\r\n      }\r\n    },\r\n    refreshJson(data) {\r\n      this.drawingList = deepClone(data.fields)\r\n      delete data.fields\r\n      this.formConf = data\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import '@/styles/home';\r\n</style>\r\n"]}]}