{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\mp\\components\\wx-video-play\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\views\\mp\\components\\wx-video-play\\main.vue","mtime":1704630438014},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovLyDlvJXlhaUgdmlkZW9QbGF5ZXIg55u45YWz57uE5Lu244CC5pWZ56iL77yaaHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTIzMDU2OTQyMjgxNjU0Mjg1DQppbXBvcnQgeyB2aWRlb1BsYXllciB9IGZyb20gJ3Z1ZS12aWRlby1wbGF5ZXInDQpyZXF1aXJlKCd2aWRlby5qcy9kaXN0L3ZpZGVvLWpzLmNzcycpDQpyZXF1aXJlKCd2dWUtdmlkZW8tcGxheWVyL3NyYy9jdXN0b20tdGhlbWUuY3NzJykNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAid3hWaWRlb1BsYXllciIsDQogIHByb3BzOiB7DQogICAgdXJsOiB7IC8vIOinhumikeWcsOWdgO+8jOS+i+WmguivtO+8mmh0dHBzOi8vd3d3LmlvY29kZXIuY24veHh4Lm1wNA0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9LA0KICB9LA0KICBjb21wb25lbnRzOiB7DQogICAgdmlkZW9QbGF5ZXINCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZGlhbG9nVmlkZW86ZmFsc2UsDQogICAgICBwbGF5ZXJPcHRpb25zOiB7DQogICAgICAgIHBsYXliYWNrUmF0ZXM6IFswLjUsIDEuMCwgMS41LCAyLjBdLCAvLyDmkq3mlL7pgJ/luqYNCiAgICAgICAgYXV0b3BsYXk6IGZhbHNlLCAvLyDlpoLmnpwgdHJ1ZSzmtY/op4jlmajlh4blpIflpb3ml7blvIDlp4vlm57mlL7jgIINCiAgICAgICAgbXV0ZWQ6IGZhbHNlLCAvLyDpu5jorqTmg4XlhrXkuIvlsIbkvJrmtojpmaTku7vkvZXpn7PpopHjgIINCiAgICAgICAgbG9vcDogZmFsc2UsIC8vIOWvvOiHtOinhumikeS4gOe7k+adn+WwsemHjeaWsOW8gOWni+OAgg0KICAgICAgICBwcmVsb2FkOiAnYXV0bycsIC8vIOW7uuiurua1j+iniOWZqOWcqCA8dmlkZW8+IOWKoOi9veWFg+e0oOWQjuaYr+WQpuW6lOivpeW8gOWni+S4i+i9veinhumikeaVsOaNruOAgmF1dG8g5rWP6KeI5Zmo6YCJ5oup5pyA5L2z6KGM5Li6LOeri+WNs+W8gOWni+WKoOi9veinhumike+8iOWmguaenOa1j+iniOWZqOaUr+aMge+8iQ0KICAgICAgICBsYW5ndWFnZTogJ3poLUNOJywNCiAgICAgICAgYXNwZWN0UmF0aW86ICcxNjo5JywgLy8g5bCG5pKt5pS+5Zmo572u5LqO5rWB55WF5qih5byP77yM5bm25Zyo6K6h566X5pKt5pS+5Zmo55qE5Yqo5oCB5aSn5bCP5pe25L2/55So6K+l5YC844CC5YC85bqU6K+l5Luj6KGo5LiA5Liq5q+U5L6LIC0g55So5YaS5Y+35YiG6ZqU55qE5Lik5Liq5pWw5a2X77yI5L6L5aaCIjE2Ojki5oiWIjQ6MyLvvIkNCiAgICAgICAgZmx1aWQ6IHRydWUsIC8vIOW9k3RydWXml7bvvIxWaWRlby5qcyBwbGF5ZXIg5bCG5oul5pyJ5rWB5L2T5aSn5bCP44CC5o2i5Y+l6K+d6K+077yM5a6D5bCG5oyJ5q+U5L6L57yp5pS+5Lul6YCC5bqU5YW25a655Zmo44CCDQogICAgICAgIHNvdXJjZXM6IFt7DQogICAgICAgICAgdHlwZTogInZpZGVvL21wNCIsDQogICAgICAgICAgc3JjOiAiIiAvLyDkvaDnmoTop4bpopHlnLDlnYDvvIjlv4XloavvvInjgJDph43opoHjgJENCiAgICAgICAgfV0sDQogICAgICAgIHBvc3RlcjogIiIsIC8vIOS9oOeahOWwgemdouWcsOWdgA0KICAgICAgICB3aWR0aDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLA0KICAgICAgICBub3RTdXBwb3J0ZWRNZXNzYWdlOiAn5q2k6KeG6aKR5pqC5peg5rOV5pKt5pS+77yM6K+356iN5ZCO5YaN6K+VJywgLy/lhYHorrjopobnm5YgVmlkZW8uanMg5peg5rOV5pKt5pS+5aqS5L2T5rqQ5pe25pi+56S655qE6buY6K6k5L+h5oGv44CCDQogICAgICAgIGNvbnRyb2xCYXI6IHsNCiAgICAgICAgICB0aW1lRGl2aWRlcjogdHJ1ZSwNCiAgICAgICAgICBkdXJhdGlvbkRpc3BsYXk6IHRydWUsDQogICAgICAgICAgcmVtYWluaW5nVGltZURpc3BsYXk6IGZhbHNlLA0KICAgICAgICAgIGZ1bGxzY3JlZW5Ub2dnbGU6IHRydWUgIC8v5YWo5bGP5oyJ6ZKuDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBwbGF5VmlkZW8oKXsNCiAgICAgIHRoaXMuZGlhbG9nVmlkZW8gPSB0cnVlDQogICAgICAvLyDorr7nva7lnLDlnYANCiAgICAgIHRoaXMuJHNldCh0aGlzLnBsYXllck9wdGlvbnMuc291cmNlc1swXSwgJ3NyYycsIHRoaXMudXJsKQ0KICAgIH0sDQogICAgY2xvc2VEaWFsb2coKXsNCiAgICAgIC8vIOaaguWBnOaSreaUvg0KICAgICAgdGhpcy4kcmVmcy52aWRlb1BsYXllci5wbGF5ZXIucGF1c2UoKQ0KICAgIH0sDQogICAgb25QbGF5ZXJQbGF5KHBsYXllcikgew0KICAgIH0sDQogICAgb25QbGF5ZXJQYXVzZShwbGF5ZXIpIHsNCiAgICB9LA0KICB9DQp9Ow0K"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";AA8BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"src/views/mp/components/wx-video-play","sourcesContent":["<!--\r\n  - Copyright (C) 2018-2019\r\n  - All rights reserved, Designed By www.joolun.com\r\n  【微信消息 - 视频】\r\n  芋道源码：\r\n  ① bug 修复：\r\n    1）joolun 的做法：使用 mediaId 从微信公众号，下载对应的 mp4 素材，从而播放内容；\r\n      存在的问题：mediaId 有效期是 3 天，超过时间后无法播放\r\n    2）重构后的做法：后端接收到微信公众号的视频消息后，将视频消息的 media_id 的文件内容保存到文件服务器中，这样前端可以直接使用 URL 播放。\r\n  ② 体验优化：弹窗关闭后，自动暂停视频的播放\r\n-->\r\n<template>\r\n  <div>\r\n    <!-- 提示 -->\r\n    <div @click=\"playVideo()\">\r\n      <i class=\"el-icon-video-play\" style=\"font-size: 40px!important;\" ></i>\r\n      <p>点击播放视频</p>\r\n    </div>\r\n\r\n    <!-- 弹窗播放 -->\r\n    <el-dialog title=\"视频播放\" :visible.sync=\"dialogVideo\" width=\"40%\" append-to-body @close=\"closeDialog\">\r\n      <video-player v-if=\"playerOptions.sources[0].src\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\"\r\n                    :playsinline=\"true\" :options=\"playerOptions\"\r\n                    @play=\"onPlayerPlay($event)\" @pause=\"onPlayerPause($event)\">\r\n      </video-player>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入 videoPlayer 相关组件。教程：https://juejin.cn/post/6923056942281654285\r\nimport { videoPlayer } from 'vue-video-player'\r\nrequire('video.js/dist/video-js.css')\r\nrequire('vue-video-player/src/custom-theme.css')\r\n\r\nexport default {\r\n  name: \"wxVideoPlayer\",\r\n  props: {\r\n    url: { // 视频地址，例如说：https://www.iocoder.cn/xxx.mp4\r\n      type: String,\r\n      required: true\r\n    },\r\n  },\r\n  components: {\r\n    videoPlayer\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVideo:false,\r\n      playerOptions: {\r\n        playbackRates: [0.5, 1.0, 1.5, 2.0], // 播放速度\r\n        autoplay: false, // 如果 true,浏览器准备好时开始回放。\r\n        muted: false, // 默认情况下将会消除任何音频。\r\n        loop: false, // 导致视频一结束就重新开始。\r\n        preload: 'auto', // 建议浏览器在 <video> 加载元素后是否应该开始下载视频数据。auto 浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\r\n        language: 'zh-CN',\r\n        aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n        fluid: true, // 当true时，Video.js player 将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\r\n        sources: [{\r\n          type: \"video/mp4\",\r\n          src: \"\" // 你的视频地址（必填）【重要】\r\n        }],\r\n        poster: \"\", // 你的封面地址\r\n        width: document.documentElement.clientWidth,\r\n        notSupportedMessage: '此视频暂无法播放，请稍后再试', //允许覆盖 Video.js 无法播放媒体源时显示的默认信息。\r\n        controlBar: {\r\n          timeDivider: true,\r\n          durationDisplay: true,\r\n          remainingTimeDisplay: false,\r\n          fullscreenToggle: true  //全屏按钮\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    playVideo(){\r\n      this.dialogVideo = true\r\n      // 设置地址\r\n      this.$set(this.playerOptions.sources[0], 'src', this.url)\r\n    },\r\n    closeDialog(){\r\n      // 暂停播放\r\n      this.$refs.videoPlayer.player.pause()\r\n    },\r\n    onPlayerPlay(player) {\r\n    },\r\n    onPlayerPause(player) {\r\n    },\r\n  }\r\n};\r\n</script>\r\n"]}]}