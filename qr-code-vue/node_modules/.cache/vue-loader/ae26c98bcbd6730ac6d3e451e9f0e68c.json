{"remainingRequest":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\penal\\listeners\\ElementListeners.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\src\\components\\bpmnProcessDesigner\\package\\penal\\listeners\\ElementListeners.vue","mtime":1704630437717},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\89425\\IdeaProjects\\qr-code-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBjcmVhdGVMaXN0ZW5lck9iamVjdCwgdXBkYXRlRWxlbWVudEV4dGVuc2lvbnMgfSBmcm9tICIuLi8uLi91dGlscyI7DQppbXBvcnQgeyBpbml0TGlzdGVuZXJUeXBlLCBpbml0TGlzdGVuZXJGb3JtLCBsaXN0ZW5lclR5cGUsIGZpZWxkVHlwZSB9IGZyb20gIi4vdXRpbFNlbGYiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJFbGVtZW50TGlzdGVuZXJzIiwNCiAgcHJvcHM6IHsNCiAgICBpZDogU3RyaW5nLA0KICAgIHR5cGU6IFN0cmluZw0KICB9LA0KICBpbmplY3Q6IHsNCiAgICBwcmVmaXg6ICJwcmVmaXgiLA0KICAgIHdpZHRoOiAid2lkdGgiDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGVsZW1lbnRMaXN0ZW5lcnNMaXN0OiBbXSwgLy8g55uR5ZCs5Zmo5YiX6KGoDQogICAgICBsaXN0ZW5lckZvcm06IHt9LCAvLyDnm5HlkKzlmajor6bmg4XooajljZUNCiAgICAgIGxpc3RlbmVyRm9ybU1vZGVsVmlzaWJsZTogZmFsc2UsIC8vIOebkeWQrOWZqCDnvJbovpEg5L6n6L655qCP5pi+56S654q25oCBDQogICAgICBmaWVsZHNMaXN0T2ZMaXN0ZW5lcjogW10sDQogICAgICBsaXN0ZW5lckZpZWxkRm9ybToge30sIC8vIOebkeWQrOWZqCDms6jlhaXlrZfmrrUg6K+m5oOF6KGo5Y2VDQogICAgICBsaXN0ZW5lckZpZWxkRm9ybU1vZGVsVmlzaWJsZTogZmFsc2UsIC8vIOebkeWQrOWZqCDms6jlhaXlrZfmrrXooajljZXlvLnnqpcg5pi+56S654q25oCBDQogICAgICBlZGl0aW5nTGlzdGVuZXJJbmRleDogLTEsIC8vIOebkeWQrOWZqOaJgOWcqOS4i+agh++8jC0xIOS4uuaWsOWing0KICAgICAgZWRpdGluZ0xpc3RlbmVyRmllbGRJbmRleDogLTEsIC8vIOWtl+auteaJgOWcqOS4i+agh++8jC0xIOS4uuaWsOWing0KICAgICAgbGlzdGVuZXJUeXBlT2JqZWN0OiBsaXN0ZW5lclR5cGUsDQogICAgICBmaWVsZFR5cGVPYmplY3Q6IGZpZWxkVHlwZQ0KICAgIH07DQogIH0sDQogIHdhdGNoOiB7DQogICAgaWQ6IHsNCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwNCiAgICAgIGhhbmRsZXIodmFsKSB7DQogICAgICAgIHZhbCAmJiB2YWwubGVuZ3RoICYmIHRoaXMuJG5leHRUaWNrKCgpID0+IHRoaXMucmVzZXRMaXN0ZW5lcnNMaXN0KCkpOw0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHJlc2V0TGlzdGVuZXJzTGlzdCgpIHsNCiAgICAgIHRoaXMuYnBtbkVsZW1lbnQgPSB3aW5kb3cuYnBtbkluc3RhbmNlcy5icG1uRWxlbWVudDsNCiAgICAgIHRoaXMub3RoZXJFeHRlbnNpb25MaXN0ID0gW107DQogICAgICB0aGlzLmJwbW5FbGVtZW50TGlzdGVuZXJzID0NCiAgICAgICAgdGhpcy5icG1uRWxlbWVudC5idXNpbmVzc09iamVjdD8uZXh0ZW5zaW9uRWxlbWVudHM/LnZhbHVlcz8uZmlsdGVyKGV4ID0+IGV4LiR0eXBlID09PSBgJHt0aGlzLnByZWZpeH06RXhlY3V0aW9uTGlzdGVuZXJgKSA/PyBbXTsNCiAgICAgIHRoaXMuZWxlbWVudExpc3RlbmVyc0xpc3QgPSB0aGlzLmJwbW5FbGVtZW50TGlzdGVuZXJzLm1hcChsaXN0ZW5lciA9PiBpbml0TGlzdGVuZXJUeXBlKGxpc3RlbmVyKSk7DQogICAgfSwNCiAgICAvLyDmiZPlvIAg55uR5ZCs5Zmo6K+m5oOFIOS+p+i+ueagjw0KICAgIG9wZW5MaXN0ZW5lckZvcm0obGlzdGVuZXIsIGluZGV4KSB7DQogICAgICBpZiAobGlzdGVuZXIpIHsNCiAgICAgICAgdGhpcy5saXN0ZW5lckZvcm0gPSBpbml0TGlzdGVuZXJGb3JtKGxpc3RlbmVyKTsNCiAgICAgICAgdGhpcy5lZGl0aW5nTGlzdGVuZXJJbmRleCA9IGluZGV4Ow0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5saXN0ZW5lckZvcm0gPSB7fTsNCiAgICAgICAgdGhpcy5lZGl0aW5nTGlzdGVuZXJJbmRleCA9IC0xOyAvLyDmoIforrDkuLrmlrDlop4NCiAgICAgIH0NCiAgICAgIGlmIChsaXN0ZW5lciAmJiBsaXN0ZW5lci5maWVsZHMpIHsNCiAgICAgICAgdGhpcy5maWVsZHNMaXN0T2ZMaXN0ZW5lciA9IGxpc3RlbmVyLmZpZWxkcy5tYXAoZmllbGQgPT4gKHsgLi4uZmllbGQsIGZpZWxkVHlwZTogZmllbGQuc3RyaW5nID8gInN0cmluZyIgOiAiZXhwcmVzc2lvbiIgfSkpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5maWVsZHNMaXN0T2ZMaXN0ZW5lciA9IFtdOw0KICAgICAgICB0aGlzLiRzZXQodGhpcy5saXN0ZW5lckZvcm0sICJmaWVsZHMiLCBbXSk7DQogICAgICB9DQogICAgICAvLyDmiZPlvIDkvqfovrnmoI/lubbmuIXmpZrpqozor4HnirbmgIENCiAgICAgIHRoaXMubGlzdGVuZXJGb3JtTW9kZWxWaXNpYmxlID0gdHJ1ZTsNCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgaWYgKHRoaXMuJHJlZnNbImxpc3RlbmVyRm9ybVJlZiJdKSB0aGlzLiRyZWZzWyJsaXN0ZW5lckZvcm1SZWYiXS5jbGVhclZhbGlkYXRlKCk7DQogICAgICB9KTsNCiAgICB9LA0KICAgIC8vIOaJk+W8gOebkeWQrOWZqOWtl+autee8lui+keW8ueeqlw0KICAgIG9wZW5MaXN0ZW5lckZpZWxkRm9ybShmaWVsZCwgaW5kZXgpIHsNCiAgICAgIHRoaXMubGlzdGVuZXJGaWVsZEZvcm0gPSBmaWVsZCA/IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZmllbGQpKSA6IHt9Ow0KICAgICAgdGhpcy5lZGl0aW5nTGlzdGVuZXJGaWVsZEluZGV4ID0gZmllbGQgPyBpbmRleCA6IC0xOw0KICAgICAgdGhpcy5saXN0ZW5lckZpZWxkRm9ybU1vZGVsVmlzaWJsZSA9IHRydWU7DQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgIGlmICh0aGlzLiRyZWZzWyJsaXN0ZW5lckZpZWxkRm9ybVJlZiJdKSB0aGlzLiRyZWZzWyJsaXN0ZW5lckZpZWxkRm9ybVJlZiJdLmNsZWFyVmFsaWRhdGUoKTsNCiAgICAgIH0pOw0KICAgIH0sDQogICAgLy8g5L+d5a2Y55uR5ZCs5Zmo5rOo5YWl5a2X5q61DQogICAgYXN5bmMgc2F2ZUxpc3RlbmVyRmlsZWQoKSB7DQogICAgICBsZXQgdmFsaWRhdGVTdGF0dXMgPSBhd2FpdCB0aGlzLiRyZWZzWyJsaXN0ZW5lckZpZWxkRm9ybVJlZiJdLnZhbGlkYXRlKCk7DQogICAgICBpZiAoIXZhbGlkYXRlU3RhdHVzKSByZXR1cm47IC8vIOmqjOivgeS4jemAmui/h+ebtOaOpei/lOWbng0KICAgICAgaWYgKHRoaXMuZWRpdGluZ0xpc3RlbmVyRmllbGRJbmRleCA9PT0gLTEpIHsNCiAgICAgICAgdGhpcy5maWVsZHNMaXN0T2ZMaXN0ZW5lci5wdXNoKHRoaXMubGlzdGVuZXJGaWVsZEZvcm0pOw0KICAgICAgICB0aGlzLmxpc3RlbmVyRm9ybS5maWVsZHMucHVzaCh0aGlzLmxpc3RlbmVyRmllbGRGb3JtKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuZmllbGRzTGlzdE9mTGlzdGVuZXIuc3BsaWNlKHRoaXMuZWRpdGluZ0xpc3RlbmVyRmllbGRJbmRleCwgMSwgdGhpcy5saXN0ZW5lckZpZWxkRm9ybSk7DQogICAgICAgIHRoaXMubGlzdGVuZXJGb3JtLmZpZWxkcy5zcGxpY2UodGhpcy5lZGl0aW5nTGlzdGVuZXJGaWVsZEluZGV4LCAxLCB0aGlzLmxpc3RlbmVyRmllbGRGb3JtKTsNCiAgICAgIH0NCiAgICAgIHRoaXMubGlzdGVuZXJGaWVsZEZvcm1Nb2RlbFZpc2libGUgPSBmYWxzZTsNCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+ICh0aGlzLmxpc3RlbmVyRmllbGRGb3JtID0ge30pKTsNCiAgICB9LA0KICAgIC8vIOenu+mZpOebkeWQrOWZqOWtl+autQ0KICAgIHJlbW92ZUxpc3RlbmVyRmllbGQoZmllbGQsIGluZGV4KSB7DQogICAgICB0aGlzLiRjb25maXJtKCLnoa7orqTnp7vpmaTor6XlrZfmrrXlkJfvvJ8iLCAi5o+Q56S6Iiwgew0KICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogIuehriDorqQiLA0KICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAi5Y+WIOa2iCINCiAgICAgIH0pDQogICAgICAgIC50aGVuKCgpID0+IHsNCiAgICAgICAgICB0aGlzLmZpZWxkc0xpc3RPZkxpc3RlbmVyLnNwbGljZShpbmRleCwgMSk7DQogICAgICAgICAgdGhpcy5saXN0ZW5lckZvcm0uZmllbGRzLnNwbGljZShpbmRleCwgMSk7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoKSA9PiBjb25zb2xlLmluZm8oIuaTjeS9nOWPlua2iCIpKTsNCiAgICB9LA0KICAgIC8vIOenu+mZpOebkeWQrOWZqA0KICAgIHJlbW92ZUxpc3RlbmVyKGxpc3RlbmVyLCBpbmRleCkgew0KICAgICAgdGhpcy4kY29uZmlybSgi56Gu6K6k56e76Zmk6K+l55uR5ZCs5Zmo5ZCX77yfIiwgIuaPkOekuiIsIHsNCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICLnoa4g6K6kIiwNCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPliDmtogiDQogICAgICB9KQ0KICAgICAgICAudGhlbigoKSA9PiB7DQogICAgICAgICAgdGhpcy5icG1uRWxlbWVudExpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpOw0KICAgICAgICAgIHRoaXMuZWxlbWVudExpc3RlbmVyc0xpc3Quc3BsaWNlKGluZGV4LCAxKTsNCiAgICAgICAgICB1cGRhdGVFbGVtZW50RXh0ZW5zaW9ucyh0aGlzLmJwbW5FbGVtZW50LCB0aGlzLm90aGVyRXh0ZW5zaW9uTGlzdC5jb25jYXQodGhpcy5icG1uRWxlbWVudExpc3RlbmVycykpOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKCkgPT4gY29uc29sZS5pbmZvKCLmk43kvZzlj5bmtogiKSk7DQogICAgfSwNCiAgICAvLyDkv53lrZjnm5HlkKzlmajphY3nva4NCiAgICBhc3luYyBzYXZlTGlzdGVuZXJDb25maWcoKSB7DQogICAgICBsZXQgdmFsaWRhdGVTdGF0dXMgPSBhd2FpdCB0aGlzLiRyZWZzWyJsaXN0ZW5lckZvcm1SZWYiXS52YWxpZGF0ZSgpOw0KICAgICAgaWYgKCF2YWxpZGF0ZVN0YXR1cykgcmV0dXJuOyAvLyDpqozor4HkuI3pgJrov4fnm7TmjqXov5Tlm54NCiAgICAgIGNvbnN0IGxpc3RlbmVyT2JqZWN0ID0gY3JlYXRlTGlzdGVuZXJPYmplY3QodGhpcy5saXN0ZW5lckZvcm0sIGZhbHNlLCB0aGlzLnByZWZpeCk7DQogICAgICBpZiAodGhpcy5lZGl0aW5nTGlzdGVuZXJJbmRleCA9PT0gLTEpIHsNCiAgICAgICAgdGhpcy5icG1uRWxlbWVudExpc3RlbmVycy5wdXNoKGxpc3RlbmVyT2JqZWN0KTsNCiAgICAgICAgdGhpcy5lbGVtZW50TGlzdGVuZXJzTGlzdC5wdXNoKHRoaXMubGlzdGVuZXJGb3JtKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuYnBtbkVsZW1lbnRMaXN0ZW5lcnMuc3BsaWNlKHRoaXMuZWRpdGluZ0xpc3RlbmVySW5kZXgsIDEsIGxpc3RlbmVyT2JqZWN0KTsNCiAgICAgICAgdGhpcy5lbGVtZW50TGlzdGVuZXJzTGlzdC5zcGxpY2UodGhpcy5lZGl0aW5nTGlzdGVuZXJJbmRleCwgMSwgdGhpcy5saXN0ZW5lckZvcm0pOw0KICAgICAgfQ0KICAgICAgLy8g5L+d5a2Y5YW25LuW6YWN572uDQogICAgICB0aGlzLm90aGVyRXh0ZW5zaW9uTGlzdCA9IHRoaXMuYnBtbkVsZW1lbnQuYnVzaW5lc3NPYmplY3Q/LmV4dGVuc2lvbkVsZW1lbnRzPy52YWx1ZXM/LmZpbHRlcihleCA9PiBleC4kdHlwZSAhPT0gYCR7dGhpcy5wcmVmaXh9OkV4ZWN1dGlvbkxpc3RlbmVyYCkgPz8gW107DQogICAgICB1cGRhdGVFbGVtZW50RXh0ZW5zaW9ucyh0aGlzLmJwbW5FbGVtZW50LCB0aGlzLm90aGVyRXh0ZW5zaW9uTGlzdC5jb25jYXQodGhpcy5icG1uRWxlbWVudExpc3RlbmVycykpOw0KICAgICAgLy8gNC4g6ZqQ6JeP5L6n6L655qCPDQogICAgICB0aGlzLmxpc3RlbmVyRm9ybU1vZGVsVmlzaWJsZSA9IGZhbHNlOw0KICAgICAgdGhpcy5saXN0ZW5lckZvcm0gPSB7fTsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["ElementListeners.vue"],"names":[],"mappings":";AAkfile":"ElementListeners.vue","sourceRoot":"src/components/bpmnProcessDesigner/package/penal/listeners","sourcesContent":["<template>\r\n  <div class=\"panel-tab__content\">\r\n    <el-table :data=\"elementListenersList\" size=\"mini\" border>\r\n      <el-table-column label=\"序号\" width=\"50px\" type=\"index\" />\r\n      <el-table-column label=\"事件类型\" min-width=\"100px\" prop=\"event\" />\r\n      <el-table-column label=\"监听器类型\" min-width=\"100px\" show-overflow-tooltip :formatter=\"row => listenerTypeObject[row.listenerType]\" />\r\n      <el-table-column label=\"操作\" width=\"90px\">\r\n        <template v-slot=\"{ row, $index }\">\r\n          <el-button size=\"mini\" type=\"text\" @click=\"openListenerForm(row, $index)\">编辑</el-button>\r\n          <el-divider direction=\"vertical\" />\r\n          <el-button size=\"mini\" type=\"text\" style=\"color: #ff4d4f\" @click=\"removeListener(row, $index)\">移除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div class=\"element-drawer__button\">\r\n      <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"openListenerForm(null)\">添加监听器</el-button>\r\n    </div>\r\n\r\n    <!-- 监听器 编辑/创建 部分 -->\r\n    <el-drawer :visible.sync=\"listenerFormModelVisible\" title=\"执行监听器\" :size=\"`${width}px`\" append-to-body destroy-on-close>\r\n      <el-form size=\"mini\" :model=\"listenerForm\" label-width=\"96px\" ref=\"listenerFormRef\" @submit.native.prevent>\r\n        <el-form-item label=\"事件类型\" prop=\"event\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">\r\n          <el-select v-model=\"listenerForm.event\">\r\n            <el-option label=\"start\" value=\"start\" />\r\n            <el-option label=\"end\" value=\"end\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"监听器类型\" prop=\"listenerType\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">\r\n          <el-select v-model=\"listenerForm.listenerType\">\r\n            <el-option v-for=\"i in Object.keys(listenerTypeObject)\" :key=\"i\" :label=\"listenerTypeObject[i]\" :value=\"i\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item\r\n          v-if=\"listenerForm.listenerType === 'classListener'\"\r\n          label=\"Java类\"\r\n          prop=\"class\"\r\n          key=\"listener-class\"\r\n          :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerForm.class\" clearable />\r\n        </el-form-item>\r\n        <el-form-item\r\n          v-if=\"listenerForm.listenerType === 'expressionListener'\"\r\n          label=\"表达式\"\r\n          prop=\"expression\"\r\n          key=\"listener-expression\"\r\n          :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerForm.expression\" clearable />\r\n        </el-form-item>\r\n        <el-form-item\r\n          v-if=\"listenerForm.listenerType === 'delegateExpressionListener'\"\r\n          label=\"代理表达式\"\r\n          prop=\"delegateExpression\"\r\n          key=\"listener-delegate\"\r\n          :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerForm.delegateExpression\" clearable />\r\n        </el-form-item>\r\n        <template v-if=\"listenerForm.listenerType === 'scriptListener'\">\r\n          <el-form-item\r\n            label=\"脚本格式\"\r\n            prop=\"scriptFormat\"\r\n            key=\"listener-script-format\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请填写脚本格式' }\"\r\n          >\r\n            <el-input v-model=\"listenerForm.scriptFormat\" clearable />\r\n          </el-form-item>\r\n          <el-form-item\r\n            label=\"脚本类型\"\r\n            prop=\"scriptType\"\r\n            key=\"listener-script-type\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请选择脚本类型' }\"\r\n          >\r\n            <el-select v-model=\"listenerForm.scriptType\">\r\n              <el-option label=\"内联脚本\" value=\"inlineScript\" />\r\n              <el-option label=\"外部脚本\" value=\"externalScript\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item\r\n            v-if=\"listenerForm.scriptType === 'inlineScript'\"\r\n            label=\"脚本内容\"\r\n            prop=\"value\"\r\n            key=\"listener-script\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请填写脚本内容' }\"\r\n          >\r\n            <el-input v-model=\"listenerForm.value\" clearable />\r\n          </el-form-item>\r\n          <el-form-item\r\n            v-if=\"listenerForm.scriptType === 'externalScript'\"\r\n            label=\"资源地址\"\r\n            prop=\"resource\"\r\n            key=\"listener-resource\"\r\n            :rules=\"{ required: true, trigger: ['blur', 'change'], message: '请填写资源地址' }\"\r\n          >\r\n            <el-input v-model=\"listenerForm.resource\" clearable />\r\n          </el-form-item>\r\n        </template>\r\n      </el-form>\r\n      <el-divider />\r\n      <p class=\"listener-filed__title\">\r\n        <span><i class=\"el-icon-menu\"></i>注入字段：</span>\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"openListenerFieldForm(null)\">添加字段</el-button>\r\n      </p>\r\n      <el-table :data=\"fieldsListOfListener\" size=\"mini\" max-height=\"240\" border fit style=\"flex: none\">\r\n        <el-table-column label=\"序号\" width=\"50px\" type=\"index\" />\r\n        <el-table-column label=\"字段名称\" min-width=\"100px\" prop=\"name\" />\r\n        <el-table-column label=\"字段类型\" min-width=\"80px\" show-overflow-tooltip :formatter=\"row => fieldTypeObject[row.fieldType]\" />\r\n        <el-table-column label=\"字段值/表达式\" min-width=\"100px\" show-overflow-tooltip :formatter=\"row => row.string || row.expression\" />\r\n        <el-table-column label=\"操作\" width=\"100px\">\r\n          <template v-slot=\"{ row, $index }\">\r\n            <el-button size=\"mini\" type=\"text\" @click=\"openListenerFieldForm(row, $index)\">编辑</el-button>\r\n            <el-divider direction=\"vertical\" />\r\n            <el-button size=\"mini\" type=\"text\" style=\"color: #ff4d4f\" @click=\"removeListenerField(row, $index)\">移除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"element-drawer__button\">\r\n        <el-button size=\"mini\" @click=\"listenerFormModelVisible = false\">取 消</el-button>\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveListenerConfig\">保 存</el-button>\r\n      </div>\r\n    </el-drawer>\r\n\r\n    <!-- 注入西段 编辑/创建 部分 -->\r\n    <el-dialog title=\"字段配置\" :visible.sync=\"listenerFieldFormModelVisible\" width=\"600px\" append-to-body destroy-on-close>\r\n      <el-form :model=\"listenerFieldForm\" size=\"mini\" label-width=\"96px\" ref=\"listenerFieldFormRef\" style=\"height: 136px\" @submit.native.prevent>\r\n        <el-form-item label=\"字段名称：\" prop=\"name\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">\r\n          <el-input v-model=\"listenerFieldForm.name\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"字段类型：\" prop=\"fieldType\" :rules=\"{ required: true, trigger: ['blur', 'change'] }\">\r\n          <el-select v-model=\"listenerFieldForm.fieldType\">\r\n            <el-option v-for=\"i in Object.keys(fieldTypeObject)\" :key=\"i\" :label=\"fieldTypeObject[i]\" :value=\"i\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item\r\n          v-if=\"listenerFieldForm.fieldType === 'string'\"\r\n          label=\"字段值：\"\r\n          prop=\"string\"\r\n          key=\"field-string\"\r\n          :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerFieldForm.string\" clearable />\r\n        </el-form-item>\r\n        <el-form-item\r\n          v-if=\"listenerFieldForm.fieldType === 'expression'\"\r\n          label=\"表达式：\"\r\n          prop=\"expression\"\r\n          key=\"field-expression\"\r\n          :rules=\"{ required: true, trigger: ['blur', 'change'] }\"\r\n        >\r\n          <el-input v-model=\"listenerFieldForm.expression\" clearable />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template slot=\"footer\">\r\n        <el-button size=\"mini\" @click=\"listenerFieldFormModelVisible = false\">取 消</el-button>\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveListenerFiled\">确 定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { createListenerObject, updateElementExtensions } from \"../../utils\";\r\nimport { initListenerType, initListenerForm, listenerType, fieldType } from \"./utilSelf\";\r\n\r\nexport default {\r\n  name: \"ElementListeners\",\r\n  props: {\r\n    id: String,\r\n    type: String\r\n  },\r\n  inject: {\r\n    prefix: \"prefix\",\r\n    width: \"width\"\r\n  },\r\n  data() {\r\n    return {\r\n      elementListenersList: [], // 监听器列表\r\n      listenerForm: {}, // 监听器详情表单\r\n      listenerFormModelVisible: false, // 监听器 编辑 侧边栏显示状态\r\n      fieldsListOfListener: [],\r\n      listenerFieldForm: {}, // 监听器 注入字段 详情表单\r\n      listenerFieldFormModelVisible: false, // 监听器 注入字段表单弹窗 显示状态\r\n      editingListenerIndex: -1, // 监听器所在下标，-1 为新增\r\n      editingListenerFieldIndex: -1, // 字段所在下标，-1 为新增\r\n      listenerTypeObject: listenerType,\r\n      fieldTypeObject: fieldType\r\n    };\r\n  },\r\n  watch: {\r\n    id: {\r\n      immediate: true,\r\n      handler(val) {\r\n        val && val.length && this.$nextTick(() => this.resetListenersList());\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    resetListenersList() {\r\n      this.bpmnElement = window.bpmnInstances.bpmnElement;\r\n      this.otherExtensionList = [];\r\n      this.bpmnElementListeners =\r\n        this.bpmnElement.businessObject?.extensionElements?.values?.filter(ex => ex.$type === `${this.prefix}:ExecutionListener`) ?? [];\r\n      this.elementListenersList = this.bpmnElementListeners.map(listener => initListenerType(listener));\r\n    },\r\n    // 打开 监听器详情 侧边栏\r\n    openListenerForm(listener, index) {\r\n      if (listener) {\r\n        this.listenerForm = initListenerForm(listener);\r\n        this.editingListenerIndex = index;\r\n      } else {\r\n        this.listenerForm = {};\r\n        this.editingListenerIndex = -1; // 标记为新增\r\n      }\r\n      if (listener && listener.fields) {\r\n        this.fieldsListOfListener = listener.fields.map(field => ({ ...field, fieldType: field.string ? \"string\" : \"expression\" }));\r\n      } else {\r\n        this.fieldsListOfListener = [];\r\n        this.$set(this.listenerForm, \"fields\", []);\r\n      }\r\n      // 打开侧边栏并清楚验证状态\r\n      this.listenerFormModelVisible = true;\r\n      this.$nextTick(() => {\r\n        if (this.$refs[\"listenerFormRef\"]) this.$refs[\"listenerFormRef\"].clearValidate();\r\n      });\r\n    },\r\n    // 打开监听器字段编辑弹窗\r\n    openListenerFieldForm(field, index) {\r\n      this.listenerFieldForm = field ? JSON.parse(JSON.stringify(field)) : {};\r\n      this.editingListenerFieldIndex = field ? index : -1;\r\n      this.listenerFieldFormModelVisible = true;\r\n      this.$nextTick(() => {\r\n        if (this.$refs[\"listenerFieldFormRef\"]) this.$refs[\"listenerFieldFormRef\"].clearValidate();\r\n      });\r\n    },\r\n    // 保存监听器注入字段\r\n    async saveListenerFiled() {\r\n      let validateStatus = await this.$refs[\"listenerFieldFormRef\"].validate();\r\n      if (!validateStatus) return; // 验证不通过直接返回\r\n      if (this.editingListenerFieldIndex === -1) {\r\n        this.fieldsListOfListener.push(this.listenerFieldForm);\r\n        this.listenerForm.fields.push(this.listenerFieldForm);\r\n      } else {\r\n        this.fieldsListOfListener.splice(this.editingListenerFieldIndex, 1, this.listenerFieldForm);\r\n        this.listenerForm.fields.splice(this.editingListenerFieldIndex, 1, this.listenerFieldForm);\r\n      }\r\n      this.listenerFieldFormModelVisible = false;\r\n      this.$nextTick(() => (this.listenerFieldForm = {}));\r\n    },\r\n    // 移除监听器字段\r\n    removeListenerField(field, index) {\r\n      this.$confirm(\"确认移除该字段吗？\", \"提示\", {\r\n        confirmButtonText: \"确 认\",\r\n        cancelButtonText: \"取 消\"\r\n      })\r\n        .then(() => {\r\n          this.fieldsListOfListener.splice(index, 1);\r\n          this.listenerForm.fields.splice(index, 1);\r\n        })\r\n        .catch(() => console.info(\"操作取消\"));\r\n    },\r\n    // 移除监听器\r\n    removeListener(listener, index) {\r\n      this.$confirm(\"确认移除该监听器吗？\", \"提示\", {\r\n        confirmButtonText: \"确 认\",\r\n        cancelButtonText: \"取 消\"\r\n      })\r\n        .then(() => {\r\n          this.bpmnElementListeners.splice(index, 1);\r\n          this.elementListenersList.splice(index, 1);\r\n          updateElementExtensions(this.bpmnElement, this.otherExtensionList.concat(this.bpmnElementListeners));\r\n        })\r\n        .catch(() => console.info(\"操作取消\"));\r\n    },\r\n    // 保存监听器配置\r\n    async saveListenerConfig() {\r\n      let validateStatus = await this.$refs[\"listenerFormRef\"].validate();\r\n      if (!validateStatus) return; // 验证不通过直接返回\r\n      const listenerObject = createListenerObject(this.listenerForm, false, this.prefix);\r\n      if (this.editingListenerIndex === -1) {\r\n        this.bpmnElementListeners.push(listenerObject);\r\n        this.elementListenersList.push(this.listenerForm);\r\n      } else {\r\n        this.bpmnElementListeners.splice(this.editingListenerIndex, 1, listenerObject);\r\n        this.elementListenersList.splice(this.editingListenerIndex, 1, this.listenerForm);\r\n      }\r\n      // 保存其他配置\r\n      this.otherExtensionList = this.bpmnElement.businessObject?.extensionElements?.values?.filter(ex => ex.$type !== `${this.prefix}:ExecutionListener`) ?? [];\r\n      updateElementExtensions(this.bpmnElement, this.otherExtensionList.concat(this.bpmnElementListeners));\r\n      // 4. 隐藏侧边栏\r\n      this.listenerFormModelVisible = false;\r\n      this.listenerForm = {};\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}